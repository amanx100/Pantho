/*
 * firmware.c
 *
 * Created: 2/13/2015 11:52:53 PM
 *  Author: Aman
 */ 

#define F_CPU 8000000UL
#include <avr/io.h>
#include <stdlib.h>
//#include "myusart.h"
#include <util/delay.h>
#include <math.h>

void go_forward(void)
{
	PORTB |= (1<<PD0);
	PORTB &= ~(1<<PD1);
	PORTB |= (1<<PD2);
	PORTB &= ~(1<<PD3);
	
	TCCR1B |= (1<<1);
}

void go_backward(void)
{
	PORTB &= ~(1<<PD0);
	PORTB |= (1<<PD1);
	PORTB &= ~(1<<PD2);
	PORTB |= (1<<PD3);
	
	TCCR1B |= (1<<1);
}

void right_rotate(void)
{
	PORTB |= (1<<PD0);
	PORTB &= ~(1<<PD1);
	PORTB &= ~(1<<PD2);
	PORTB |= (1<<PD3);
	
	TCCR1B |= (1<<1);
}

void left_rotate(void)
{
	PORTB &= ~(1<<PD0);
	PORTB |= (1<<PD1);
	PORTB |= (1<<PD2);
	PORTB &= ~(1<<PD3);
	
	TCCR1B |= (1<<1);
}

void stay_stop(void)
{
	PORTB &= ~(1<<PD0);
	PORTB &= ~(1<<PD1);
	PORTB &= ~(1<<PD2);
	PORTB &= ~(1<<PD3);
	
	TCCR1B &= ~(1<<1);
}

void set_speed_R(uint16_t speed_b)
{
	OCR1B = speed_b;
}

void set_speed_L(uint16_t speed_a)
{
	OCR1A = speed_a;
}

int main(void)
{

	uint16_t speed=999;// LS=100, RS=100;
	
	PORTA = 03;
	DDRA = 00;
	
	PORTB=0x00;
	DDRB=0x0F;
	
	PORTC=0xFF;
	DDRC=0x00;
	
	PORTD=0x00;
	DDRD=0x30;
	
	//Timer Counter1 Initialization
	TCCR1A=0xA2;
	TCCR1B=0x18;
	TCNT1=0x0000;
	ICR1H=0x03;
	ICR1L=0xE8; //03E8=1000 in decimal
	OCR1A=speed;
	OCR1B=speed;
	
	//usart_init(9600); //USART Initialization
	
	start_tour:
	_delay_ms(3000);
	go_forward();
	
    while(1)
    {

		if (!((PINC&(1<<3)) && (PINC&(1<<4))))
		{
			if (PINC & (1<<3))
			{
				set_speed_R(800);
				while(!((PINC&(1<<3)) && (PINC&(1<<4))))
				{
					if (PINC == 0x00)
					{
						break;
					}
				}
				set_speed_R(speed);
			}
			else if (PINC & (1<<4))
			{
				set_speed_L(800);
				while(!((PINC&(1<<3)) && (PINC&(1<<4))))
				{
					if (PINC == 0x00)
					{
						break;
					}
				}
				set_speed_L(speed);
			}
			
		}
		
		if (PINC == 0x00)
		{
			break;
		}
    }
	
	stay_stop();
	
	while(1)
	{
		if (PINC == 24)
		{
			goto start_tour;
		}
	}
}