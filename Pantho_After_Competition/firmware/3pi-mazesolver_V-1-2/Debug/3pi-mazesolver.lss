
3pi-mazesolver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  00002802  00002896  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002802  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000077  0080014a  0080014a  000028e0  2**0
                  ALLOC
  3 .stab         00006624  00000000  00000000  000028e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008bbc  00000000  00000000  00008f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00011ac0  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e0  00000000  00000000  00011af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000014e9  00000000  00000000  00011bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007a4  00000000  00000000  000130b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000ffc  00000000  00000000  0001385d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  0001485c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000473  00000000  00000000  00014a5c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000806  00000000  00000000  00014ecf  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a8  00000000  00000000  000156d5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 00 	jmp	0xae	; 0xae <__dtors_end>
       4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      24:	0c 94 fb 0b 	jmp	0x17f6	; 0x17f6 <__vector_9>
      28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      34:	0c 94 46 08 	jmp	0x108c	; 0x108c <__vector_13>
      38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <go>:
      76:	4c 31 36 20 63 64 65 67 72 65 67 34 00              L16 cdegreg4.

00000083 <welcome>:
      83:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000008d <demo_name_line2>:
      8d:	73 6f 6c 76 65 72 00                                solver.

00000094 <demo_name_line1>:
      94:	4d 61 7a 65 00                                      Maze.

00000099 <welcome_line2>:
      99:	33 f7 20 52 6f 62 6f 74 00                          3. Robot.

000000a2 <welcome_line1>:
      a2:	20 50 6f 6c 6f 6c 75 00                              Pololu.

000000aa <__ctors_start>:
      aa:	c4 0c       	add	r12, r4

000000ac <__ctors_end>:
      ac:	c5 0c       	add	r12, r5

000000ae <__dtors_end>:
      ae:	11 24       	eor	r1, r1
      b0:	1f be       	out	0x3f, r1	; 63
      b2:	cf ef       	ldi	r28, 0xFF	; 255
      b4:	d8 e0       	ldi	r29, 0x08	; 8
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_copy_data>:
      ba:	11 e0       	ldi	r17, 0x01	; 1
      bc:	a0 e0       	ldi	r26, 0x00	; 0
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	e2 e0       	ldi	r30, 0x02	; 2
      c2:	f8 e2       	ldi	r31, 0x28	; 40
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x10>
      c6:	05 90       	lpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	aa 34       	cpi	r26, 0x4A	; 74
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0xc>

000000d0 <__do_clear_bss>:
      d0:	21 e0       	ldi	r18, 0x01	; 1
      d2:	aa e4       	ldi	r26, 0x4A	; 74
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a1 3c       	cpi	r26, 0xC1	; 193
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>

000000e0 <__do_global_ctors>:
      e0:	10 e0       	ldi	r17, 0x00	; 0
      e2:	cc ea       	ldi	r28, 0xAC	; 172
      e4:	d0 e0       	ldi	r29, 0x00	; 0
      e6:	04 c0       	rjmp	.+8      	; 0xf0 <__do_global_ctors+0x10>
      e8:	22 97       	sbiw	r28, 0x02	; 2
      ea:	fe 01       	movw	r30, r28
      ec:	0e 94 ba 12 	call	0x2574	; 0x2574 <__tablejump__>
      f0:	ca 3a       	cpi	r28, 0xAA	; 170
      f2:	d1 07       	cpc	r29, r17
      f4:	c9 f7       	brne	.-14     	; 0xe8 <__do_global_ctors+0x8>
      f6:	0e 94 44 02 	call	0x488	; 0x488 <main>
      fa:	0c 94 f4 13 	jmp	0x27e8	; 0x27e8 <__do_global_dtors>

000000fe <__bad_interrupt>:
      fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <load_custom_characters>:

// This function loads custom characters into the LCD.  Up to 8
// characters can be loaded; we use them for 7 levels of a bar graph.
void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     102:	60 e0       	ldi	r22, 0x00	; 0
     104:	88 e6       	ldi	r24, 0x68	; 104
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     10c:	61 e0       	ldi	r22, 0x01	; 1
     10e:	89 e6       	ldi	r24, 0x69	; 105
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     116:	62 e0       	ldi	r22, 0x02	; 2
     118:	8a e6       	ldi	r24, 0x6A	; 106
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     120:	63 e0       	ldi	r22, 0x03	; 3
     122:	8b e6       	ldi	r24, 0x6B	; 107
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     12a:	64 e0       	ldi	r22, 0x04	; 4
     12c:	8c e6       	ldi	r24, 0x6C	; 108
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     134:	65 e0       	ldi	r22, 0x05	; 5
     136:	8d e6       	ldi	r24, 0x6D	; 109
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     13e:	66 e0       	ldi	r22, 0x06	; 6
     140:	8e e6       	ldi	r24, 0x6E	; 110
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	0e 94 7b 09 	call	0x12f6	; 0x12f6 <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     148:	0c 94 fb 09 	jmp	0x13f6	; 0x13f6 <clear>

0000014c <display_readings>:
}

// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
     14c:	cf 92       	push	r12
     14e:	df 92       	push	r13
     150:	ef 92       	push	r14
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	cd b7       	in	r28, 0x3d	; 61
     15e:	de b7       	in	r29, 0x3e	; 62
     160:	2a 97       	sbiw	r28, 0x0a	; 10
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	de bf       	out	0x3e, r29	; 62
     168:	0f be       	out	0x3f, r0	; 63
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	8c 01       	movw	r16, r24
	unsigned char i;

	for(i=0;i<5;i++) {
     16e:	d1 2c       	mov	r13, r1
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     170:	8a e0       	ldi	r24, 0x0A	; 10
     172:	c8 2e       	mov	r12, r24

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     174:	95 e6       	ldi	r25, 0x65	; 101
     176:	e9 2e       	mov	r14, r25
     178:	f1 2c       	mov	r15, r1
	for(i=0;i<5;i++) {
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     17a:	e1 e3       	ldi	r30, 0x31	; 49
     17c:	f1 e0       	ldi	r31, 0x01	; 1
     17e:	de 01       	movw	r26, r28
     180:	11 96       	adiw	r26, 0x01	; 1
     182:	8c 2d       	mov	r24, r12
     184:	01 90       	ld	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	8a 95       	dec	r24
     18a:	e1 f7       	brne	.-8      	; 0x184 <display_readings+0x38>

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     18c:	f8 01       	movw	r30, r16
     18e:	81 91       	ld	r24, Z+
     190:	91 91       	ld	r25, Z+
     192:	8f 01       	movw	r16, r30
     194:	b7 01       	movw	r22, r14
     196:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	8c 0f       	add	r24, r28
     1a0:	9d 1f       	adc	r25, r29
     1a2:	68 0f       	add	r22, r24
     1a4:	79 1f       	adc	r23, r25

		// Display the bar graph character.
		print_character(c);
     1a6:	fb 01       	movw	r30, r22
     1a8:	80 81       	ld	r24, Z
     1aa:	0e 94 7e 09 	call	0x12fc	; 0x12fc <print_character>
// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;

	for(i=0;i<5;i++) {
     1ae:	d3 94       	inc	r13
     1b0:	f5 e0       	ldi	r31, 0x05	; 5
     1b2:	df 12       	cpse	r13, r31
     1b4:	e2 cf       	rjmp	.-60     	; 0x17a <display_readings+0x2e>
		char c = display_characters[calibrated_values[i]/101];

		// Display the bar graph character.
		print_character(c);
	}
}
     1b6:	2a 96       	adiw	r28, 0x0a	; 10
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	08 95       	ret

000001d4 <follow_segment>:
#include <pololu/3pi.h>

void follow_segment(int max)
{
     1d4:	2f 92       	push	r2
     1d6:	3f 92       	push	r3
     1d8:	4f 92       	push	r4
     1da:	5f 92       	push	r5
     1dc:	6f 92       	push	r6
     1de:	7f 92       	push	r7
     1e0:	8f 92       	push	r8
     1e2:	9f 92       	push	r9
     1e4:	af 92       	push	r10
     1e6:	bf 92       	push	r11
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	2a 97       	sbiw	r28, 0x0a	; 10
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
     208:	8c 01       	movw	r16, r24
	int last_proportional = 0;
	long integral=0;
     20a:	c1 2c       	mov	r12, r1
     20c:	d1 2c       	mov	r13, r1
     20e:	76 01       	movw	r14, r12
#include <pololu/3pi.h>

void follow_segment(int max)
{
	int last_proportional = 0;
     210:	21 2c       	mov	r2, r1
     212:	31 2c       	mov	r3, r1
		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     214:	50 e1       	ldi	r21, 0x10	; 16
     216:	45 2e       	mov	r4, r21
     218:	57 e2       	ldi	r21, 0x27	; 39
     21a:	55 2e       	mov	r5, r21
     21c:	61 2c       	mov	r6, r1
     21e:	71 2c       	mov	r7, r1

		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
     220:	88 24       	eor	r8, r8
     222:	99 24       	eor	r9, r9
     224:	88 1a       	sub	r8, r24
     226:	99 0a       	sbc	r9, r25
	long integral=0;

	while(1)
	{
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     228:	61 e0       	ldi	r22, 0x01	; 1
     22a:	ce 01       	movw	r24, r28
     22c:	01 96       	adiw	r24, 0x01	; 1
     22e:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>

		int proportional = ((int)position) - 2000;
     232:	80 5d       	subi	r24, 0xD0	; 208
     234:	97 40       	sbci	r25, 0x07	; 7
     236:	5c 01       	movw	r10, r24

		int derivative = proportional - last_proportional;
		integral += proportional;
     238:	aa 27       	eor	r26, r26
     23a:	97 fd       	sbrc	r25, 7
     23c:	a0 95       	com	r26
     23e:	ba 2f       	mov	r27, r26
     240:	c8 0e       	add	r12, r24
     242:	d9 1e       	adc	r13, r25
     244:	ea 1e       	adc	r14, r26
     246:	fb 1e       	adc	r15, r27

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     248:	c7 01       	movw	r24, r14
     24a:	b6 01       	movw	r22, r12
     24c:	a3 01       	movw	r20, r6
     24e:	92 01       	movw	r18, r4
     250:	0e 94 57 12 	call	0x24ae	; 0x24ae <__divmodsi4>
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);

		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
     254:	b5 01       	movw	r22, r10
     256:	62 19       	sub	r22, r2
     258:	73 09       	sbc	r23, r3
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     25a:	cb 01       	movw	r24, r22
     25c:	88 0f       	add	r24, r24
     25e:	99 1f       	adc	r25, r25
     260:	86 0f       	add	r24, r22
     262:	97 1f       	adc	r25, r23
     264:	97 fd       	sbrc	r25, 7
     266:	01 96       	adiw	r24, 0x01	; 1
     268:	fc 01       	movw	r30, r24
     26a:	f5 95       	asr	r31
     26c:	e7 95       	ror	r30
     26e:	e2 0f       	add	r30, r18
     270:	f3 1f       	adc	r31, r19
     272:	c5 01       	movw	r24, r10
     274:	64 e1       	ldi	r22, 0x14	; 20
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	0e 94 21 12 	call	0x2442	; 0x2442 <__divmodhi4>
     27c:	e6 0f       	add	r30, r22
     27e:	f7 1f       	adc	r31, r23
     280:	0e 17       	cp	r16, r30
     282:	1f 07       	cpc	r17, r31
     284:	0c f4       	brge	.+2      	; 0x288 <follow_segment+0xb4>
     286:	f8 01       	movw	r30, r16
     288:	cf 01       	movw	r24, r30
     28a:	e8 15       	cp	r30, r8
     28c:	f9 05       	cpc	r31, r9
     28e:	0c f4       	brge	.+2      	; 0x292 <follow_segment+0xbe>
     290:	c4 01       	movw	r24, r8
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
			set_motors(max+power_difference,max);
     292:	b8 01       	movw	r22, r16
		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
     294:	97 ff       	sbrs	r25, 7
     296:	03 c0       	rjmp	.+6      	; 0x29e <follow_segment+0xca>
			set_motors(max+power_difference,max);
     298:	80 0f       	add	r24, r16
     29a:	91 1f       	adc	r25, r17
     29c:	03 c0       	rjmp	.+6      	; 0x2a4 <follow_segment+0xd0>
		else
			set_motors(max,max-power_difference);
     29e:	68 1b       	sub	r22, r24
     2a0:	79 0b       	sbc	r23, r25
     2a2:	c8 01       	movw	r24, r16
     2a4:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>

		if(sensors[1] < 100 && sensors[2] < 100 && sensors[3] < 100)
     2a8:	8b 81       	ldd	r24, Y+3	; 0x03
     2aa:	9c 81       	ldd	r25, Y+4	; 0x04
     2ac:	84 36       	cpi	r24, 0x64	; 100
     2ae:	91 05       	cpc	r25, r1
     2b0:	50 f4       	brcc	.+20     	; 0x2c6 <follow_segment+0xf2>
     2b2:	8d 81       	ldd	r24, Y+5	; 0x05
     2b4:	9e 81       	ldd	r25, Y+6	; 0x06
     2b6:	84 36       	cpi	r24, 0x64	; 100
     2b8:	91 05       	cpc	r25, r1
     2ba:	28 f4       	brcc	.+10     	; 0x2c6 <follow_segment+0xf2>
     2bc:	8f 81       	ldd	r24, Y+7	; 0x07
     2be:	98 85       	ldd	r25, Y+8	; 0x08
     2c0:	84 36       	cpi	r24, 0x64	; 100
     2c2:	91 05       	cpc	r25, r1
     2c4:	60 f0       	brcs	.+24     	; 0x2de <follow_segment+0x10a>
		{
			return;
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	89 3c       	cpi	r24, 0xC9	; 201
     2cc:	91 05       	cpc	r25, r1
     2ce:	38 f4       	brcc	.+14     	; 0x2de <follow_segment+0x10a>
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	89 3c       	cpi	r24, 0xC9	; 201
     2d6:	91 05       	cpc	r25, r1
     2d8:	10 f4       	brcc	.+4      	; 0x2de <follow_segment+0x10a>
		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
     2da:	15 01       	movw	r2, r10
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
		{
			return;
		}
	}
     2dc:	a5 cf       	rjmp	.-182    	; 0x228 <follow_segment+0x54>
     2de:	2a 96       	adiw	r28, 0x0a	; 10
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	0f 91       	pop	r16
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	df 90       	pop	r13
     2f8:	cf 90       	pop	r12
     2fa:	bf 90       	pop	r11
     2fc:	af 90       	pop	r10
     2fe:	9f 90       	pop	r9
     300:	8f 90       	pop	r8
     302:	7f 90       	pop	r7
     304:	6f 90       	pop	r6
     306:	5f 90       	pop	r5
     308:	4f 90       	pop	r4
     30a:	3f 90       	pop	r3
     30c:	2f 90       	pop	r2
     30e:	08 95       	ret

00000310 <initialize>:

const char welcome[] PROGMEM = ">g32>>c32";
const char go[] PROGMEM = "L16 cdegreg4";

void initialize()
{
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	2a 97       	sbiw	r28, 0x0a	; 10
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; 
	unsigned int sensors[5]; 
	
	pololu_3pi_init(2000);
     328:	80 ed       	ldi	r24, 0xD0	; 208
     32a:	97 e0       	ldi	r25, 0x07	; 7
     32c:	0e 94 c0 0c 	call	0x1980	; 0x1980 <pololu_3pi_init>
	load_custom_characters();
     330:	0e 94 81 00 	call	0x102	; 0x102 <load_custom_characters>
	
	print_from_program_space(welcome_line1);
     334:	82 ea       	ldi	r24, 0xA2	; 162
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 23 0a 	call	0x1446	; 0x1446 <print_from_program_space>
	lcd_goto_xy(0,1);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 a3 0a 	call	0x1546	; 0x1546 <lcd_goto_xy>
	print_from_program_space(welcome_line2);
     344:	89 e9       	ldi	r24, 0x99	; 153
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 23 0a 	call	0x1446	; 0x1446 <print_from_program_space>
	play_from_program_space(welcome);
     34c:	83 e8       	ldi	r24, 0x83	; 131
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 b8 08 	call	0x1170	; 0x1170 <play_from_program_space>
	delay_ms(1000);
     354:	88 ee       	ldi	r24, 0xE8	; 232
     356:	93 e0       	ldi	r25, 0x03	; 3
     358:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>

	clear();
     35c:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <clear>
	print_from_program_space(demo_name_line1);
     360:	84 e9       	ldi	r24, 0x94	; 148
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 23 0a 	call	0x1446	; 0x1446 <print_from_program_space>
	lcd_goto_xy(0,1);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	0e 94 a3 0a 	call	0x1546	; 0x1546 <lcd_goto_xy>
	print_from_program_space(demo_name_line2);
     370:	8d e8       	ldi	r24, 0x8D	; 141
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 23 0a 	call	0x1446	; 0x1446 <print_from_program_space>
	delay_ms(1000);
     378:	88 ee       	ldi	r24, 0xE8	; 232
     37a:	93 e0       	ldi	r25, 0x03	; 3
		print_long(bat);
		print("mV");
		lcd_goto_xy(0,1);
		print("Press B");

		delay_ms(100);
     37c:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
	print_from_program_space(demo_name_line1);
	lcd_goto_xy(0,1);
	print_from_program_space(demo_name_line2);
	delay_ms(1000);

	while(!button_is_pressed(BUTTON_B))
     380:	80 e1       	ldi	r24, 0x10	; 16
     382:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <button_is_pressed>
     386:	81 11       	cpse	r24, r1
     388:	1b c0       	rjmp	.+54     	; 0x3c0 <initialize+0xb0>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     38a:	0e 94 76 05 	call	0xaec	; 0xaec <read_battery_millivolts_3pi>
     38e:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();

		clear();
     390:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <clear>
		print_long(bat);
     394:	b8 01       	movw	r22, r16
     396:	88 27       	eor	r24, r24
     398:	77 fd       	sbrc	r23, 7
     39a:	80 95       	com	r24
     39c:	98 2f       	mov	r25, r24
     39e:	0e 94 80 0a 	call	0x1500	; 0x1500 <print_long>
		print("mV");
     3a2:	8b e3       	ldi	r24, 0x3B	; 59
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 12 0a 	call	0x1424	; 0x1424 <print>
		lcd_goto_xy(0,1);
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	0e 94 a3 0a 	call	0x1546	; 0x1546 <lcd_goto_xy>
		print("Press B");
     3b2:	8e e3       	ldi	r24, 0x3E	; 62
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	0e 94 12 0a 	call	0x1424	; 0x1424 <print>

		delay_ms(100);
     3ba:	84 e6       	ldi	r24, 0x64	; 100
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	de cf       	rjmp	.-68     	; 0x37c <initialize+0x6c>
	}

	wait_for_button_release(BUTTON_B);
     3c0:	80 e1       	ldi	r24, 0x10	; 16
     3c2:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <wait_for_button_release>
	delay_ms(1000);
     3c6:	88 ee       	ldi	r24, 0xE8	; 232
     3c8:	93 e0       	ldi	r25, 0x03	; 3
     3ca:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
     3ce:	0c ee       	ldi	r16, 0xEC	; 236
     3d0:	1f ef       	ldi	r17, 0xFF	; 255

	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     3d2:	08 32       	cpi	r16, 0x28	; 40
     3d4:	11 05       	cpc	r17, r1
     3d6:	28 f0       	brcs	.+10     	; 0x3e2 <initialize+0xd2>
			set_motors(40,-40);
     3d8:	68 ed       	ldi	r22, 0xD8	; 216
     3da:	7f ef       	ldi	r23, 0xFF	; 255
     3dc:	88 e2       	ldi	r24, 0x28	; 40
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <initialize+0xda>
		else
			set_motors(-40,40);
     3e2:	68 e2       	ldi	r22, 0x28	; 40
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	88 ed       	ldi	r24, 0xD8	; 216
     3e8:	9f ef       	ldi	r25, 0xFF	; 255
     3ea:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	0e 94 7f 0c 	call	0x18fe	; 0x18fe <calibrate_line_sensors>
		delay_ms(20);
     3f4:	84 e1       	ldi	r24, 0x14	; 20
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     400:	0c 33       	cpi	r16, 0x3C	; 60
     402:	11 05       	cpc	r17, r1
     404:	31 f7       	brne	.-52     	; 0x3d2 <initialize+0xc2>
		else
			set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	set_motors(0,0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>

	while(!button_is_pressed(BUTTON_B))
     412:	80 e1       	ldi	r24, 0x10	; 16
     414:	0e 94 f0 0b 	call	0x17e0	; 0x17e0 <button_is_pressed>
     418:	81 11       	cpse	r24, r1
     41a:	1a c0       	rjmp	.+52     	; 0x450 <initialize+0x140>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
     426:	8c 01       	movw	r16, r24

		clear();
     428:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <clear>
		print_long(position);
     42c:	b8 01       	movw	r22, r16
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 80 0a 	call	0x1500	; 0x1500 <print_long>
		lcd_goto_xy(0,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 a3 0a 	call	0x1546	; 0x1546 <lcd_goto_xy>
		display_readings(sensors);
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	0e 94 a6 00 	call	0x14c	; 0x14c <display_readings>

		delay_ms(100);
     446:	84 e6       	ldi	r24, 0x64	; 100
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
     44e:	e1 cf       	rjmp	.-62     	; 0x412 <initialize+0x102>
	}
	wait_for_button_release(BUTTON_B);
     450:	80 e1       	ldi	r24, 0x10	; 16
     452:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <wait_for_button_release>

	clear();
     456:	0e 94 fb 09 	call	0x13f6	; 0x13f6 <clear>

	print("Go!");		
     45a:	86 e4       	ldi	r24, 0x46	; 70
     45c:	91 e0       	ldi	r25, 0x01	; 1
     45e:	0e 94 12 0a 	call	0x1424	; 0x1424 <print>

	play_from_program_space(go);
     462:	86 e7       	ldi	r24, 0x76	; 118
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 b8 08 	call	0x1170	; 0x1170 <play_from_program_space>
	while(is_playing());
     46a:	0e 94 a7 08 	call	0x114e	; 0x114e <is_playing>
     46e:	81 11       	cpse	r24, r1
     470:	fc cf       	rjmp	.-8      	; 0x46a <initialize+0x15a>
}
     472:	2a 96       	adiw	r28, 0x0a	; 10
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <main>:


int main()
{
	initialize();//3pi initialization
     488:	0e 94 88 01 	call	0x310	; 0x310 <initialize>
	
	maze_solve(180);
     48c:	84 eb       	ldi	r24, 0xB4	; 180
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 4b 02 	call	0x496	; 0x496 <maze_solve>
     494:	ff cf       	rjmp	.-2      	; 0x494 <main+0xc>

00000496 <maze_solve>:
#include "follow-segment.h"
#include "turn.h"


void maze_solve(int speed)
{
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	2a 97       	sbiw	r28, 0x0a	; 10
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	8c 01       	movw	r16, r24
	unsigned int sensors[5];
	uint16_t destination = 0;
	const signed int line_th = 300, edge_th=500, speed_node = 50; //minimum 200
	char Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
     4ac:	b1 2c       	mov	r11, r1
     4ae:	91 2c       	mov	r9, r1
     4b0:	a1 2c       	mov	r10, r1
				Forward_trigged = 0;
			}
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     4b2:	82 e3       	ldi	r24, 0x32	; 50
     4b4:	c8 2e       	mov	r12, r24
     4b6:	d1 2c       	mov	r13, r1
	const signed int line_th = 300, edge_th=500, speed_node = 50; //minimum 200
	char Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
	
	while(1)
	{
		follow_segment(speed);
     4b8:	c8 01       	movw	r24, r16
     4ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
		//delay_ms(10);
		
		read_line(sensors,IR_EMITTERS_ON);
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	ce 01       	movw	r24, r28
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
	
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		if(sensors[0] > edge_th)  //left trigging 
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	85 3f       	cpi	r24, 0xF5	; 245
     4ce:	91 40       	sbci	r25, 0x01	; 1
     4d0:	08 f4       	brcc	.+2      	; 0x4d4 <maze_solve+0x3e>
     4d2:	69 c0       	rjmp	.+210    	; 0x5a6 <maze_solve+0x110>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     4d4:	62 e3       	ldi	r22, 0x32	; 50
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	82 e3       	ldi	r24, 0x32	; 50
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
			destination = 0;
     4e0:	e1 2c       	mov	r14, r1
     4e2:	f1 2c       	mov	r15, r1
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				read_line(sensors,IR_EMITTERS_ON);
     4e8:	61 e0       	ldi	r22, 0x01	; 1
		
		if(sensors[0] > edge_th)  //left trigging 
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     4ea:	85 3f       	cpi	r24, 0xF5	; 245
     4ec:	91 40       	sbci	r25, 0x01	; 1
     4ee:	68 f1       	brcs	.+90     	; 0x54a <maze_solve+0xb4>
			{
				read_line(sensors,IR_EMITTERS_ON);
     4f0:	ce 01       	movw	r24, r28
     4f2:	01 96       	adiw	r24, 0x01	; 1
     4f4:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
void time_reset(void);

// This is inline for efficiency:
static inline void delay_us(unsigned int microseconds)
{
  __asm__ volatile (
     4f8:	c6 01       	movw	r24, r12
     4fa:	6f 93       	push	r22
     4fc:	64 e0       	ldi	r22, 0x04	; 4
     4fe:	6a 95       	dec	r22
     500:	f1 f7       	brne	.-4      	; 0x4fe <maze_solve+0x68>
     502:	6f 91       	pop	r22
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	c9 f7       	brne	.-14     	; 0x4fa <maze_solve+0x64>
				delay_us(50);
				if ((sensors[4] > edge_th) && (Right_trigged == 0))
     508:	89 85       	ldd	r24, Y+9	; 0x09
     50a:	9a 85       	ldd	r25, Y+10	; 0x0a
     50c:	85 3f       	cpi	r24, 0xF5	; 245
     50e:	41 e0       	ldi	r20, 0x01	; 1
     510:	94 07       	cpc	r25, r20
     512:	20 f0       	brcs	.+8      	; 0x51c <maze_solve+0x86>
     514:	a1 10       	cpse	r10, r1
     516:	02 c0       	rjmp	.+4      	; 0x51c <maze_solve+0x86>
				{
					Right_trigged=1;
     518:	aa 24       	eor	r10, r10
     51a:	a3 94       	inc	r10
				}
				if ((sensors[0] > edge_th) && (sensors[4] > edge_th))
     51c:	29 81       	ldd	r18, Y+1	; 0x01
     51e:	3a 81       	ldd	r19, Y+2	; 0x02
     520:	25 3f       	cpi	r18, 0xF5	; 245
     522:	31 40       	sbci	r19, 0x01	; 1
     524:	f8 f2       	brcs	.-66     	; 0x4e4 <maze_solve+0x4e>
     526:	85 3f       	cpi	r24, 0xF5	; 245
     528:	91 40       	sbci	r25, 0x01	; 1
     52a:	e0 f2       	brcs	.-72     	; 0x4e4 <maze_solve+0x4e>
				{
					destination = destination + 1;
     52c:	4f ef       	ldi	r20, 0xFF	; 255
     52e:	e4 1a       	sub	r14, r20
     530:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     532:	89 e8       	ldi	r24, 0x89	; 137
     534:	e8 16       	cp	r14, r24
     536:	83 e1       	ldi	r24, 0x13	; 19
     538:	f8 06       	cpc	r15, r24
     53a:	a0 f2       	brcs	.-88     	; 0x4e4 <maze_solve+0x4e>
					{
						destination = 0x00;
						set_motors(0,0);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
     548:	ff cf       	rjmp	.-2      	; 0x548 <maze_solve+0xb2>
		
		if(sensors[0] > edge_th)  //left trigging 
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     54a:	89 85       	ldd	r24, Y+9	; 0x09
     54c:	9a 85       	ldd	r25, Y+10	; 0x0a
     54e:	85 3f       	cpi	r24, 0xF5	; 245
     550:	91 40       	sbci	r25, 0x01	; 1
     552:	70 f6       	brcc	.-100    	; 0x4f0 <maze_solve+0x5a>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
     554:	ce 01       	movw	r24, r28
     556:	01 96       	adiw	r24, 0x01	; 1
     558:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			if (sensors[2] > line_th)
     55c:	8d 81       	ldd	r24, Y+5	; 0x05
     55e:	9e 81       	ldd	r25, Y+6	; 0x06
     560:	8d 32       	cpi	r24, 0x2D	; 45
     562:	91 40       	sbci	r25, 0x01	; 1
     564:	08 f0       	brcs	.+2      	; 0x568 <maze_solve+0xd2>
     566:	a6 c0       	rjmp	.+332    	; 0x6b4 <maze_solve+0x21e>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     568:	a1 10       	cpse	r10, r1
     56a:	09 c0       	rjmp	.+18     	; 0x57e <maze_solve+0xe8>
     56c:	b1 10       	cpse	r11, r1
     56e:	03 c0       	rjmp	.+6      	; 0x576 <maze_solve+0xe0>
			{
				//left_operation(speed);
				turn('L',speed);
     570:	b8 01       	movw	r22, r16
     572:	8c e4       	ldi	r24, 0x4C	; 76
     574:	86 c0       	rjmp	.+268    	; 0x682 <maze_solve+0x1ec>
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 0) && (Forward_trigged == 1))
     576:	41 e0       	ldi	r20, 0x01	; 1
     578:	b4 12       	cpse	r11, r20
     57a:	9e cf       	rjmp	.-196    	; 0x4b8 <maze_solve+0x22>
     57c:	0e c0       	rjmp	.+28     	; 0x59a <maze_solve+0x104>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	a8 12       	cpse	r10, r24
     582:	9a cf       	rjmp	.-204    	; 0x4b8 <maze_solve+0x22>
     584:	b1 10       	cpse	r11, r1
     586:	06 c0       	rjmp	.+12     	; 0x594 <maze_solve+0xfe>
			{
				//left_right_operation(speed);
				turn('L',speed);
     588:	b8 01       	movw	r22, r16
     58a:	8c e4       	ldi	r24, 0x4C	; 76
     58c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Right_trigged = 0;
     590:	a1 2c       	mov	r10, r1
				Forward_trigged = 0;
     592:	92 cf       	rjmp	.-220    	; 0x4b8 <maze_solve+0x22>
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 1))
     594:	21 e0       	ldi	r18, 0x01	; 1
     596:	b2 12       	cpse	r11, r18
     598:	8f cf       	rjmp	.-226    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     59a:	b8 01       	movw	r22, r16
     59c:	8c e4       	ldi	r24, 0x4C	; 76
     59e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Right_trigged = 0;
				Forward_trigged = 0;
     5a2:	b1 2c       	mov	r11, r1
     5a4:	f5 cf       	rjmp	.-22     	; 0x590 <maze_solve+0xfa>
			}
		}
		else if (sensors[4] > edge_th) //right trigging
     5a6:	89 85       	ldd	r24, Y+9	; 0x09
     5a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     5aa:	85 3f       	cpi	r24, 0xF5	; 245
     5ac:	91 40       	sbci	r25, 0x01	; 1
     5ae:	08 f4       	brcc	.+2      	; 0x5b2 <maze_solve+0x11c>
     5b0:	54 c0       	rjmp	.+168    	; 0x65a <maze_solve+0x1c4>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     5b2:	62 e3       	ldi	r22, 0x32	; 50
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	82 e3       	ldi	r24, 0x32	; 50
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
			destination = 0;
     5be:	e1 2c       	mov	r14, r1
     5c0:	f1 2c       	mov	r15, r1
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				read_line(sensors,IR_EMITTERS_ON);
     5c6:	61 e0       	ldi	r22, 0x01	; 1
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5c8:	85 3f       	cpi	r24, 0xF5	; 245
     5ca:	91 40       	sbci	r25, 0x01	; 1
     5cc:	b0 f0       	brcs	.+44     	; 0x5fa <maze_solve+0x164>
			{
				read_line(sensors,IR_EMITTERS_ON);
     5ce:	ce 01       	movw	r24, r28
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
     5d6:	c6 01       	movw	r24, r12
     5d8:	6f 93       	push	r22
     5da:	64 e0       	ldi	r22, 0x04	; 4
     5dc:	6a 95       	dec	r22
     5de:	f1 f7       	brne	.-4      	; 0x5dc <maze_solve+0x146>
     5e0:	6f 91       	pop	r22
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	c9 f7       	brne	.-14     	; 0x5d8 <maze_solve+0x142>
				delay_us(50);
				if ((sensors[0] > edge_th) && (Left_trigged == 0))
     5e6:	89 81       	ldd	r24, Y+1	; 0x01
     5e8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ea:	85 3f       	cpi	r24, 0xF5	; 245
     5ec:	91 40       	sbci	r25, 0x01	; 1
     5ee:	48 f3       	brcs	.-46     	; 0x5c2 <maze_solve+0x12c>
     5f0:	91 10       	cpse	r9, r1
     5f2:	4a c0       	rjmp	.+148    	; 0x688 <maze_solve+0x1f2>
				{
					Left_trigged=1;
     5f4:	99 24       	eor	r9, r9
     5f6:	93 94       	inc	r9
     5f8:	47 c0       	rjmp	.+142    	; 0x688 <maze_solve+0x1f2>
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5fa:	89 85       	ldd	r24, Y+9	; 0x09
     5fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5fe:	85 3f       	cpi	r24, 0xF5	; 245
     600:	91 40       	sbci	r25, 0x01	; 1
     602:	28 f7       	brcc	.-54     	; 0x5ce <maze_solve+0x138>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
     604:	ce 01       	movw	r24, r28
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			if (sensors[2] > line_th)
     60c:	8d 81       	ldd	r24, Y+5	; 0x05
     60e:	9e 81       	ldd	r25, Y+6	; 0x06
     610:	8d 32       	cpi	r24, 0x2D	; 45
     612:	91 40       	sbci	r25, 0x01	; 1
     614:	08 f0       	brcs	.+2      	; 0x618 <maze_solve+0x182>
     616:	52 c0       	rjmp	.+164    	; 0x6bc <maze_solve+0x226>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     618:	91 10       	cpse	r9, r1
     61a:	0b c0       	rjmp	.+22     	; 0x632 <maze_solve+0x19c>
     61c:	b1 10       	cpse	r11, r1
     61e:	03 c0       	rjmp	.+6      	; 0x626 <maze_solve+0x190>
			{
				//right_operation(speed);
				turn('R',speed);
     620:	b8 01       	movw	r22, r16
     622:	82 e5       	ldi	r24, 0x52	; 82
     624:	2e c0       	rjmp	.+92     	; 0x682 <maze_solve+0x1ec>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 0) && (Forward_trigged == 1))
     626:	41 e0       	ldi	r20, 0x01	; 1
     628:	b4 12       	cpse	r11, r20
     62a:	46 cf       	rjmp	.-372    	; 0x4b8 <maze_solve+0x22>
			{
				//right_forward_operation(speed);
				turn('S',speed);
     62c:	b8 01       	movw	r22, r16
     62e:	83 e5       	ldi	r24, 0x53	; 83
     630:	0f c0       	rjmp	.+30     	; 0x650 <maze_solve+0x1ba>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	98 12       	cpse	r9, r24
     636:	40 cf       	rjmp	.-384    	; 0x4b8 <maze_solve+0x22>
     638:	b1 10       	cpse	r11, r1
     63a:	05 c0       	rjmp	.+10     	; 0x646 <maze_solve+0x1b0>
			{
				//left_right_operation(speed);
				turn('L',speed);
     63c:	b8 01       	movw	r22, r16
     63e:	8c e4       	ldi	r24, 0x4C	; 76
     640:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
     644:	08 c0       	rjmp	.+16     	; 0x656 <maze_solve+0x1c0>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
     646:	21 e0       	ldi	r18, 0x01	; 1
     648:	b2 12       	cpse	r11, r18
     64a:	36 cf       	rjmp	.-404    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     64c:	b8 01       	movw	r22, r16
     64e:	8c e4       	ldi	r24, 0x4C	; 76
     650:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Left_trigged = 0;
				Forward_trigged = 0;
     654:	b1 2c       	mov	r11, r1
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
				Left_trigged = 0;
     656:	91 2c       	mov	r9, r1
     658:	2f cf       	rjmp	.-418    	; 0x4b8 <maze_solve+0x22>
				Forward_trigged = 0;
			}
		}
		else if ((sensors[1] < (line_th)) && (sensors[2] < (line_th)) && (sensors[3] < (line_th)))//-100
     65a:	8b 81       	ldd	r24, Y+3	; 0x03
     65c:	9c 81       	ldd	r25, Y+4	; 0x04
     65e:	8c 32       	cpi	r24, 0x2C	; 44
     660:	91 40       	sbci	r25, 0x01	; 1
     662:	08 f0       	brcs	.+2      	; 0x666 <maze_solve+0x1d0>
     664:	29 cf       	rjmp	.-430    	; 0x4b8 <maze_solve+0x22>
     666:	8d 81       	ldd	r24, Y+5	; 0x05
     668:	9e 81       	ldd	r25, Y+6	; 0x06
     66a:	8c 32       	cpi	r24, 0x2C	; 44
     66c:	91 40       	sbci	r25, 0x01	; 1
     66e:	08 f0       	brcs	.+2      	; 0x672 <maze_solve+0x1dc>
     670:	23 cf       	rjmp	.-442    	; 0x4b8 <maze_solve+0x22>
     672:	8f 81       	ldd	r24, Y+7	; 0x07
     674:	98 85       	ldd	r25, Y+8	; 0x08
     676:	8c 32       	cpi	r24, 0x2C	; 44
     678:	91 40       	sbci	r25, 0x01	; 1
     67a:	08 f0       	brcs	.+2      	; 0x67e <maze_solve+0x1e8>
     67c:	1d cf       	rjmp	.-454    	; 0x4b8 <maze_solve+0x22>
		{
			
			
			//reverse_operation(speed);
			turn('U',speed);
     67e:	b8 01       	movw	r22, r16
     680:	85 e5       	ldi	r24, 0x55	; 85
     682:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
     686:	18 cf       	rjmp	.-464    	; 0x4b8 <maze_solve+0x22>
				delay_us(50);
				if ((sensors[0] > edge_th) && (Left_trigged == 0))
				{
					Left_trigged=1;
				}
				if ((sensors[0] > edge_th) && (sensors[4] > edge_th))
     688:	89 85       	ldd	r24, Y+9	; 0x09
     68a:	9a 85       	ldd	r25, Y+10	; 0x0a
     68c:	85 3f       	cpi	r24, 0xF5	; 245
     68e:	91 40       	sbci	r25, 0x01	; 1
     690:	08 f4       	brcc	.+2      	; 0x694 <maze_solve+0x1fe>
     692:	97 cf       	rjmp	.-210    	; 0x5c2 <maze_solve+0x12c>
				{
					destination = destination + 1;
     694:	4f ef       	ldi	r20, 0xFF	; 255
     696:	e4 1a       	sub	r14, r20
     698:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     69a:	89 e8       	ldi	r24, 0x89	; 137
     69c:	e8 16       	cp	r14, r24
     69e:	83 e1       	ldi	r24, 0x13	; 19
     6a0:	f8 06       	cpc	r15, r24
     6a2:	08 f4       	brcc	.+2      	; 0x6a6 <maze_solve+0x210>
     6a4:	8e cf       	rjmp	.-228    	; 0x5c2 <maze_solve+0x12c>
					{
						destination = 0x00;
						set_motors(0,0);
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
     6b2:	ff cf       	rjmp	.-2      	; 0x6b2 <maze_solve+0x21c>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     6b4:	aa 20       	and	r10, r10
     6b6:	09 f4       	brne	.+2      	; 0x6ba <maze_solve+0x224>
     6b8:	70 cf       	rjmp	.-288    	; 0x59a <maze_solve+0x104>
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <maze_solve+0x22e>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     6bc:	99 20       	and	r9, r9
     6be:	09 f4       	brne	.+2      	; 0x6c2 <maze_solve+0x22c>
     6c0:	b5 cf       	rjmp	.-150    	; 0x62c <maze_solve+0x196>
     6c2:	05 c0       	rjmp	.+10     	; 0x6ce <maze_solve+0x238>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     6c4:	41 e0       	ldi	r20, 0x01	; 1
     6c6:	a4 16       	cp	r10, r20
     6c8:	09 f4       	brne	.+2      	; 0x6cc <maze_solve+0x236>
     6ca:	67 cf       	rjmp	.-306    	; 0x59a <maze_solve+0x104>
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <maze_solve+0x240>
				//right_forward_operation(speed);
				turn('S',speed);
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     6ce:	81 e0       	ldi	r24, 0x01	; 1
     6d0:	98 16       	cp	r9, r24
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <maze_solve+0x240>
     6d4:	bb cf       	rjmp	.-138    	; 0x64c <maze_solve+0x1b6>
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
			if (sensors[2] > line_th)
			{
				Forward_trigged = 1;
     6d6:	bb 24       	eor	r11, r11
     6d8:	b3 94       	inc	r11
     6da:	ee ce       	rjmp	.-548    	; 0x4b8 <maze_solve+0x22>

000006dc <delay_us.constprop.0>:
     6dc:	8a e0       	ldi	r24, 0x0A	; 10
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	6f 93       	push	r22
     6e2:	64 e0       	ldi	r22, 0x04	; 4
     6e4:	6a 95       	dec	r22
     6e6:	f1 f7       	brne	.-4      	; 0x6e4 <delay_us.constprop.0+0x8>
     6e8:	6f 91       	pop	r22
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	c9 f7       	brne	.-14     	; 0x6e0 <delay_us.constprop.0+0x4>
     6ee:	08 95       	ret

000006f0 <turn>:

#include <pololu/3pi.h>
#include "follow-segment.h"

void turn(char dir, int speed)
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
     6f8:	2a 97       	sbiw	r28, 0x0a	; 10
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	f8 94       	cli
     6fe:	de bf       	out	0x3e, r29	; 62
     700:	0f be       	out	0x3f, r0	; 63
     702:	cd bf       	out	0x3d, r28	; 61
	const signed int speed_break = -230, break_time = 10, zero_time = 20, turn_th=300, edge_th=500;
	unsigned int sensors[5];
	uint16_t align_time = 0, align_time_ld = 5;
	
	if (dir == 'L')
     704:	8c 34       	cpi	r24, 0x4C	; 76
     706:	09 f0       	breq	.+2      	; 0x70a <turn+0x1a>
     708:	5b c0       	rjmp	.+182    	; 0x7c0 <turn+0xd0>
	{
		set_motors(0,0);
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(zero_time);
     716:	84 e1       	ldi	r24, 0x14	; 20
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(speed_break,speed_break);
     71e:	6a e1       	ldi	r22, 0x1A	; 26
     720:	7f ef       	ldi	r23, 0xFF	; 255
     722:	8a e1       	ldi	r24, 0x1A	; 26
     724:	9f ef       	ldi	r25, 0xFF	; 255
     726:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     72a:	8a e0       	ldi	r24, 0x0A	; 10
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(0,0);
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     73e:	8a e0       	ldi	r24, 0x0A	; 10
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		
		set_motors(-60,60);
     746:	6c e3       	ldi	r22, 0x3C	; 60
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	84 ec       	ldi	r24, 0xC4	; 196
     74c:	9f ef       	ldi	r25, 0xFF	; 255
     74e:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		
		while(sensors[0] < edge_th)
     752:	89 81       	ldd	r24, Y+1	; 0x01
     754:	9a 81       	ldd	r25, Y+2	; 0x02
     756:	84 3f       	cpi	r24, 0xF4	; 244
     758:	91 40       	sbci	r25, 0x01	; 1
     75a:	40 f4       	brcc	.+16     	; 0x76c <turn+0x7c>
		{
			read_line(sensors,IR_EMITTERS_ON);
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	ce 01       	movw	r24, r28
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     766:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     76a:	f3 cf       	rjmp	.-26     	; 0x752 <turn+0x62>
		}
		while(sensors[0] > edge_th)
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	9a 81       	ldd	r25, Y+2	; 0x02
     770:	85 3f       	cpi	r24, 0xF5	; 245
     772:	91 40       	sbci	r25, 0x01	; 1
     774:	40 f0       	brcs	.+16     	; 0x786 <turn+0x96>
		{
			read_line(sensors,IR_EMITTERS_ON);
     776:	61 e0       	ldi	r22, 0x01	; 1
     778:	ce 01       	movw	r24, r28
     77a:	01 96       	adiw	r24, 0x01	; 1
     77c:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     780:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     784:	f3 cf       	rjmp	.-26     	; 0x76c <turn+0x7c>
		}
		while(sensors[2] < turn_th)
     786:	8d 81       	ldd	r24, Y+5	; 0x05
     788:	9e 81       	ldd	r25, Y+6	; 0x06
     78a:	8c 32       	cpi	r24, 0x2C	; 44
     78c:	91 40       	sbci	r25, 0x01	; 1
     78e:	58 f4       	brcc	.+22     	; 0x7a6 <turn+0xb6>
		{
			read_line(sensors,IR_EMITTERS_ON);
     790:	61 e0       	ldi	r22, 0x01	; 1
     792:	ce 01       	movw	r24, r28
     794:	01 96       	adiw	r24, 0x01	; 1
     796:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     79a:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     79e:	f3 cf       	rjmp	.-26     	; 0x786 <turn+0x96>
		}
			follow_segment(50);
			follow_segment(100);
			follow_segment(140);
	}
	else if (dir == 'S')
     7a0:	83 35       	cpi	r24, 0x53	; 83
     7a2:	09 f0       	breq	.+2      	; 0x7a6 <turn+0xb6>
     7a4:	5b c0       	rjmp	.+182    	; 0x85c <turn+0x16c>
		{
			read_line(sensors,IR_EMITTERS_ON);
			delay_us(10);
		}
		
			follow_segment(50);
     7a6:	82 e3       	ldi	r24, 0x32	; 50
     7a8:	90 e0       	ldi	r25, 0x00	; 0
     7aa:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
			follow_segment(100);
     7ae:	84 e6       	ldi	r24, 0x64	; 100
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
			follow_segment(140);
     7b6:	8c e8       	ldi	r24, 0x8C	; 140
     7b8:	90 e0       	ldi	r25, 0x00	; 0
     7ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
     7be:	9d c0       	rjmp	.+314    	; 0x8fa <turn+0x20a>
		
	}
	else if (dir == 'R')
     7c0:	82 35       	cpi	r24, 0x52	; 82
     7c2:	71 f7       	brne	.-36     	; 0x7a0 <turn+0xb0>
	{
		set_motors(0,0);
     7c4:	60 e0       	ldi	r22, 0x00	; 0
     7c6:	70 e0       	ldi	r23, 0x00	; 0
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(zero_time);
     7d0:	84 e1       	ldi	r24, 0x14	; 20
     7d2:	90 e0       	ldi	r25, 0x00	; 0
     7d4:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(speed_break,speed_break);
     7d8:	6a e1       	ldi	r22, 0x1A	; 26
     7da:	7f ef       	ldi	r23, 0xFF	; 255
     7dc:	8a e1       	ldi	r24, 0x1A	; 26
     7de:	9f ef       	ldi	r25, 0xFF	; 255
     7e0:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     7e4:	8a e0       	ldi	r24, 0x0A	; 10
     7e6:	90 e0       	ldi	r25, 0x00	; 0
     7e8:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(0,0);
     7ec:	60 e0       	ldi	r22, 0x00	; 0
     7ee:	70 e0       	ldi	r23, 0x00	; 0
     7f0:	80 e0       	ldi	r24, 0x00	; 0
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     7f8:	8a e0       	ldi	r24, 0x0A	; 10
     7fa:	90 e0       	ldi	r25, 0x00	; 0
     7fc:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		
		set_motors(60,-60);
     800:	64 ec       	ldi	r22, 0xC4	; 196
     802:	7f ef       	ldi	r23, 0xFF	; 255
     804:	8c e3       	ldi	r24, 0x3C	; 60
     806:	90 e0       	ldi	r25, 0x00	; 0
     808:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		
		while(sensors[4] < edge_th)
     80c:	89 85       	ldd	r24, Y+9	; 0x09
     80e:	9a 85       	ldd	r25, Y+10	; 0x0a
     810:	84 3f       	cpi	r24, 0xF4	; 244
     812:	91 40       	sbci	r25, 0x01	; 1
     814:	40 f4       	brcc	.+16     	; 0x826 <turn+0x136>
		{
			read_line(sensors,IR_EMITTERS_ON);
     816:	61 e0       	ldi	r22, 0x01	; 1
     818:	ce 01       	movw	r24, r28
     81a:	01 96       	adiw	r24, 0x01	; 1
     81c:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     820:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     824:	f3 cf       	rjmp	.-26     	; 0x80c <turn+0x11c>
		}
		while(sensors[4] > edge_th)
     826:	89 85       	ldd	r24, Y+9	; 0x09
     828:	9a 85       	ldd	r25, Y+10	; 0x0a
     82a:	85 3f       	cpi	r24, 0xF5	; 245
     82c:	91 40       	sbci	r25, 0x01	; 1
     82e:	40 f0       	brcs	.+16     	; 0x840 <turn+0x150>
		{
			read_line(sensors,IR_EMITTERS_ON);
     830:	61 e0       	ldi	r22, 0x01	; 1
     832:	ce 01       	movw	r24, r28
     834:	01 96       	adiw	r24, 0x01	; 1
     836:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     83a:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     83e:	f3 cf       	rjmp	.-26     	; 0x826 <turn+0x136>
		}
		while(sensors[2] < turn_th)
     840:	8d 81       	ldd	r24, Y+5	; 0x05
     842:	9e 81       	ldd	r25, Y+6	; 0x06
     844:	8c 32       	cpi	r24, 0x2C	; 44
     846:	91 40       	sbci	r25, 0x01	; 1
     848:	08 f0       	brcs	.+2      	; 0x84c <turn+0x15c>
     84a:	ad cf       	rjmp	.-166    	; 0x7a6 <turn+0xb6>
		{
			read_line(sensors,IR_EMITTERS_ON);
     84c:	61 e0       	ldi	r22, 0x01	; 1
     84e:	ce 01       	movw	r24, r28
     850:	01 96       	adiw	r24, 0x01	; 1
     852:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     856:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     85a:	f2 cf       	rjmp	.-28     	; 0x840 <turn+0x150>
	{
			follow_segment(50);
			follow_segment(100);
			follow_segment(140);
	}
	else if (dir == 'U')
     85c:	85 35       	cpi	r24, 0x55	; 85
     85e:	09 f0       	breq	.+2      	; 0x862 <turn+0x172>
     860:	4c c0       	rjmp	.+152    	; 0x8fa <turn+0x20a>
	{
		set_motors(0,0);
     862:	60 e0       	ldi	r22, 0x00	; 0
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(zero_time);
     86e:	84 e1       	ldi	r24, 0x14	; 20
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(speed_break,speed_break);
     876:	6a e1       	ldi	r22, 0x1A	; 26
     878:	7f ef       	ldi	r23, 0xFF	; 255
     87a:	8a e1       	ldi	r24, 0x1A	; 26
     87c:	9f ef       	ldi	r25, 0xFF	; 255
     87e:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     882:	8a e0       	ldi	r24, 0x0A	; 10
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		set_motors(0,0);
     88a:	60 e0       	ldi	r22, 0x00	; 0
     88c:	70 e0       	ldi	r23, 0x00	; 0
     88e:	80 e0       	ldi	r24, 0x00	; 0
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		delay_ms(break_time);
     896:	8a e0       	ldi	r24, 0x0A	; 10
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
		
		set_motors(60,-60);
     89e:	64 ec       	ldi	r22, 0xC4	; 196
     8a0:	7f ef       	ldi	r23, 0xFF	; 255
     8a2:	8c e3       	ldi	r24, 0x3C	; 60
     8a4:	90 e0       	ldi	r25, 0x00	; 0
     8a6:	0e 94 ad 0b 	call	0x175a	; 0x175a <set_motors>
		
		while(sensors[4] < edge_th)
     8aa:	89 85       	ldd	r24, Y+9	; 0x09
     8ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ae:	84 3f       	cpi	r24, 0xF4	; 244
     8b0:	91 40       	sbci	r25, 0x01	; 1
     8b2:	40 f4       	brcc	.+16     	; 0x8c4 <turn+0x1d4>
		{
			read_line(sensors,IR_EMITTERS_ON);
     8b4:	61 e0       	ldi	r22, 0x01	; 1
     8b6:	ce 01       	movw	r24, r28
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     8be:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     8c2:	f3 cf       	rjmp	.-26     	; 0x8aa <turn+0x1ba>
		}
		while(sensors[4] > edge_th)
     8c4:	89 85       	ldd	r24, Y+9	; 0x09
     8c6:	9a 85       	ldd	r25, Y+10	; 0x0a
     8c8:	85 3f       	cpi	r24, 0xF5	; 245
     8ca:	91 40       	sbci	r25, 0x01	; 1
     8cc:	40 f0       	brcs	.+16     	; 0x8de <turn+0x1ee>
		{
			read_line(sensors,IR_EMITTERS_ON);
     8ce:	61 e0       	ldi	r22, 0x01	; 1
     8d0:	ce 01       	movw	r24, r28
     8d2:	01 96       	adiw	r24, 0x01	; 1
     8d4:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     8d8:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     8dc:	f3 cf       	rjmp	.-26     	; 0x8c4 <turn+0x1d4>
		}
		while(sensors[2] < turn_th)
     8de:	8d 81       	ldd	r24, Y+5	; 0x05
     8e0:	9e 81       	ldd	r25, Y+6	; 0x06
     8e2:	8c 32       	cpi	r24, 0x2C	; 44
     8e4:	91 40       	sbci	r25, 0x01	; 1
     8e6:	08 f0       	brcs	.+2      	; 0x8ea <turn+0x1fa>
     8e8:	5e cf       	rjmp	.-324    	; 0x7a6 <turn+0xb6>
		{
			read_line(sensors,IR_EMITTERS_ON);
     8ea:	61 e0       	ldi	r22, 0x01	; 1
     8ec:	ce 01       	movw	r24, r28
     8ee:	01 96       	adiw	r24, 0x01	; 1
     8f0:	0e 94 85 0c 	call	0x190a	; 0x190a <read_line>
			delay_us(10);
     8f4:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     8f8:	f2 cf       	rjmp	.-28     	; 0x8de <turn+0x1ee>
	{
		
	}
	

     8fa:	2a 96       	adiw	r28, 0x0a	; 10
     8fc:	0f b6       	in	r0, 0x3f	; 63
     8fe:	f8 94       	cli
     900:	de bf       	out	0x3e, r29	; 62
     902:	0f be       	out	0x3f, r0	; 63
     904:	cd bf       	out	0x3d, r28	; 61
     906:	df 91       	pop	r29
     908:	cf 91       	pop	r28
     90a:	08 95       	ret

0000090c <_ZN15OrangutanAnalog7setModeEh>:
     90c:	88 23       	and	r24, r24
     90e:	21 f4       	brne	.+8      	; 0x918 <_ZN15OrangutanAnalog7setModeEh+0xc>
     910:	80 91 7c 00 	lds	r24, 0x007C
     914:	8f 7d       	andi	r24, 0xDF	; 223
     916:	03 c0       	rjmp	.+6      	; 0x91e <_ZN15OrangutanAnalog7setModeEh+0x12>
     918:	80 91 7c 00 	lds	r24, 0x007C
     91c:	80 62       	ori	r24, 0x20	; 32
     91e:	80 93 7c 00 	sts	0x007C, r24
     922:	08 95       	ret

00000924 <_ZN15OrangutanAnalog7getModeEv>:
     924:	80 91 7c 00 	lds	r24, 0x007C
     928:	90 e0       	ldi	r25, 0x00	; 0
     92a:	25 e0       	ldi	r18, 0x05	; 5
     92c:	95 95       	asr	r25
     92e:	87 95       	ror	r24
     930:	2a 95       	dec	r18
     932:	e1 f7       	brne	.-8      	; 0x92c <_ZN15OrangutanAnalog7getModeEv+0x8>
     934:	81 70       	andi	r24, 0x01	; 1
     936:	08 95       	ret

00000938 <_ZN15OrangutanAnalog12isConvertingEv>:
     938:	80 91 7a 00 	lds	r24, 0x007A
     93c:	90 e0       	ldi	r25, 0x00	; 0
     93e:	36 e0       	ldi	r19, 0x06	; 6
     940:	95 95       	asr	r25
     942:	87 95       	ror	r24
     944:	3a 95       	dec	r19
     946:	e1 f7       	brne	.-8      	; 0x940 <_ZN15OrangutanAnalog12isConvertingEv+0x8>
     948:	81 70       	andi	r24, 0x01	; 1
     94a:	08 95       	ret

0000094c <_ZN15OrangutanAnalog16conversionResultEv>:
     94c:	0e 94 92 04 	call	0x924	; 0x924 <_ZN15OrangutanAnalog7getModeEv>
     950:	88 23       	and	r24, r24
     952:	21 f0       	breq	.+8      	; 0x95c <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     954:	20 91 79 00 	lds	r18, 0x0079
     958:	30 e0       	ldi	r19, 0x00	; 0
     95a:	04 c0       	rjmp	.+8      	; 0x964 <_ZN15OrangutanAnalog16conversionResultEv+0x18>
     95c:	20 91 78 00 	lds	r18, 0x0078
     960:	30 91 79 00 	lds	r19, 0x0079
     964:	c9 01       	movw	r24, r18
     966:	08 95       	ret

00000968 <_ZN15OrangutanAnalog15startConversionEhh>:
     968:	80 32       	cpi	r24, 0x20	; 32
     96a:	b0 f4       	brcc	.+44     	; 0x998 <_ZN15OrangutanAnalog15startConversionEhh+0x30>
     96c:	97 e8       	ldi	r25, 0x87	; 135
     96e:	90 93 7a 00 	sts	0x007A, r25
     972:	90 91 7c 00 	lds	r25, 0x007C
     976:	29 2f       	mov	r18, r25
     978:	20 64       	ori	r18, 0x40	; 64
     97a:	66 23       	and	r22, r22
     97c:	11 f0       	breq	.+4      	; 0x982 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     97e:	90 6c       	ori	r25, 0xC0	; 192
     980:	02 c0       	rjmp	.+4      	; 0x986 <_ZN15OrangutanAnalog15startConversionEhh+0x1e>
     982:	92 2f       	mov	r25, r18
     984:	9f 77       	andi	r25, 0x7F	; 127
     986:	90 7e       	andi	r25, 0xE0	; 224
     988:	98 2b       	or	r25, r24
     98a:	90 93 7c 00 	sts	0x007C, r25
     98e:	80 91 7a 00 	lds	r24, 0x007A
     992:	80 64       	ori	r24, 0x40	; 64
     994:	80 93 7a 00 	sts	0x007A, r24
     998:	08 95       	ret

0000099a <_ZN15OrangutanAnalog11readAverageEhj>:
     99a:	a0 e0       	ldi	r26, 0x00	; 0
     99c:	b0 e0       	ldi	r27, 0x00	; 0
     99e:	e3 ed       	ldi	r30, 0xD3	; 211
     9a0:	f4 e0       	ldi	r31, 0x04	; 4
     9a2:	0c 94 8b 12 	jmp	0x2516	; 0x2516 <__prologue_saves__+0x14>
     9a6:	6b 01       	movw	r12, r22
     9a8:	60 e0       	ldi	r22, 0x00	; 0
     9aa:	0e 94 b4 04 	call	0x968	; 0x968 <_ZN15OrangutanAnalog15startConversionEhh>
     9ae:	0e 94 9c 04 	call	0x938	; 0x938 <_ZN15OrangutanAnalog12isConvertingEv>
     9b2:	88 23       	and	r24, r24
     9b4:	e1 f7       	brne	.-8      	; 0x9ae <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     9b6:	e6 01       	movw	r28, r12
     9b8:	ee 24       	eor	r14, r14
     9ba:	ff 24       	eor	r15, r15
     9bc:	87 01       	movw	r16, r14
     9be:	80 91 7a 00 	lds	r24, 0x007A
     9c2:	80 64       	ori	r24, 0x40	; 64
     9c4:	80 93 7a 00 	sts	0x007A, r24
     9c8:	0e 94 9c 04 	call	0x938	; 0x938 <_ZN15OrangutanAnalog12isConvertingEv>
     9cc:	88 23       	and	r24, r24
     9ce:	e1 f7       	brne	.-8      	; 0x9c8 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     9d0:	0e 94 a6 04 	call	0x94c	; 0x94c <_ZN15OrangutanAnalog16conversionResultEv>
     9d4:	a0 e0       	ldi	r26, 0x00	; 0
     9d6:	b0 e0       	ldi	r27, 0x00	; 0
     9d8:	e8 0e       	add	r14, r24
     9da:	f9 1e       	adc	r15, r25
     9dc:	0a 1f       	adc	r16, r26
     9de:	1b 1f       	adc	r17, r27
     9e0:	21 97       	sbiw	r28, 0x01	; 1
     9e2:	69 f7       	brne	.-38     	; 0x9be <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     9e4:	c6 01       	movw	r24, r12
     9e6:	96 95       	lsr	r25
     9e8:	87 95       	ror	r24
     9ea:	20 e4       	ldi	r18, 0x40	; 64
     9ec:	c2 16       	cp	r12, r18
     9ee:	d1 04       	cpc	r13, r1
     9f0:	40 f4       	brcc	.+16     	; 0xa02 <_ZN15OrangutanAnalog11readAverageEhj+0x68>
     9f2:	8e 0d       	add	r24, r14
     9f4:	9f 1d       	adc	r25, r15
     9f6:	6c 2d       	mov	r22, r12
     9f8:	70 e0       	ldi	r23, 0x00	; 0
     9fa:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     9fe:	cb 01       	movw	r24, r22
     a00:	0d c0       	rjmp	.+26     	; 0xa1c <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     a02:	bc 01       	movw	r22, r24
     a04:	80 e0       	ldi	r24, 0x00	; 0
     a06:	90 e0       	ldi	r25, 0x00	; 0
     a08:	6e 0d       	add	r22, r14
     a0a:	7f 1d       	adc	r23, r15
     a0c:	80 1f       	adc	r24, r16
     a0e:	91 1f       	adc	r25, r17
     a10:	96 01       	movw	r18, r12
     a12:	40 e0       	ldi	r20, 0x00	; 0
     a14:	50 e0       	ldi	r21, 0x00	; 0
     a16:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
     a1a:	c9 01       	movw	r24, r18
     a1c:	cd b7       	in	r28, 0x3d	; 61
     a1e:	de b7       	in	r29, 0x3e	; 62
     a20:	e8 e0       	ldi	r30, 0x08	; 8
     a22:	0c 94 a7 12 	jmp	0x254e	; 0x254e <__epilogue_restores__+0x14>

00000a26 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     a26:	a3 e0       	ldi	r26, 0x03	; 3
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	e9 e1       	ldi	r30, 0x19	; 25
     a2c:	f5 e0       	ldi	r31, 0x05	; 5
     a2e:	0c 94 90 12 	jmp	0x2520	; 0x2520 <__prologue_saves__+0x1e>
     a32:	bc 01       	movw	r22, r24
     a34:	80 e0       	ldi	r24, 0x00	; 0
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	20 91 00 01 	lds	r18, 0x0100
     a3c:	30 91 01 01 	lds	r19, 0x0101
     a40:	40 e0       	ldi	r20, 0x00	; 0
     a42:	50 e0       	ldi	r21, 0x00	; 0
     a44:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__mulsi3>
     a48:	18 2f       	mov	r17, r24
     a4a:	69 83       	std	Y+1, r22	; 0x01
     a4c:	7a 83       	std	Y+2, r23	; 0x02
     a4e:	9b 83       	std	Y+3, r25	; 0x03
     a50:	0e 94 92 04 	call	0x924	; 0x924 <_ZN15OrangutanAnalog7getModeEv>
     a54:	69 81       	ldd	r22, Y+1	; 0x01
     a56:	7a 81       	ldd	r23, Y+2	; 0x02
     a58:	9b 81       	ldd	r25, Y+3	; 0x03
     a5a:	88 23       	and	r24, r24
     a5c:	71 f0       	breq	.+28     	; 0xa7a <_ZN15OrangutanAnalog12toMillivoltsEj+0x54>
     a5e:	9b 01       	movw	r18, r22
     a60:	41 2f       	mov	r20, r17
     a62:	59 2f       	mov	r21, r25
     a64:	ca 01       	movw	r24, r20
     a66:	b9 01       	movw	r22, r18
     a68:	61 58       	subi	r22, 0x81	; 129
     a6a:	7f 4f       	sbci	r23, 0xFF	; 255
     a6c:	8f 4f       	sbci	r24, 0xFF	; 255
     a6e:	9f 4f       	sbci	r25, 0xFF	; 255
     a70:	2f ef       	ldi	r18, 0xFF	; 255
     a72:	30 e0       	ldi	r19, 0x00	; 0
     a74:	40 e0       	ldi	r20, 0x00	; 0
     a76:	50 e0       	ldi	r21, 0x00	; 0
     a78:	0d c0       	rjmp	.+26     	; 0xa94 <_ZN15OrangutanAnalog12toMillivoltsEj+0x6e>
     a7a:	9b 01       	movw	r18, r22
     a7c:	41 2f       	mov	r20, r17
     a7e:	59 2f       	mov	r21, r25
     a80:	ca 01       	movw	r24, r20
     a82:	b9 01       	movw	r22, r18
     a84:	61 50       	subi	r22, 0x01	; 1
     a86:	7e 4f       	sbci	r23, 0xFE	; 254
     a88:	8f 4f       	sbci	r24, 0xFF	; 255
     a8a:	9f 4f       	sbci	r25, 0xFF	; 255
     a8c:	2f ef       	ldi	r18, 0xFF	; 255
     a8e:	33 e0       	ldi	r19, 0x03	; 3
     a90:	40 e0       	ldi	r20, 0x00	; 0
     a92:	50 e0       	ldi	r21, 0x00	; 0
     a94:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
     a98:	c9 01       	movw	r24, r18
     a9a:	23 96       	adiw	r28, 0x03	; 3
     a9c:	e3 e0       	ldi	r30, 0x03	; 3
     a9e:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__epilogue_restores__+0x1e>

00000aa2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     aa2:	0e 94 cd 04 	call	0x99a	; 0x99a <_ZN15OrangutanAnalog11readAverageEhj>
     aa6:	0e 94 13 05 	call	0xa26	; 0xa26 <_ZN15OrangutanAnalog12toMillivoltsEj>
     aaa:	08 95       	ret

00000aac <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     aac:	1f 93       	push	r17
     aae:	cf 93       	push	r28
     ab0:	df 93       	push	r29
     ab2:	0e 94 92 04 	call	0x924	; 0x924 <_ZN15OrangutanAnalog7getModeEv>
     ab6:	18 2f       	mov	r17, r24
     ab8:	80 e0       	ldi	r24, 0x00	; 0
     aba:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanAnalog7setModeEh>
     abe:	86 e0       	ldi	r24, 0x06	; 6
     ac0:	6a e0       	ldi	r22, 0x0A	; 10
     ac2:	70 e0       	ldi	r23, 0x00	; 0
     ac4:	0e 94 51 05 	call	0xaa2	; 0xaa2 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     ac8:	ec 01       	movw	r28, r24
     aca:	81 2f       	mov	r24, r17
     acc:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanAnalog7setModeEh>
     ad0:	9e 01       	movw	r18, r28
     ad2:	22 0f       	add	r18, r18
     ad4:	33 1f       	adc	r19, r19
     ad6:	2c 0f       	add	r18, r28
     ad8:	3d 1f       	adc	r19, r29
     ada:	2f 5f       	subi	r18, 0xFF	; 255
     adc:	3f 4f       	sbci	r19, 0xFF	; 255
     ade:	36 95       	lsr	r19
     ae0:	27 95       	ror	r18
     ae2:	c9 01       	movw	r24, r18
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	1f 91       	pop	r17
     aea:	08 95       	ret

00000aec <read_battery_millivolts_3pi>:
     aec:	0e 94 56 05 	call	0xaac	; 0xaac <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     af0:	08 95       	ret

00000af2 <_ZL16currentCharacterv>:
     af2:	90 91 4f 01 	lds	r25, 0x014F
     af6:	e0 91 4b 01 	lds	r30, 0x014B
     afa:	f0 91 4c 01 	lds	r31, 0x014C
     afe:	99 23       	and	r25, r25
     b00:	11 f0       	breq	.+4      	; 0xb06 <_ZL16currentCharacterv+0x14>
     b02:	84 91       	lpm	r24, Z
     b04:	01 c0       	rjmp	.+2      	; 0xb08 <_ZL16currentCharacterv+0x16>
     b06:	80 81       	ld	r24, Z
     b08:	28 2f       	mov	r18, r24
     b0a:	21 54       	subi	r18, 0x41	; 65
     b0c:	2a 31       	cpi	r18, 0x1A	; 26
     b0e:	10 f4       	brcc	.+4      	; 0xb14 <_ZL16currentCharacterv+0x22>
     b10:	80 5e       	subi	r24, 0xE0	; 224
     b12:	08 95       	ret
     b14:	80 32       	cpi	r24, 0x20	; 32
     b16:	71 f4       	brne	.+28     	; 0xb34 <_ZL16currentCharacterv+0x42>
     b18:	20 91 4b 01 	lds	r18, 0x014B
     b1c:	30 91 4c 01 	lds	r19, 0x014C
     b20:	a9 01       	movw	r20, r18
     b22:	4f 5f       	subi	r20, 0xFF	; 255
     b24:	5f 4f       	sbci	r21, 0xFF	; 255
     b26:	50 93 4c 01 	sts	0x014C, r21
     b2a:	40 93 4b 01 	sts	0x014B, r20
     b2e:	21 15       	cp	r18, r1
     b30:	31 05       	cpc	r19, r1
     b32:	09 f7       	brne	.-62     	; 0xaf6 <_ZL16currentCharacterv+0x4>
     b34:	08 95       	ret

00000b36 <_ZL9getNumberv>:
     b36:	ef 92       	push	r14
     b38:	ff 92       	push	r15
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
     b42:	c0 e0       	ldi	r28, 0x00	; 0
     b44:	d0 e0       	ldi	r29, 0x00	; 0
     b46:	1b c0       	rjmp	.+54     	; 0xb7e <_ZL9getNumberv+0x48>
     b48:	9e 01       	movw	r18, r28
     b4a:	22 0f       	add	r18, r18
     b4c:	33 1f       	adc	r19, r19
     b4e:	93 e0       	ldi	r25, 0x03	; 3
     b50:	cc 0f       	add	r28, r28
     b52:	dd 1f       	adc	r29, r29
     b54:	9a 95       	dec	r25
     b56:	e1 f7       	brne	.-8      	; 0xb50 <_ZL9getNumberv+0x1a>
     b58:	c2 0f       	add	r28, r18
     b5a:	d3 1f       	adc	r29, r19
     b5c:	99 27       	eor	r25, r25
     b5e:	87 fd       	sbrc	r24, 7
     b60:	90 95       	com	r25
     b62:	c8 0f       	add	r28, r24
     b64:	d9 1f       	adc	r29, r25
     b66:	e0 97       	sbiw	r28, 0x30	; 48
     b68:	80 91 4b 01 	lds	r24, 0x014B
     b6c:	90 91 4c 01 	lds	r25, 0x014C
     b70:	01 96       	adiw	r24, 0x01	; 1
     b72:	90 93 4c 01 	sts	0x014C, r25
     b76:	80 93 4b 01 	sts	0x014B, r24
     b7a:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
     b7e:	98 2f       	mov	r25, r24
     b80:	90 53       	subi	r25, 0x30	; 48
     b82:	9a 30       	cpi	r25, 0x0A	; 10
     b84:	08 f3       	brcs	.-62     	; 0xb48 <_ZL9getNumberv+0x12>
     b86:	ce 01       	movw	r24, r28
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	ff 90       	pop	r15
     b8e:	ef 90       	pop	r14
     b90:	08 95       	ret

00000b92 <_ZN15OrangutanBuzzer5init2Ev>:
     b92:	10 92 6f 00 	sts	0x006F, r1
     b96:	83 e2       	ldi	r24, 0x23	; 35
     b98:	80 93 80 00 	sts	0x0080, r24
     b9c:	81 e1       	ldi	r24, 0x11	; 17
     b9e:	80 93 81 00 	sts	0x0081, r24
     ba2:	10 92 82 00 	sts	0x0082, r1
     ba6:	80 e1       	ldi	r24, 0x10	; 16
     ba8:	97 e2       	ldi	r25, 0x27	; 39
     baa:	90 93 89 00 	sts	0x0089, r25
     bae:	80 93 88 00 	sts	0x0088, r24
     bb2:	10 92 8b 00 	sts	0x008B, r1
     bb6:	10 92 8a 00 	sts	0x008A, r1
     bba:	22 9a       	sbi	0x04, 2	; 4
     bbc:	78 94       	sei
     bbe:	08 95       	ret

00000bc0 <_ZN15OrangutanBuzzer4initEv>:
     bc0:	80 91 4a 01 	lds	r24, 0x014A
     bc4:	88 23       	and	r24, r24
     bc6:	29 f4       	brne	.+10     	; 0xbd2 <_ZN15OrangutanBuzzer4initEv+0x12>
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	80 93 4a 01 	sts	0x014A, r24
     bce:	0e 94 c9 05 	call	0xb92	; 0xb92 <_ZN15OrangutanBuzzer5init2Ev>
     bd2:	08 95       	ret

00000bd4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     bd4:	a0 e0       	ldi	r26, 0x00	; 0
     bd6:	b0 e0       	ldi	r27, 0x00	; 0
     bd8:	e0 ef       	ldi	r30, 0xF0	; 240
     bda:	f5 e0       	ldi	r31, 0x05	; 5
     bdc:	0c 94 87 12 	jmp	0x250e	; 0x250e <__prologue_saves__+0xc>
     be0:	8c 01       	movw	r16, r24
     be2:	5b 01       	movw	r10, r22
     be4:	e4 2e       	mov	r14, r20
     be6:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <_ZN15OrangutanBuzzer4initEv>
     bea:	10 92 02 01 	sts	0x0102, r1
     bee:	17 ff       	sbrs	r17, 7
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     bf2:	1f 77       	andi	r17, 0x7F	; 127
     bf4:	aa e0       	ldi	r26, 0x0A	; 10
     bf6:	fa 2e       	mov	r15, r26
     bf8:	02 c0       	rjmp	.+4      	; 0xbfe <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     bfa:	ff 24       	eor	r15, r15
     bfc:	f3 94       	inc	r15
     bfe:	c0 90 81 00 	lds	r12, 0x0081
     c02:	dd 24       	eor	r13, r13
     c04:	28 ef       	ldi	r18, 0xF8	; 248
     c06:	c2 22       	and	r12, r18
     c08:	dd 24       	eor	r13, r13
     c0a:	88 ec       	ldi	r24, 0xC8	; 200
     c0c:	3f 2d       	mov	r19, r15
     c0e:	38 9f       	mul	r19, r24
     c10:	c0 01       	movw	r24, r0
     c12:	11 24       	eor	r1, r1
     c14:	80 17       	cp	r24, r16
     c16:	91 07       	cpc	r25, r17
     c18:	d8 f4       	brcc	.+54     	; 0xc50 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     c1a:	e8 01       	movw	r28, r16
     c1c:	67 e2       	ldi	r22, 0x27	; 39
     c1e:	01 31       	cpi	r16, 0x11	; 17
     c20:	16 07       	cpc	r17, r22
     c22:	10 f0       	brcs	.+4      	; 0xc28 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     c24:	c0 e1       	ldi	r28, 0x10	; 16
     c26:	d7 e2       	ldi	r29, 0x27	; 39
     c28:	be 01       	movw	r22, r28
     c2a:	76 95       	lsr	r23
     c2c:	67 95       	ror	r22
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	60 58       	subi	r22, 0x80	; 128
     c34:	79 46       	sbci	r23, 0x69	; 105
     c36:	87 46       	sbci	r24, 0x67	; 103
     c38:	9f 4f       	sbci	r25, 0xFF	; 255
     c3a:	9e 01       	movw	r18, r28
     c3c:	40 e0       	ldi	r20, 0x00	; 0
     c3e:	50 e0       	ldi	r21, 0x00	; 0
     c40:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
     c44:	89 01       	movw	r16, r18
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	c8 2a       	or	r12, r24
     c4c:	d9 2a       	or	r13, r25
     c4e:	2c c0       	rjmp	.+88     	; 0xca8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     c50:	98 e2       	ldi	r25, 0x28	; 40
     c52:	f9 9e       	mul	r15, r25
     c54:	90 2d       	mov	r25, r0
     c56:	11 24       	eor	r1, r1
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	89 2e       	mov	r8, r25
     c5c:	e4 01       	movw	r28, r8
     c5e:	4e 01       	movw	r8, r28
     c60:	98 2e       	mov	r9, r24
     c62:	e4 01       	movw	r28, r8
     c64:	80 16       	cp	r8, r16
     c66:	91 06       	cpc	r9, r17
     c68:	08 f4       	brcc	.+2      	; 0xc6c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     c6a:	e8 01       	movw	r28, r16
     c6c:	be 01       	movw	r22, r28
     c6e:	76 95       	lsr	r23
     c70:	67 95       	ror	r22
     c72:	9e 01       	movw	r18, r28
     c74:	40 e0       	ldi	r20, 0x00	; 0
     c76:	50 e0       	ldi	r21, 0x00	; 0
     c78:	8f 2d       	mov	r24, r15
     c7a:	8a 30       	cpi	r24, 0x0A	; 10
     c7c:	39 f4       	brne	.+14     	; 0xc8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     c7e:	80 e0       	ldi	r24, 0x00	; 0
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	60 5e       	subi	r22, 0xE0	; 224
     c84:	73 44       	sbci	r23, 0x43	; 67
     c86:	81 44       	sbci	r24, 0x41	; 65
     c88:	9f 4f       	sbci	r25, 0xFF	; 255
     c8a:	06 c0       	rjmp	.+12     	; 0xc98 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     c8c:	80 e0       	ldi	r24, 0x00	; 0
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	60 53       	subi	r22, 0x30	; 48
     c92:	7d 4e       	sbci	r23, 0xED	; 237
     c94:	8c 4e       	sbci	r24, 0xEC	; 236
     c96:	9f 4f       	sbci	r25, 0xFF	; 255
     c98:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
     c9c:	89 01       	movw	r16, r18
     c9e:	52 e0       	ldi	r21, 0x02	; 2
     ca0:	85 2e       	mov	r8, r21
     ca2:	91 2c       	mov	r9, r1
     ca4:	c8 28       	or	r12, r8
     ca6:	d9 28       	or	r13, r9
     ca8:	2f 2d       	mov	r18, r15
     caa:	2a 30       	cpi	r18, 0x0A	; 10
     cac:	39 f4       	brne	.+14     	; 0xcbc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     cae:	ce 01       	movw	r24, r28
     cb0:	05 96       	adiw	r24, 0x05	; 5
     cb2:	6a e0       	ldi	r22, 0x0A	; 10
     cb4:	70 e0       	ldi	r23, 0x00	; 0
     cb6:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     cba:	eb 01       	movw	r28, r22
     cbc:	33 e0       	ldi	r19, 0x03	; 3
     cbe:	c8 3e       	cpi	r28, 0xE8	; 232
     cc0:	d3 07       	cpc	r29, r19
     cc2:	79 f0       	breq	.+30     	; 0xce2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     cc4:	be 01       	movw	r22, r28
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	95 01       	movw	r18, r10
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	50 e0       	ldi	r21, 0x00	; 0
     cd0:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__mulsi3>
     cd4:	28 ee       	ldi	r18, 0xE8	; 232
     cd6:	33 e0       	ldi	r19, 0x03	; 3
     cd8:	40 e0       	ldi	r20, 0x00	; 0
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	0e 94 57 12 	call	0x24ae	; 0x24ae <__divmodsi4>
     ce0:	01 c0       	rjmp	.+2      	; 0xce4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     ce2:	95 01       	movw	r18, r10
     ce4:	10 92 6f 00 	sts	0x006F, r1
     ce8:	c0 92 81 00 	sts	0x0081, r12
     cec:	10 93 89 00 	sts	0x0089, r17
     cf0:	00 93 88 00 	sts	0x0088, r16
     cf4:	40 91 88 00 	lds	r20, 0x0088
     cf8:	50 91 89 00 	lds	r21, 0x0089
     cfc:	6e 2d       	mov	r22, r14
     cfe:	60 31       	cpi	r22, 0x10	; 16
     d00:	08 f0       	brcs	.+2      	; 0xd04 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     d02:	6f e0       	ldi	r22, 0x0F	; 15
     d04:	80 e1       	ldi	r24, 0x10	; 16
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	86 1b       	sub	r24, r22
     d0a:	91 09       	sbc	r25, r1
     d0c:	ba 01       	movw	r22, r20
     d0e:	02 c0       	rjmp	.+4      	; 0xd14 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     d10:	76 95       	lsr	r23
     d12:	67 95       	ror	r22
     d14:	8a 95       	dec	r24
     d16:	e2 f7       	brpl	.-8      	; 0xd10 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     d18:	70 93 8b 00 	sts	0x008B, r23
     d1c:	60 93 8a 00 	sts	0x008A, r22
     d20:	30 93 52 01 	sts	0x0152, r19
     d24:	20 93 51 01 	sts	0x0151, r18
     d28:	86 b3       	in	r24, 0x16	; 22
     d2a:	8f ef       	ldi	r24, 0xFF	; 255
     d2c:	86 bb       	out	0x16, r24	; 22
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	80 93 6f 00 	sts	0x006F, r24
     d34:	cd b7       	in	r28, 0x3d	; 61
     d36:	de b7       	in	r29, 0x3e	; 62
     d38:	ec e0       	ldi	r30, 0x0C	; 12
     d3a:	0c 94 a3 12 	jmp	0x2546	; 0x2546 <__epilogue_restores__+0xc>

00000d3e <_ZN15OrangutanBuzzer8playNoteEhjh>:
     d3e:	9b 01       	movw	r18, r22
     d40:	8f 3f       	cpi	r24, 0xFF	; 255
     d42:	11 f0       	breq	.+4      	; 0xd48 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     d44:	44 23       	and	r20, r20
     d46:	29 f4       	brne	.+10     	; 0xd52 <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     d48:	88 ee       	ldi	r24, 0xE8	; 232
     d4a:	93 e0       	ldi	r25, 0x03	; 3
     d4c:	b9 01       	movw	r22, r18
     d4e:	40 e0       	ldi	r20, 0x00	; 0
     d50:	49 c0       	rjmp	.+146    	; 0xde4 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     d52:	81 31       	cpi	r24, 0x11	; 17
     d54:	30 f0       	brcs	.+12     	; 0xd62 <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     d56:	58 2f       	mov	r21, r24
     d58:	50 51       	subi	r21, 0x10	; 16
     d5a:	50 36       	cpi	r21, 0x60	; 96
     d5c:	18 f0       	brcs	.+6      	; 0xd64 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     d5e:	5f e5       	ldi	r21, 0x5F	; 95
     d60:	01 c0       	rjmp	.+2      	; 0xd64 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     d62:	50 e0       	ldi	r21, 0x00	; 0
     d64:	85 2f       	mov	r24, r21
     d66:	6c e0       	ldi	r22, 0x0C	; 12
     d68:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodqi4>
     d6c:	a8 2f       	mov	r26, r24
     d6e:	b0 e0       	ldi	r27, 0x00	; 0
     d70:	e4 ef       	ldi	r30, 0xF4	; 244
     d72:	ff ef       	ldi	r31, 0xFF	; 255
     d74:	ae 9f       	mul	r26, r30
     d76:	b0 01       	movw	r22, r0
     d78:	af 9f       	mul	r26, r31
     d7a:	70 0d       	add	r23, r0
     d7c:	be 9f       	mul	r27, r30
     d7e:	70 0d       	add	r23, r0
     d80:	11 24       	eor	r1, r1
     d82:	65 0f       	add	r22, r21
     d84:	71 1d       	adc	r23, r1
     d86:	6c 30       	cpi	r22, 0x0C	; 12
     d88:	71 05       	cpc	r23, r1
     d8a:	40 f4       	brcc	.+16     	; 0xd9c <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     d8c:	fb 01       	movw	r30, r22
     d8e:	ee 0f       	add	r30, r30
     d90:	ff 1f       	adc	r31, r31
     d92:	e4 5f       	subi	r30, 0xF4	; 244
     d94:	fe 4f       	sbci	r31, 0xFE	; 254
     d96:	60 81       	ld	r22, Z
     d98:	71 81       	ldd	r23, Z+1	; 0x01
     d9a:	02 c0       	rjmp	.+4      	; 0xda0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	87 30       	cpi	r24, 0x07	; 7
     da2:	81 f0       	breq	.+32     	; 0xdc4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     da4:	08 2e       	mov	r0, r24
     da6:	02 c0       	rjmp	.+4      	; 0xdac <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     da8:	66 0f       	add	r22, r22
     daa:	77 1f       	adc	r23, r23
     dac:	0a 94       	dec	r0
     dae:	e2 f7       	brpl	.-8      	; 0xda8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     db0:	82 30       	cpi	r24, 0x02	; 2
     db2:	28 f0       	brcs	.+10     	; 0xdbe <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     db4:	cb 01       	movw	r24, r22
     db6:	05 96       	adiw	r24, 0x05	; 5
     db8:	6a e0       	ldi	r22, 0x0A	; 10
     dba:	70 e0       	ldi	r23, 0x00	; 0
     dbc:	0c c0       	rjmp	.+24     	; 0xdd6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     dbe:	60 50       	subi	r22, 0x00	; 0
     dc0:	70 48       	sbci	r23, 0x80	; 128
     dc2:	0b c0       	rjmp	.+22     	; 0xdda <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     dc4:	cb 01       	movw	r24, r22
     dc6:	b6 e0       	ldi	r27, 0x06	; 6
     dc8:	88 0f       	add	r24, r24
     dca:	99 1f       	adc	r25, r25
     dcc:	ba 95       	dec	r27
     dce:	e1 f7       	brne	.-8      	; 0xdc8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     dd0:	02 96       	adiw	r24, 0x02	; 2
     dd2:	65 e0       	ldi	r22, 0x05	; 5
     dd4:	70 e0       	ldi	r23, 0x00	; 0
     dd6:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     dda:	40 31       	cpi	r20, 0x10	; 16
     ddc:	08 f0       	brcs	.+2      	; 0xde0 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     dde:	4f e0       	ldi	r20, 0x0F	; 15
     de0:	cb 01       	movw	r24, r22
     de2:	b9 01       	movw	r22, r18
     de4:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     de8:	08 95       	ret

00000dea <_ZL8nextNotev>:
     dea:	a0 e0       	ldi	r26, 0x00	; 0
     dec:	b0 e0       	ldi	r27, 0x00	; 0
     dee:	eb ef       	ldi	r30, 0xFB	; 251
     df0:	f6 e0       	ldi	r31, 0x06	; 6
     df2:	0c 94 86 12 	jmp	0x250c	; 0x250c <__prologue_saves__+0xa>
     df6:	b0 90 03 01 	lds	r11, 0x0103
     dfa:	80 91 4d 01 	lds	r24, 0x014D
     dfe:	88 23       	and	r24, r24
     e00:	61 f0       	breq	.+24     	; 0xe1a <_ZL8nextNotev+0x30>
     e02:	60 91 4e 01 	lds	r22, 0x014E
     e06:	66 23       	and	r22, r22
     e08:	41 f0       	breq	.+16     	; 0xe1a <_ZL8nextNotev+0x30>
     e0a:	8f ef       	ldi	r24, 0xFF	; 255
     e0c:	70 e0       	ldi	r23, 0x00	; 0
     e0e:	40 e0       	ldi	r20, 0x00	; 0
     e10:	0e 94 9f 06 	call	0xd3e	; 0xd3e <_ZN15OrangutanBuzzer8playNoteEhjh>
     e14:	10 92 4e 01 	sts	0x014E, r1
     e18:	34 c1       	rjmp	.+616    	; 0x1082 <_ZL8nextNotev+0x298>
     e1a:	c0 ec       	ldi	r28, 0xC0	; 192
     e1c:	dd e5       	ldi	r29, 0x5D	; 93
     e1e:	aa 24       	eor	r10, r10
     e20:	a3 94       	inc	r10
     e22:	14 e0       	ldi	r17, 0x04	; 4
     e24:	71 2e       	mov	r7, r17
     e26:	00 ed       	ldi	r16, 0xD0	; 208
     e28:	17 e0       	ldi	r17, 0x07	; 7
     e2a:	b4 e0       	ldi	r27, 0x04	; 4
     e2c:	eb 2e       	mov	r14, r27
     e2e:	f1 2c       	mov	r15, r1
     e30:	a4 ef       	ldi	r26, 0xF4	; 244
     e32:	ca 2e       	mov	r12, r26
     e34:	a1 e0       	ldi	r26, 0x01	; 1
     e36:	da 2e       	mov	r13, r26
     e38:	ff e0       	ldi	r31, 0x0F	; 15
     e3a:	8f 2e       	mov	r8, r31
     e3c:	91 2c       	mov	r9, r1
     e3e:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
     e42:	20 91 4b 01 	lds	r18, 0x014B
     e46:	30 91 4c 01 	lds	r19, 0x014C
     e4a:	2f 5f       	subi	r18, 0xFF	; 255
     e4c:	3f 4f       	sbci	r19, 0xFF	; 255
     e4e:	30 93 4c 01 	sts	0x014C, r19
     e52:	20 93 4b 01 	sts	0x014B, r18
     e56:	86 36       	cpi	r24, 0x66	; 102
     e58:	f1 f1       	breq	.+124    	; 0xed6 <_ZL8nextNotev+0xec>
     e5a:	87 36       	cpi	r24, 0x67	; 103
     e5c:	cc f4       	brge	.+50     	; 0xe90 <_ZL8nextNotev+0xa6>
     e5e:	82 36       	cpi	r24, 0x62	; 98
     e60:	09 f4       	brne	.+2      	; 0xe64 <_ZL8nextNotev+0x7a>
     e62:	af c0       	rjmp	.+350    	; 0xfc2 <_ZL8nextNotev+0x1d8>
     e64:	83 36       	cpi	r24, 0x63	; 99
     e66:	7c f4       	brge	.+30     	; 0xe86 <_ZL8nextNotev+0x9c>
     e68:	8e 33       	cpi	r24, 0x3E	; 62
     e6a:	49 f1       	breq	.+82     	; 0xebe <_ZL8nextNotev+0xd4>
     e6c:	8f 33       	cpi	r24, 0x3F	; 63
     e6e:	3c f4       	brge	.+14     	; 0xe7e <_ZL8nextNotev+0x94>
     e70:	81 32       	cpi	r24, 0x21	; 33
     e72:	09 f4       	brne	.+2      	; 0xe76 <_ZL8nextNotev+0x8c>
     e74:	87 c0       	rjmp	.+270    	; 0xf84 <_ZL8nextNotev+0x19a>
     e76:	8c 33       	cpi	r24, 0x3C	; 60
     e78:	09 f0       	breq	.+2      	; 0xe7c <_ZL8nextNotev+0x92>
     e7a:	9b c0       	rjmp	.+310    	; 0xfb2 <_ZL8nextNotev+0x1c8>
     e7c:	22 c0       	rjmp	.+68     	; 0xec2 <_ZL8nextNotev+0xd8>
     e7e:	81 36       	cpi	r24, 0x61	; 97
     e80:	09 f0       	breq	.+2      	; 0xe84 <_ZL8nextNotev+0x9a>
     e82:	97 c0       	rjmp	.+302    	; 0xfb2 <_ZL8nextNotev+0x1c8>
     e84:	9b c0       	rjmp	.+310    	; 0xfbc <_ZL8nextNotev+0x1d2>
     e86:	84 36       	cpi	r24, 0x64	; 100
     e88:	01 f1       	breq	.+64     	; 0xeca <_ZL8nextNotev+0xe0>
     e8a:	85 36       	cpi	r24, 0x65	; 101
     e8c:	0c f5       	brge	.+66     	; 0xed0 <_ZL8nextNotev+0xe6>
     e8e:	1b c0       	rjmp	.+54     	; 0xec6 <_ZL8nextNotev+0xdc>
     e90:	8f 36       	cpi	r24, 0x6F	; 111
     e92:	09 f4       	brne	.+2      	; 0xe96 <_ZL8nextNotev+0xac>
     e94:	47 c0       	rjmp	.+142    	; 0xf24 <_ZL8nextNotev+0x13a>
     e96:	80 37       	cpi	r24, 0x70	; 112
     e98:	44 f4       	brge	.+16     	; 0xeaa <_ZL8nextNotev+0xc0>
     e9a:	8c 36       	cpi	r24, 0x6C	; 108
     e9c:	11 f1       	breq	.+68     	; 0xee2 <_ZL8nextNotev+0xf8>
     e9e:	8d 36       	cpi	r24, 0x6D	; 109
     ea0:	61 f1       	breq	.+88     	; 0xefa <_ZL8nextNotev+0x110>
     ea2:	87 36       	cpi	r24, 0x67	; 103
     ea4:	09 f0       	breq	.+2      	; 0xea8 <_ZL8nextNotev+0xbe>
     ea6:	85 c0       	rjmp	.+266    	; 0xfb2 <_ZL8nextNotev+0x1c8>
     ea8:	19 c0       	rjmp	.+50     	; 0xedc <_ZL8nextNotev+0xf2>
     eaa:	84 37       	cpi	r24, 0x74	; 116
     eac:	09 f4       	brne	.+2      	; 0xeb0 <_ZL8nextNotev+0xc6>
     eae:	44 c0       	rjmp	.+136    	; 0xf38 <_ZL8nextNotev+0x14e>
     eb0:	86 37       	cpi	r24, 0x76	; 118
     eb2:	09 f4       	brne	.+2      	; 0xeb6 <_ZL8nextNotev+0xcc>
     eb4:	60 c0       	rjmp	.+192    	; 0xf76 <_ZL8nextNotev+0x18c>
     eb6:	82 37       	cpi	r24, 0x72	; 114
     eb8:	09 f0       	breq	.+2      	; 0xebc <_ZL8nextNotev+0xd2>
     eba:	7b c0       	rjmp	.+246    	; 0xfb2 <_ZL8nextNotev+0x1c8>
     ebc:	39 c0       	rjmp	.+114    	; 0xf30 <_ZL8nextNotev+0x146>
     ebe:	b3 94       	inc	r11
     ec0:	be cf       	rjmp	.-132    	; 0xe3e <_ZL8nextNotev+0x54>
     ec2:	ba 94       	dec	r11
     ec4:	bc cf       	rjmp	.-136    	; 0xe3e <_ZL8nextNotev+0x54>
     ec6:	ee 24       	eor	r14, r14
     ec8:	35 c0       	rjmp	.+106    	; 0xf34 <_ZL8nextNotev+0x14a>
     eca:	ee 24       	eor	r14, r14
     ecc:	82 e0       	ldi	r24, 0x02	; 2
     ece:	7b c0       	rjmp	.+246    	; 0xfc6 <_ZL8nextNotev+0x1dc>
     ed0:	ee 24       	eor	r14, r14
     ed2:	84 e0       	ldi	r24, 0x04	; 4
     ed4:	78 c0       	rjmp	.+240    	; 0xfc6 <_ZL8nextNotev+0x1dc>
     ed6:	ee 24       	eor	r14, r14
     ed8:	85 e0       	ldi	r24, 0x05	; 5
     eda:	75 c0       	rjmp	.+234    	; 0xfc6 <_ZL8nextNotev+0x1dc>
     edc:	ee 24       	eor	r14, r14
     ede:	87 e0       	ldi	r24, 0x07	; 7
     ee0:	72 c0       	rjmp	.+228    	; 0xfc6 <_ZL8nextNotev+0x1dc>
     ee2:	0e 94 9b 05 	call	0xb36	; 0xb36 <_ZL9getNumberv>
     ee6:	bc 01       	movw	r22, r24
     ee8:	90 93 05 01 	sts	0x0105, r25
     eec:	80 93 04 01 	sts	0x0104, r24
     ef0:	80 91 06 01 	lds	r24, 0x0106
     ef4:	90 91 07 01 	lds	r25, 0x0107
     ef8:	37 c0       	rjmp	.+110    	; 0xf68 <_ZL8nextNotev+0x17e>
     efa:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
     efe:	8c 36       	cpi	r24, 0x6C	; 108
     f00:	19 f4       	brne	.+6      	; 0xf08 <_ZL8nextNotev+0x11e>
     f02:	10 92 4d 01 	sts	0x014D, r1
     f06:	04 c0       	rjmp	.+8      	; 0xf10 <_ZL8nextNotev+0x126>
     f08:	a0 92 4d 01 	sts	0x014D, r10
     f0c:	10 92 4e 01 	sts	0x014E, r1
     f10:	80 91 4b 01 	lds	r24, 0x014B
     f14:	90 91 4c 01 	lds	r25, 0x014C
     f18:	01 96       	adiw	r24, 0x01	; 1
     f1a:	90 93 4c 01 	sts	0x014C, r25
     f1e:	80 93 4b 01 	sts	0x014B, r24
     f22:	8d cf       	rjmp	.-230    	; 0xe3e <_ZL8nextNotev+0x54>
     f24:	0e 94 9b 05 	call	0xb36	; 0xb36 <_ZL9getNumberv>
     f28:	b8 2e       	mov	r11, r24
     f2a:	80 93 03 01 	sts	0x0103, r24
     f2e:	87 cf       	rjmp	.-242    	; 0xe3e <_ZL8nextNotev+0x54>
     f30:	ee 24       	eor	r14, r14
     f32:	e3 94       	inc	r14
     f34:	80 e0       	ldi	r24, 0x00	; 0
     f36:	47 c0       	rjmp	.+142    	; 0xfc6 <_ZL8nextNotev+0x1dc>
     f38:	0e 94 9b 05 	call	0xb36	; 0xb36 <_ZL9getNumberv>
     f3c:	bc 01       	movw	r22, r24
     f3e:	ce 01       	movw	r24, r28
     f40:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     f44:	cb 01       	movw	r24, r22
     f46:	88 0f       	add	r24, r24
     f48:	99 1f       	adc	r25, r25
     f4a:	53 e0       	ldi	r21, 0x03	; 3
     f4c:	66 0f       	add	r22, r22
     f4e:	77 1f       	adc	r23, r23
     f50:	5a 95       	dec	r21
     f52:	e1 f7       	brne	.-8      	; 0xf4c <_ZL8nextNotev+0x162>
     f54:	86 0f       	add	r24, r22
     f56:	97 1f       	adc	r25, r23
     f58:	90 93 07 01 	sts	0x0107, r25
     f5c:	80 93 06 01 	sts	0x0106, r24
     f60:	60 91 04 01 	lds	r22, 0x0104
     f64:	70 91 05 01 	lds	r23, 0x0105
     f68:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
     f6c:	70 93 09 01 	sts	0x0109, r23
     f70:	60 93 08 01 	sts	0x0108, r22
     f74:	64 cf       	rjmp	.-312    	; 0xe3e <_ZL8nextNotev+0x54>
     f76:	0e 94 9b 05 	call	0xb36	; 0xb36 <_ZL9getNumberv>
     f7a:	90 93 0b 01 	sts	0x010B, r25
     f7e:	80 93 0a 01 	sts	0x010A, r24
     f82:	5d cf       	rjmp	.-326    	; 0xe3e <_ZL8nextNotev+0x54>
     f84:	70 92 03 01 	sts	0x0103, r7
     f88:	10 93 07 01 	sts	0x0107, r17
     f8c:	00 93 06 01 	sts	0x0106, r16
     f90:	f0 92 05 01 	sts	0x0105, r15
     f94:	e0 92 04 01 	sts	0x0104, r14
     f98:	d0 92 09 01 	sts	0x0109, r13
     f9c:	c0 92 08 01 	sts	0x0108, r12
     fa0:	90 92 0b 01 	sts	0x010B, r9
     fa4:	80 92 0a 01 	sts	0x010A, r8
     fa8:	10 92 4d 01 	sts	0x014D, r1
     fac:	44 e0       	ldi	r20, 0x04	; 4
     fae:	b4 2e       	mov	r11, r20
     fb0:	46 cf       	rjmp	.-372    	; 0xe3e <_ZL8nextNotev+0x54>
     fb2:	10 92 4c 01 	sts	0x014C, r1
     fb6:	10 92 4b 01 	sts	0x014B, r1
     fba:	63 c0       	rjmp	.+198    	; 0x1082 <_ZL8nextNotev+0x298>
     fbc:	ee 24       	eor	r14, r14
     fbe:	89 e0       	ldi	r24, 0x09	; 9
     fc0:	02 c0       	rjmp	.+4      	; 0xfc6 <_ZL8nextNotev+0x1dc>
     fc2:	ee 24       	eor	r14, r14
     fc4:	8b e0       	ldi	r24, 0x0B	; 11
     fc6:	9c e0       	ldi	r25, 0x0C	; 12
     fc8:	b9 9e       	mul	r11, r25
     fca:	b0 2c       	mov	r11, r0
     fcc:	11 24       	eor	r1, r1
     fce:	b8 0e       	add	r11, r24
     fd0:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
     fd4:	8b 32       	cpi	r24, 0x2B	; 43
     fd6:	11 f0       	breq	.+4      	; 0xfdc <_ZL8nextNotev+0x1f2>
     fd8:	83 32       	cpi	r24, 0x23	; 35
     fda:	b9 f4       	brne	.+46     	; 0x100a <_ZL8nextNotev+0x220>
     fdc:	80 91 4b 01 	lds	r24, 0x014B
     fe0:	90 91 4c 01 	lds	r25, 0x014C
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	90 93 4c 01 	sts	0x014C, r25
     fea:	80 93 4b 01 	sts	0x014B, r24
     fee:	b3 94       	inc	r11
     ff0:	ef cf       	rjmp	.-34     	; 0xfd0 <_ZL8nextNotev+0x1e6>
     ff2:	80 91 4b 01 	lds	r24, 0x014B
     ff6:	90 91 4c 01 	lds	r25, 0x014C
     ffa:	01 96       	adiw	r24, 0x01	; 1
     ffc:	90 93 4c 01 	sts	0x014C, r25
    1000:	80 93 4b 01 	sts	0x014B, r24
    1004:	ba 94       	dec	r11
    1006:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
    100a:	8d 32       	cpi	r24, 0x2D	; 45
    100c:	91 f3       	breq	.-28     	; 0xff2 <_ZL8nextNotev+0x208>
    100e:	c0 91 08 01 	lds	r28, 0x0108
    1012:	d0 91 09 01 	lds	r29, 0x0109
    1016:	81 53       	subi	r24, 0x31	; 49
    1018:	88 30       	cpi	r24, 0x08	; 8
    101a:	58 f4       	brcc	.+22     	; 0x1032 <_ZL8nextNotev+0x248>
    101c:	c0 91 06 01 	lds	r28, 0x0106
    1020:	d0 91 07 01 	lds	r29, 0x0107
    1024:	0e 94 9b 05 	call	0xb36	; 0xb36 <_ZL9getNumberv>
    1028:	bc 01       	movw	r22, r24
    102a:	ce 01       	movw	r24, r28
    102c:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
    1030:	eb 01       	movw	r28, r22
    1032:	8e 01       	movw	r16, r28
    1034:	0b c0       	rjmp	.+22     	; 0x104c <_ZL8nextNotev+0x262>
    1036:	80 91 4b 01 	lds	r24, 0x014B
    103a:	90 91 4c 01 	lds	r25, 0x014C
    103e:	01 96       	adiw	r24, 0x01	; 1
    1040:	90 93 4c 01 	sts	0x014C, r25
    1044:	80 93 4b 01 	sts	0x014B, r24
    1048:	c0 0f       	add	r28, r16
    104a:	d1 1f       	adc	r29, r17
    104c:	16 95       	lsr	r17
    104e:	07 95       	ror	r16
    1050:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZL16currentCharacterv>
    1054:	8e 32       	cpi	r24, 0x2E	; 46
    1056:	79 f3       	breq	.-34     	; 0x1036 <_ZL8nextNotev+0x24c>
    1058:	80 91 4d 01 	lds	r24, 0x014D
    105c:	88 23       	and	r24, r24
    105e:	39 f0       	breq	.+14     	; 0x106e <_ZL8nextNotev+0x284>
    1060:	ce 01       	movw	r24, r28
    1062:	96 95       	lsr	r25
    1064:	87 95       	ror	r24
    1066:	80 93 4e 01 	sts	0x014E, r24
    106a:	c8 1b       	sub	r28, r24
    106c:	d1 09       	sbc	r29, r1
    106e:	ee 20       	and	r14, r14
    1070:	11 f0       	breq	.+4      	; 0x1076 <_ZL8nextNotev+0x28c>
    1072:	bb 24       	eor	r11, r11
    1074:	ba 94       	dec	r11
    1076:	8b 2d       	mov	r24, r11
    1078:	be 01       	movw	r22, r28
    107a:	40 91 0a 01 	lds	r20, 0x010A
    107e:	0e 94 9f 06 	call	0xd3e	; 0xd3e <_ZN15OrangutanBuzzer8playNoteEhjh>
    1082:	cd b7       	in	r28, 0x3d	; 61
    1084:	de b7       	in	r29, 0x3e	; 62
    1086:	ed e0       	ldi	r30, 0x0D	; 13
    1088:	0c 94 a2 12 	jmp	0x2544	; 0x2544 <__epilogue_restores__+0xa>

0000108c <__vector_13>:
    108c:	1f 92       	push	r1
    108e:	0f 92       	push	r0
    1090:	0f b6       	in	r0, 0x3f	; 63
    1092:	0f 92       	push	r0
    1094:	11 24       	eor	r1, r1
    1096:	2f 93       	push	r18
    1098:	3f 93       	push	r19
    109a:	4f 93       	push	r20
    109c:	5f 93       	push	r21
    109e:	6f 93       	push	r22
    10a0:	7f 93       	push	r23
    10a2:	8f 93       	push	r24
    10a4:	9f 93       	push	r25
    10a6:	af 93       	push	r26
    10a8:	bf 93       	push	r27
    10aa:	ef 93       	push	r30
    10ac:	ff 93       	push	r31
    10ae:	80 91 51 01 	lds	r24, 0x0151
    10b2:	90 91 52 01 	lds	r25, 0x0152
    10b6:	9c 01       	movw	r18, r24
    10b8:	21 50       	subi	r18, 0x01	; 1
    10ba:	30 40       	sbci	r19, 0x00	; 0
    10bc:	30 93 52 01 	sts	0x0152, r19
    10c0:	20 93 51 01 	sts	0x0151, r18
    10c4:	00 97       	sbiw	r24, 0x00	; 0
    10c6:	11 f5       	brne	.+68     	; 0x110c <__vector_13+0x80>
    10c8:	10 92 6f 00 	sts	0x006F, r1
    10cc:	78 94       	sei
    10ce:	80 91 81 00 	lds	r24, 0x0081
    10d2:	88 7f       	andi	r24, 0xF8	; 248
    10d4:	81 60       	ori	r24, 0x01	; 1
    10d6:	80 93 81 00 	sts	0x0081, r24
    10da:	80 e1       	ldi	r24, 0x10	; 16
    10dc:	97 e2       	ldi	r25, 0x27	; 39
    10de:	90 93 89 00 	sts	0x0089, r25
    10e2:	80 93 88 00 	sts	0x0088, r24
    10e6:	10 92 8b 00 	sts	0x008B, r1
    10ea:	10 92 8a 00 	sts	0x008A, r1
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	80 93 02 01 	sts	0x0102, r24
    10f4:	80 91 4b 01 	lds	r24, 0x014B
    10f8:	90 91 4c 01 	lds	r25, 0x014C
    10fc:	00 97       	sbiw	r24, 0x00	; 0
    10fe:	31 f0       	breq	.+12     	; 0x110c <__vector_13+0x80>
    1100:	80 91 50 01 	lds	r24, 0x0150
    1104:	88 23       	and	r24, r24
    1106:	11 f4       	brne	.+4      	; 0x110c <__vector_13+0x80>
    1108:	0e 94 f5 06 	call	0xdea	; 0xdea <_ZL8nextNotev>
    110c:	ff 91       	pop	r31
    110e:	ef 91       	pop	r30
    1110:	bf 91       	pop	r27
    1112:	af 91       	pop	r26
    1114:	9f 91       	pop	r25
    1116:	8f 91       	pop	r24
    1118:	7f 91       	pop	r23
    111a:	6f 91       	pop	r22
    111c:	5f 91       	pop	r21
    111e:	4f 91       	pop	r20
    1120:	3f 91       	pop	r19
    1122:	2f 91       	pop	r18
    1124:	0f 90       	pop	r0
    1126:	0f be       	out	0x3f, r0	; 63
    1128:	0f 90       	pop	r0
    112a:	1f 90       	pop	r1
    112c:	18 95       	reti

0000112e <_ZN15OrangutanBuzzer9isPlayingEv>:
    112e:	80 91 02 01 	lds	r24, 0x0102
    1132:	88 23       	and	r24, r24
    1134:	51 f0       	breq	.+20     	; 0x114a <_ZN15OrangutanBuzzer9isPlayingEv+0x1c>
    1136:	81 e0       	ldi	r24, 0x01	; 1
    1138:	20 91 4b 01 	lds	r18, 0x014B
    113c:	30 91 4c 01 	lds	r19, 0x014C
    1140:	21 15       	cp	r18, r1
    1142:	31 05       	cpc	r19, r1
    1144:	19 f4       	brne	.+6      	; 0x114c <_ZN15OrangutanBuzzer9isPlayingEv+0x1e>
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	08 95       	ret
    114a:	81 e0       	ldi	r24, 0x01	; 1
    114c:	08 95       	ret

0000114e <is_playing>:
    114e:	0e 94 97 08 	call	0x112e	; 0x112e <_ZN15OrangutanBuzzer9isPlayingEv>
    1152:	08 95       	ret

00001154 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    1154:	10 92 6f 00 	sts	0x006F, r1
    1158:	90 93 4c 01 	sts	0x014C, r25
    115c:	80 93 4b 01 	sts	0x014B, r24
    1160:	81 e0       	ldi	r24, 0x01	; 1
    1162:	80 93 4f 01 	sts	0x014F, r24
    1166:	10 92 4e 01 	sts	0x014E, r1
    116a:	0e 94 f5 06 	call	0xdea	; 0xdea <_ZL8nextNotev>
    116e:	08 95       	ret

00001170 <play_from_program_space>:
    1170:	0e 94 aa 08 	call	0x1154	; 0x1154 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    1174:	08 95       	ret

00001176 <delayMicroseconds.clone.0>:
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	90 e0       	ldi	r25, 0x00	; 0
    117a:	6f 93       	push	r22
    117c:	64 e0       	ldi	r22, 0x04	; 4
    117e:	6a 95       	dec	r22
    1180:	f1 f7       	brne	.-4      	; 0x117e <delayMicroseconds.clone.0+0x8>
    1182:	6f 91       	pop	r22
    1184:	01 97       	sbiw	r24, 0x01	; 1
    1186:	c9 f7       	brne	.-14     	; 0x117a <delayMicroseconds.clone.0+0x4>
    1188:	08 95       	ret

0000118a <_ZN12OrangutanLCD8busyWaitEv>:
    118a:	0f 93       	push	r16
    118c:	1f 93       	push	r17
    118e:	cf 93       	push	r28
    1190:	df 93       	push	r29
    1192:	1a b1       	in	r17, 0x0a	; 10
    1194:	57 98       	cbi	0x0a, 7	; 10
    1196:	5a 98       	cbi	0x0b, 2	; 11
    1198:	28 9a       	sbi	0x05, 0	; 5
    119a:	c0 e0       	ldi	r28, 0x00	; 0
    119c:	d0 e0       	ldi	r29, 0x00	; 0
    119e:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    11a2:	5c 9a       	sbi	0x0b, 4	; 11
    11a4:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    11a8:	09 b1       	in	r16, 0x09	; 9
    11aa:	5c 98       	cbi	0x0b, 4	; 11
    11ac:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    11b0:	5c 9a       	sbi	0x0b, 4	; 11
    11b2:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    11b6:	5c 98       	cbi	0x0b, 4	; 11
    11b8:	07 ff       	sbrs	r16, 7
    11ba:	11 c0       	rjmp	.+34     	; 0x11de <_ZN12OrangutanLCD8busyWaitEv+0x54>
    11bc:	24 96       	adiw	r28, 0x04	; 4
    11be:	9e 01       	movw	r18, r28
    11c0:	40 e0       	ldi	r20, 0x00	; 0
    11c2:	50 e0       	ldi	r21, 0x00	; 0
    11c4:	80 91 57 01 	lds	r24, 0x0157
    11c8:	90 91 58 01 	lds	r25, 0x0158
    11cc:	a0 91 59 01 	lds	r26, 0x0159
    11d0:	b0 91 5a 01 	lds	r27, 0x015A
    11d4:	28 17       	cp	r18, r24
    11d6:	39 07       	cpc	r19, r25
    11d8:	4a 07       	cpc	r20, r26
    11da:	5b 07       	cpc	r21, r27
    11dc:	00 f3       	brcs	.-64     	; 0x119e <_ZN12OrangutanLCD8busyWaitEv+0x14>
    11de:	1a b9       	out	0x0a, r17	; 10
    11e0:	df 91       	pop	r29
    11e2:	cf 91       	pop	r28
    11e4:	1f 91       	pop	r17
    11e6:	0f 91       	pop	r16
    11e8:	08 95       	ret

000011ea <_ZN12OrangutanLCD8sendDataEh>:
    11ea:	65 b1       	in	r22, 0x05	; 5
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	ac 01       	movw	r20, r24
    11f0:	41 70       	andi	r20, 0x01	; 1
    11f2:	50 70       	andi	r21, 0x00	; 0
    11f4:	44 0f       	add	r20, r20
    11f6:	55 1f       	adc	r21, r21
    11f8:	9c 01       	movw	r18, r24
    11fa:	26 70       	andi	r18, 0x06	; 6
    11fc:	30 70       	andi	r19, 0x00	; 0
    11fe:	53 e0       	ldi	r21, 0x03	; 3
    1200:	22 0f       	add	r18, r18
    1202:	33 1f       	adc	r19, r19
    1204:	5a 95       	dec	r21
    1206:	e1 f7       	brne	.-8      	; 0x1200 <_ZN12OrangutanLCD8sendDataEh+0x16>
    1208:	24 2b       	or	r18, r20
    120a:	6d 7c       	andi	r22, 0xCD	; 205
    120c:	26 2b       	or	r18, r22
    120e:	25 b9       	out	0x05, r18	; 5
    1210:	2b b1       	in	r18, 0x0b	; 11
    1212:	88 70       	andi	r24, 0x08	; 8
    1214:	90 70       	andi	r25, 0x00	; 0
    1216:	34 e0       	ldi	r19, 0x04	; 4
    1218:	88 0f       	add	r24, r24
    121a:	99 1f       	adc	r25, r25
    121c:	3a 95       	dec	r19
    121e:	e1 f7       	brne	.-8      	; 0x1218 <_ZN12OrangutanLCD8sendDataEh+0x2e>
    1220:	2f 77       	andi	r18, 0x7F	; 127
    1222:	28 2b       	or	r18, r24
    1224:	2b b9       	out	0x0b, r18	; 11
    1226:	5c 9a       	sbi	0x0b, 4	; 11
    1228:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    122c:	5c 98       	cbi	0x0b, 4	; 11
    122e:	0e 94 bb 08 	call	0x1176	; 0x1176 <delayMicroseconds.clone.0>
    1232:	08 95       	ret

00001234 <_ZN12OrangutanLCD4sendEhhh>:
    1234:	a2 e0       	ldi	r26, 0x02	; 2
    1236:	b0 e0       	ldi	r27, 0x00	; 0
    1238:	e0 e2       	ldi	r30, 0x20	; 32
    123a:	f9 e0       	ldi	r31, 0x09	; 9
    123c:	0c 94 8c 12 	jmp	0x2518	; 0x2518 <__prologue_saves__+0x16>
    1240:	18 2f       	mov	r17, r24
    1242:	4a 83       	std	Y+2, r20	; 0x02
    1244:	69 83       	std	Y+1, r22	; 0x01
    1246:	0e 94 c5 09 	call	0x138a	; 0x138a <_ZN12OrangutanLCD4initEv>
    124a:	0e 94 c5 08 	call	0x118a	; 0x118a <_ZN12OrangutanLCD8busyWaitEv>
    124e:	f4 b0       	in	r15, 0x04	; 4
    1250:	05 b1       	in	r16, 0x05	; 5
    1252:	da b0       	in	r13, 0x0a	; 10
    1254:	eb b0       	in	r14, 0x0b	; 11
    1256:	28 98       	cbi	0x05, 0	; 5
    1258:	69 81       	ldd	r22, Y+1	; 0x01
    125a:	4a 81       	ldd	r20, Y+2	; 0x02
    125c:	66 23       	and	r22, r22
    125e:	11 f0       	breq	.+4      	; 0x1264 <_ZN12OrangutanLCD4sendEhhh+0x30>
    1260:	5a 9a       	sbi	0x0b, 2	; 11
    1262:	01 c0       	rjmp	.+2      	; 0x1266 <_ZN12OrangutanLCD4sendEhhh+0x32>
    1264:	5a 98       	cbi	0x0b, 2	; 11
    1266:	84 b1       	in	r24, 0x04	; 4
    1268:	82 63       	ori	r24, 0x32	; 50
    126a:	84 b9       	out	0x04, r24	; 4
    126c:	57 9a       	sbi	0x0a, 7	; 10
    126e:	41 30       	cpi	r20, 0x01	; 1
    1270:	29 f0       	breq	.+10     	; 0x127c <_ZN12OrangutanLCD4sendEhhh+0x48>
    1272:	81 2f       	mov	r24, r17
    1274:	82 95       	swap	r24
    1276:	8f 70       	andi	r24, 0x0F	; 15
    1278:	0e 94 f5 08 	call	0x11ea	; 0x11ea <_ZN12OrangutanLCD8sendDataEh>
    127c:	81 2f       	mov	r24, r17
    127e:	8f 70       	andi	r24, 0x0F	; 15
    1280:	0e 94 f5 08 	call	0x11ea	; 0x11ea <_ZN12OrangutanLCD8sendDataEh>
    1284:	da b8       	out	0x0a, r13	; 10
    1286:	eb b8       	out	0x0b, r14	; 11
    1288:	f4 b8       	out	0x04, r15	; 4
    128a:	05 b9       	out	0x05, r16	; 5
    128c:	22 96       	adiw	r28, 0x02	; 2
    128e:	e7 e0       	ldi	r30, 0x07	; 7
    1290:	0c 94 a8 12 	jmp	0x2550	; 0x2550 <__epilogue_restores__+0x16>

00001294 <_ZN12OrangutanLCD8send_cmdEh>:
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	42 e0       	ldi	r20, 0x02	; 2
    1298:	0e 94 1a 09 	call	0x1234	; 0x1234 <_ZN12OrangutanLCD4sendEhhh>
    129c:	08 95       	ret

0000129e <_ZN12OrangutanLCD9send_dataEh>:
    129e:	61 e0       	ldi	r22, 0x01	; 1
    12a0:	42 e0       	ldi	r20, 0x02	; 2
    12a2:	0e 94 1a 09 	call	0x1234	; 0x1234 <_ZN12OrangutanLCD4sendEhhh>
    12a6:	08 95       	ret

000012a8 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    12a8:	ef 92       	push	r14
    12aa:	ff 92       	push	r15
    12ac:	1f 93       	push	r17
    12ae:	df 93       	push	r29
    12b0:	cf 93       	push	r28
    12b2:	0f 92       	push	r0
    12b4:	cd b7       	in	r28, 0x3d	; 61
    12b6:	de b7       	in	r29, 0x3e	; 62
    12b8:	66 0f       	add	r22, r22
    12ba:	66 0f       	add	r22, r22
    12bc:	66 0f       	add	r22, r22
    12be:	48 2f       	mov	r20, r24
    12c0:	59 2f       	mov	r21, r25
    12c2:	7a 01       	movw	r14, r20
    12c4:	10 e0       	ldi	r17, 0x00	; 0
    12c6:	81 2f       	mov	r24, r17
    12c8:	86 0f       	add	r24, r22
    12ca:	80 64       	ori	r24, 0x40	; 64
    12cc:	69 83       	std	Y+1, r22	; 0x01
    12ce:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    12d2:	f7 01       	movw	r30, r14
    12d4:	84 91       	lpm	r24, Z
    12d6:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    12da:	1f 5f       	subi	r17, 0xFF	; 255
    12dc:	08 94       	sec
    12de:	e1 1c       	adc	r14, r1
    12e0:	f1 1c       	adc	r15, r1
    12e2:	69 81       	ldd	r22, Y+1	; 0x01
    12e4:	18 30       	cpi	r17, 0x08	; 8
    12e6:	79 f7       	brne	.-34     	; 0x12c6 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    12e8:	0f 90       	pop	r0
    12ea:	cf 91       	pop	r28
    12ec:	df 91       	pop	r29
    12ee:	1f 91       	pop	r17
    12f0:	ff 90       	pop	r15
    12f2:	ef 90       	pop	r14
    12f4:	08 95       	ret

000012f6 <lcd_load_custom_character>:
    12f6:	0e 94 54 09 	call	0x12a8	; 0x12a8 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    12fa:	08 95       	ret

000012fc <print_character>:
    12fc:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    1300:	08 95       	ret

00001302 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1302:	60 e0       	ldi	r22, 0x00	; 0
    1304:	41 e0       	ldi	r20, 0x01	; 1
    1306:	0e 94 1a 09 	call	0x1234	; 0x1234 <_ZN12OrangutanLCD4sendEhhh>
    130a:	08 95       	ret

0000130c <_ZN12OrangutanLCD5init2Ev>:
    130c:	80 e1       	ldi	r24, 0x10	; 16
    130e:	97 e2       	ldi	r25, 0x27	; 39
    1310:	a0 e0       	ldi	r26, 0x00	; 0
    1312:	b0 e0       	ldi	r27, 0x00	; 0
    1314:	80 93 57 01 	sts	0x0157, r24
    1318:	90 93 58 01 	sts	0x0158, r25
    131c:	a0 93 59 01 	sts	0x0159, r26
    1320:	b0 93 5a 01 	sts	0x015A, r27
    1324:	52 9a       	sbi	0x0a, 2	; 10
    1326:	20 9a       	sbi	0x04, 0	; 4
    1328:	54 9a       	sbi	0x0a, 4	; 10
    132a:	8e e1       	ldi	r24, 0x1E	; 30
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    1332:	83 e0       	ldi	r24, 0x03	; 3
    1334:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1338:	86 e0       	ldi	r24, 0x06	; 6
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    1340:	83 e0       	ldi	r24, 0x03	; 3
    1342:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1346:	82 e0       	ldi	r24, 0x02	; 2
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    134e:	83 e0       	ldi	r24, 0x03	; 3
    1350:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1354:	82 e0       	ldi	r24, 0x02	; 2
    1356:	90 e0       	ldi	r25, 0x00	; 0
    1358:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    135c:	82 e0       	ldi	r24, 0x02	; 2
    135e:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1362:	82 e0       	ldi	r24, 0x02	; 2
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    136a:	88 e2       	ldi	r24, 0x28	; 40
    136c:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    1370:	88 e0       	ldi	r24, 0x08	; 8
    1372:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    1376:	81 e0       	ldi	r24, 0x01	; 1
    1378:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    137c:	86 e0       	ldi	r24, 0x06	; 6
    137e:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    1382:	8c e0       	ldi	r24, 0x0C	; 12
    1384:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    1388:	08 95       	ret

0000138a <_ZN12OrangutanLCD4initEv>:
    138a:	80 91 5b 01 	lds	r24, 0x015B
    138e:	88 23       	and	r24, r24
    1390:	29 f4       	brne	.+10     	; 0x139c <_ZN12OrangutanLCD4initEv+0x12>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	80 93 5b 01 	sts	0x015B, r24
    1398:	0e 94 86 09 	call	0x130c	; 0x130c <_ZN12OrangutanLCD5init2Ev>
    139c:	08 95       	ret

0000139e <_ZN12OrangutanLCD5clearEv>:
    139e:	81 e0       	ldi	r24, 0x01	; 1
    13a0:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    13a4:	80 91 53 01 	lds	r24, 0x0153
    13a8:	90 91 54 01 	lds	r25, 0x0154
    13ac:	00 97       	sbiw	r24, 0x00	; 0
    13ae:	11 f1       	breq	.+68     	; 0x13f4 <_ZN12OrangutanLCD5clearEv+0x56>
    13b0:	a0 e0       	ldi	r26, 0x00	; 0
    13b2:	b0 e2       	ldi	r27, 0x20	; 32
    13b4:	08 c0       	rjmp	.+16     	; 0x13c6 <_ZN12OrangutanLCD5clearEv+0x28>
    13b6:	e0 91 53 01 	lds	r30, 0x0153
    13ba:	f0 91 54 01 	lds	r31, 0x0154
    13be:	e2 0f       	add	r30, r18
    13c0:	f3 1f       	adc	r31, r19
    13c2:	b0 83       	st	Z, r27
    13c4:	af 5f       	subi	r26, 0xFF	; 255
    13c6:	2a 2f       	mov	r18, r26
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	80 91 24 01 	lds	r24, 0x0124
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	01 97       	sbiw	r24, 0x01	; 1
    13d2:	60 91 25 01 	lds	r22, 0x0125
    13d6:	70 e0       	ldi	r23, 0x00	; 0
    13d8:	86 9f       	mul	r24, r22
    13da:	a0 01       	movw	r20, r0
    13dc:	87 9f       	mul	r24, r23
    13de:	50 0d       	add	r21, r0
    13e0:	96 9f       	mul	r25, r22
    13e2:	50 0d       	add	r21, r0
    13e4:	11 24       	eor	r1, r1
    13e6:	24 17       	cp	r18, r20
    13e8:	35 07       	cpc	r19, r21
    13ea:	2c f3       	brlt	.-54     	; 0x13b6 <_ZN12OrangutanLCD5clearEv+0x18>
    13ec:	10 92 56 01 	sts	0x0156, r1
    13f0:	10 92 55 01 	sts	0x0155, r1
    13f4:	08 95       	ret

000013f6 <clear>:
    13f6:	0e 94 cf 09 	call	0x139e	; 0x139e <_ZN12OrangutanLCD5clearEv>
    13fa:	08 95       	ret

000013fc <_ZN12OrangutanLCD5printEPKc>:
    13fc:	ef 92       	push	r14
    13fe:	ff 92       	push	r15
    1400:	cf 93       	push	r28
    1402:	df 93       	push	r29
    1404:	e8 2e       	mov	r14, r24
    1406:	e7 01       	movw	r28, r14
    1408:	7e 01       	movw	r14, r28
    140a:	f9 2e       	mov	r15, r25
    140c:	e7 01       	movw	r28, r14
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <_ZN12OrangutanLCD5printEPKc+0x18>
    1410:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    1414:	89 91       	ld	r24, Y+
    1416:	88 23       	and	r24, r24
    1418:	d9 f7       	brne	.-10     	; 0x1410 <_ZN12OrangutanLCD5printEPKc+0x14>
    141a:	df 91       	pop	r29
    141c:	cf 91       	pop	r28
    141e:	ff 90       	pop	r15
    1420:	ef 90       	pop	r14
    1422:	08 95       	ret

00001424 <print>:
    1424:	0e 94 fe 09 	call	0x13fc	; 0x13fc <_ZN12OrangutanLCD5printEPKc>
    1428:	08 95       	ret

0000142a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    142a:	cf 93       	push	r28
    142c:	df 93       	push	r29
    142e:	ec 01       	movw	r28, r24
    1430:	03 c0       	rjmp	.+6      	; 0x1438 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    1432:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    1436:	21 96       	adiw	r28, 0x01	; 1
    1438:	fe 01       	movw	r30, r28
    143a:	84 91       	lpm	r24, Z
    143c:	88 23       	and	r24, r24
    143e:	c9 f7       	brne	.-14     	; 0x1432 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    1440:	df 91       	pop	r29
    1442:	cf 91       	pop	r28
    1444:	08 95       	ret

00001446 <print_from_program_space>:
    1446:	0e 94 15 0a 	call	0x142a	; 0x142a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    144a:	08 95       	ret

0000144c <_ZN12OrangutanLCD5printEm>:
    144c:	aa e0       	ldi	r26, 0x0A	; 10
    144e:	b0 e0       	ldi	r27, 0x00	; 0
    1450:	ec e2       	ldi	r30, 0x2C	; 44
    1452:	fa e0       	ldi	r31, 0x0A	; 10
    1454:	0c 94 89 12 	jmp	0x2512	; 0x2512 <__prologue_saves__+0x10>
    1458:	9b 01       	movw	r18, r22
    145a:	ac 01       	movw	r20, r24
    145c:	1a e0       	ldi	r17, 0x0A	; 10
    145e:	ea e0       	ldi	r30, 0x0A	; 10
    1460:	ce 2e       	mov	r12, r30
    1462:	d1 2c       	mov	r13, r1
    1464:	e1 2c       	mov	r14, r1
    1466:	f1 2c       	mov	r15, r1
    1468:	5e 01       	movw	r10, r28
    146a:	08 94       	sec
    146c:	a1 1c       	adc	r10, r1
    146e:	b1 1c       	adc	r11, r1
    1470:	02 2f       	mov	r16, r18
    1472:	ca 01       	movw	r24, r20
    1474:	b9 01       	movw	r22, r18
    1476:	a7 01       	movw	r20, r14
    1478:	96 01       	movw	r18, r12
    147a:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
    147e:	11 50       	subi	r17, 0x01	; 1
    1480:	f5 01       	movw	r30, r10
    1482:	e1 0f       	add	r30, r17
    1484:	f1 1d       	adc	r31, r1
    1486:	00 5d       	subi	r16, 0xD0	; 208
    1488:	92 2f       	mov	r25, r18
    148a:	99 0f       	add	r25, r25
    148c:	89 2f       	mov	r24, r25
    148e:	88 0f       	add	r24, r24
    1490:	88 0f       	add	r24, r24
    1492:	89 0f       	add	r24, r25
    1494:	08 1b       	sub	r16, r24
    1496:	00 83       	st	Z, r16
    1498:	21 15       	cp	r18, r1
    149a:	31 05       	cpc	r19, r1
    149c:	41 05       	cpc	r20, r1
    149e:	51 05       	cpc	r21, r1
    14a0:	39 f7       	brne	.-50     	; 0x1470 <_ZN12OrangutanLCD5printEm+0x24>
    14a2:	08 c0       	rjmp	.+16     	; 0x14b4 <_ZN12OrangutanLCD5printEm+0x68>
    14a4:	f6 01       	movw	r30, r12
    14a6:	e1 0f       	add	r30, r17
    14a8:	f1 1d       	adc	r31, r1
    14aa:	80 81       	ld	r24, Z
    14ac:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    14b0:	1f 5f       	subi	r17, 0xFF	; 255
    14b2:	04 c0       	rjmp	.+8      	; 0x14bc <_ZN12OrangutanLCD5printEm+0x70>
    14b4:	6e 01       	movw	r12, r28
    14b6:	08 94       	sec
    14b8:	c1 1c       	adc	r12, r1
    14ba:	d1 1c       	adc	r13, r1
    14bc:	1a 30       	cpi	r17, 0x0A	; 10
    14be:	90 f3       	brcs	.-28     	; 0x14a4 <_ZN12OrangutanLCD5printEm+0x58>
    14c0:	2a 96       	adiw	r28, 0x0a	; 10
    14c2:	ea e0       	ldi	r30, 0x0A	; 10
    14c4:	0c 94 a5 12 	jmp	0x254a	; 0x254a <__epilogue_restores__+0x10>

000014c8 <_ZN12OrangutanLCD5printEl>:
    14c8:	ef 92       	push	r14
    14ca:	ff 92       	push	r15
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	7b 01       	movw	r14, r22
    14d2:	8c 01       	movw	r16, r24
    14d4:	97 ff       	sbrs	r25, 7
    14d6:	0b c0       	rjmp	.+22     	; 0x14ee <_ZN12OrangutanLCD5printEl+0x26>
    14d8:	10 95       	com	r17
    14da:	00 95       	com	r16
    14dc:	f0 94       	com	r15
    14de:	e0 94       	com	r14
    14e0:	e1 1c       	adc	r14, r1
    14e2:	f1 1c       	adc	r15, r1
    14e4:	01 1d       	adc	r16, r1
    14e6:	11 1d       	adc	r17, r1
    14e8:	8d e2       	ldi	r24, 0x2D	; 45
    14ea:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD9send_dataEh>
    14ee:	c8 01       	movw	r24, r16
    14f0:	b7 01       	movw	r22, r14
    14f2:	0e 94 26 0a 	call	0x144c	; 0x144c <_ZN12OrangutanLCD5printEm>
    14f6:	1f 91       	pop	r17
    14f8:	0f 91       	pop	r16
    14fa:	ff 90       	pop	r15
    14fc:	ef 90       	pop	r14
    14fe:	08 95       	ret

00001500 <print_long>:
    1500:	0e 94 64 0a 	call	0x14c8	; 0x14c8 <_ZN12OrangutanLCD5printEl>
    1504:	08 95       	ret

00001506 <_ZN12OrangutanLCD6gotoXYEhh>:
    1506:	a5 e0       	ldi	r26, 0x05	; 5
    1508:	b0 e0       	ldi	r27, 0x00	; 0
    150a:	e9 e8       	ldi	r30, 0x89	; 137
    150c:	fa e0       	ldi	r31, 0x0A	; 10
    150e:	0c 94 90 12 	jmp	0x2520	; 0x2520 <__prologue_saves__+0x1e>
    1512:	18 2f       	mov	r17, r24
    1514:	80 e8       	ldi	r24, 0x80	; 128
    1516:	89 83       	std	Y+1, r24	; 0x01
    1518:	80 ec       	ldi	r24, 0xC0	; 192
    151a:	8a 83       	std	Y+2, r24	; 0x02
    151c:	84 e9       	ldi	r24, 0x94	; 148
    151e:	8b 83       	std	Y+3, r24	; 0x03
    1520:	84 ed       	ldi	r24, 0xD4	; 212
    1522:	8c 83       	std	Y+4, r24	; 0x04
    1524:	fe 01       	movw	r30, r28
    1526:	e6 0f       	add	r30, r22
    1528:	f1 1d       	adc	r31, r1
    152a:	81 81       	ldd	r24, Z+1	; 0x01
    152c:	81 0f       	add	r24, r17
    152e:	6d 83       	std	Y+5, r22	; 0x05
    1530:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD8send_cmdEh>
    1534:	10 93 56 01 	sts	0x0156, r17
    1538:	6d 81       	ldd	r22, Y+5	; 0x05
    153a:	60 93 55 01 	sts	0x0155, r22
    153e:	25 96       	adiw	r28, 0x05	; 5
    1540:	e3 e0       	ldi	r30, 0x03	; 3
    1542:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__epilogue_restores__+0x1e>

00001546 <lcd_goto_xy>:
    1546:	0e 94 83 0a 	call	0x1506	; 0x1506 <_ZN12OrangutanLCD6gotoXYEhh>
    154a:	08 95       	ret

0000154c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    154c:	fc 01       	movw	r30, r24
    154e:	11 82       	std	Z+1, r1	; 0x01
    1550:	10 82       	st	Z, r1
    1552:	13 82       	std	Z+3, r1	; 0x03
    1554:	12 82       	std	Z+2, r1	; 0x02
    1556:	15 82       	std	Z+5, r1	; 0x05
    1558:	14 82       	std	Z+4, r1	; 0x04
    155a:	16 82       	std	Z+6, r1	; 0x06
    155c:	68 30       	cpi	r22, 0x08	; 8
    155e:	68 f4       	brcc	.+26     	; 0x157a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1560:	89 e2       	ldi	r24, 0x29	; 41
    1562:	90 e0       	ldi	r25, 0x00	; 0
    1564:	91 83       	std	Z+1, r25	; 0x01
    1566:	80 83       	st	Z, r24
    1568:	8b e2       	ldi	r24, 0x2B	; 43
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	93 83       	std	Z+3, r25	; 0x03
    156e:	82 83       	std	Z+2, r24	; 0x02
    1570:	8a e2       	ldi	r24, 0x2A	; 42
    1572:	90 e0       	ldi	r25, 0x00	; 0
    1574:	95 83       	std	Z+5, r25	; 0x05
    1576:	84 83       	std	Z+4, r24	; 0x04
    1578:	11 c0       	rjmp	.+34     	; 0x159c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    157a:	6e 30       	cpi	r22, 0x0E	; 14
    157c:	c0 f4       	brcc	.+48     	; 0x15ae <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    157e:	83 e2       	ldi	r24, 0x23	; 35
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	91 83       	std	Z+1, r25	; 0x01
    1584:	80 83       	st	Z, r24
    1586:	85 e2       	ldi	r24, 0x25	; 37
    1588:	90 e0       	ldi	r25, 0x00	; 0
    158a:	93 83       	std	Z+3, r25	; 0x03
    158c:	82 83       	std	Z+2, r24	; 0x02
    158e:	84 e2       	ldi	r24, 0x24	; 36
    1590:	90 e0       	ldi	r25, 0x00	; 0
    1592:	95 83       	std	Z+5, r25	; 0x05
    1594:	84 83       	std	Z+4, r24	; 0x04
    1596:	70 e0       	ldi	r23, 0x00	; 0
    1598:	68 50       	subi	r22, 0x08	; 8
    159a:	70 40       	sbci	r23, 0x00	; 0
    159c:	81 e0       	ldi	r24, 0x01	; 1
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    15a2:	88 0f       	add	r24, r24
    15a4:	99 1f       	adc	r25, r25
    15a6:	6a 95       	dec	r22
    15a8:	e2 f7       	brpl	.-8      	; 0x15a2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    15aa:	86 83       	std	Z+6, r24	; 0x06
    15ac:	08 95       	ret
    15ae:	65 31       	cpi	r22, 0x15	; 21
    15b0:	b8 f4       	brcc	.+46     	; 0x15e0 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    15b2:	86 e2       	ldi	r24, 0x26	; 38
    15b4:	90 e0       	ldi	r25, 0x00	; 0
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	80 83       	st	Z, r24
    15ba:	88 e2       	ldi	r24, 0x28	; 40
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	93 83       	std	Z+3, r25	; 0x03
    15c0:	82 83       	std	Z+2, r24	; 0x02
    15c2:	87 e2       	ldi	r24, 0x27	; 39
    15c4:	90 e0       	ldi	r25, 0x00	; 0
    15c6:	95 83       	std	Z+5, r25	; 0x05
    15c8:	84 83       	std	Z+4, r24	; 0x04
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	6e 50       	subi	r22, 0x0E	; 14
    15ce:	70 40       	sbci	r23, 0x00	; 0
    15d0:	81 e0       	ldi	r24, 0x01	; 1
    15d2:	90 e0       	ldi	r25, 0x00	; 0
    15d4:	02 c0       	rjmp	.+4      	; 0x15da <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    15d6:	88 0f       	add	r24, r24
    15d8:	99 1f       	adc	r25, r25
    15da:	6a 95       	dec	r22
    15dc:	e2 f7       	brpl	.-8      	; 0x15d6 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    15de:	86 83       	std	Z+6, r24	; 0x06
    15e0:	08 95       	ret

000015e2 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    15e2:	fc 01       	movw	r30, r24
    15e4:	a4 81       	ldd	r26, Z+4	; 0x04
    15e6:	b5 81       	ldd	r27, Z+5	; 0x05
    15e8:	86 81       	ldd	r24, Z+6	; 0x06
    15ea:	66 23       	and	r22, r22
    15ec:	21 f0       	breq	.+8      	; 0x15f6 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    15ee:	9c 91       	ld	r25, X
    15f0:	98 2b       	or	r25, r24
    15f2:	9c 93       	st	X, r25
    15f4:	08 95       	ret
    15f6:	9c 91       	ld	r25, X
    15f8:	80 95       	com	r24
    15fa:	89 23       	and	r24, r25
    15fc:	8c 93       	st	X, r24
    15fe:	08 95       	ret

00001600 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    1600:	fc 01       	movw	r30, r24
    1602:	6f 3f       	cpi	r22, 0xFF	; 255
    1604:	31 f4       	brne	.+12     	; 0x1612 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    1606:	a2 81       	ldd	r26, Z+2	; 0x02
    1608:	b3 81       	ldd	r27, Z+3	; 0x03
    160a:	8c 91       	ld	r24, X
    160c:	96 81       	ldd	r25, Z+6	; 0x06
    160e:	89 27       	eor	r24, r25
    1610:	0c c0       	rjmp	.+24     	; 0x162a <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    1612:	a2 81       	ldd	r26, Z+2	; 0x02
    1614:	b3 81       	ldd	r27, Z+3	; 0x03
    1616:	86 81       	ldd	r24, Z+6	; 0x06
    1618:	66 23       	and	r22, r22
    161a:	21 f0       	breq	.+8      	; 0x1624 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    161c:	9c 91       	ld	r25, X
    161e:	98 2b       	or	r25, r24
    1620:	9c 93       	st	X, r25
    1622:	08 95       	ret
    1624:	9c 91       	ld	r25, X
    1626:	80 95       	com	r24
    1628:	89 23       	and	r24, r25
    162a:	8c 93       	st	X, r24
    162c:	08 95       	ret

0000162e <_ZN16OrangutanDigital9setOutputEhh>:
    162e:	a7 e0       	ldi	r26, 0x07	; 7
    1630:	b0 e0       	ldi	r27, 0x00	; 0
    1632:	ed e1       	ldi	r30, 0x1D	; 29
    1634:	fb e0       	ldi	r31, 0x0B	; 11
    1636:	0c 94 8e 12 	jmp	0x251c	; 0x251c <__prologue_saves__+0x1a>
    163a:	28 2f       	mov	r18, r24
    163c:	f6 2e       	mov	r15, r22
    163e:	8e 01       	movw	r16, r28
    1640:	0f 5f       	subi	r16, 0xFF	; 255
    1642:	1f 4f       	sbci	r17, 0xFF	; 255
    1644:	c8 01       	movw	r24, r16
    1646:	62 2f       	mov	r22, r18
    1648:	0e 94 a6 0a 	call	0x154c	; 0x154c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    164c:	c8 01       	movw	r24, r16
    164e:	6f 2d       	mov	r22, r15
    1650:	0e 94 00 0b 	call	0x1600	; 0x1600 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    1654:	c8 01       	movw	r24, r16
    1656:	61 e0       	ldi	r22, 0x01	; 1
    1658:	0e 94 f1 0a 	call	0x15e2	; 0x15e2 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    165c:	27 96       	adiw	r28, 0x07	; 7
    165e:	e5 e0       	ldi	r30, 0x05	; 5
    1660:	0c 94 aa 12 	jmp	0x2554	; 0x2554 <__epilogue_restores__+0x1a>

00001664 <_ZN15OrangutanMotors5init2Ev>:
    1664:	e0 eb       	ldi	r30, 0xB0	; 176
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	83 ef       	ldi	r24, 0xF3	; 243
    166a:	80 83       	st	Z, r24
    166c:	80 81       	ld	r24, Z
    166e:	84 bd       	out	0x24, r24	; 36
    1670:	e1 eb       	ldi	r30, 0xB1	; 177
    1672:	f0 e0       	ldi	r31, 0x00	; 0
    1674:	82 e0       	ldi	r24, 0x02	; 2
    1676:	80 83       	st	Z, r24
    1678:	80 81       	ld	r24, Z
    167a:	85 bd       	out	0x25, r24	; 37
    167c:	e4 eb       	ldi	r30, 0xB4	; 180
    167e:	f0 e0       	ldi	r31, 0x00	; 0
    1680:	10 82       	st	Z, r1
    1682:	80 81       	ld	r24, Z
    1684:	e3 eb       	ldi	r30, 0xB3	; 179
    1686:	f0 e0       	ldi	r31, 0x00	; 0
    1688:	80 83       	st	Z, r24
    168a:	80 81       	ld	r24, Z
    168c:	88 bd       	out	0x28, r24	; 40
    168e:	88 b5       	in	r24, 0x28	; 40
    1690:	87 bd       	out	0x27, r24	; 39
    1692:	86 e0       	ldi	r24, 0x06	; 6
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	0e 94 17 0b 	call	0x162e	; 0x162e <_ZN16OrangutanDigital9setOutputEhh>
    169a:	85 e0       	ldi	r24, 0x05	; 5
    169c:	60 e0       	ldi	r22, 0x00	; 0
    169e:	0e 94 17 0b 	call	0x162e	; 0x162e <_ZN16OrangutanDigital9setOutputEhh>
    16a2:	8b e0       	ldi	r24, 0x0B	; 11
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	0e 94 17 0b 	call	0x162e	; 0x162e <_ZN16OrangutanDigital9setOutputEhh>
    16aa:	83 e0       	ldi	r24, 0x03	; 3
    16ac:	60 e0       	ldi	r22, 0x00	; 0
    16ae:	0e 94 17 0b 	call	0x162e	; 0x162e <_ZN16OrangutanDigital9setOutputEhh>
    16b2:	08 95       	ret

000016b4 <_ZN15OrangutanMotors4initEv>:
    16b4:	80 91 5c 01 	lds	r24, 0x015C
    16b8:	88 23       	and	r24, r24
    16ba:	29 f4       	brne	.+10     	; 0x16c6 <_ZN15OrangutanMotors4initEv+0x12>
    16bc:	81 e0       	ldi	r24, 0x01	; 1
    16be:	80 93 5c 01 	sts	0x015C, r24
    16c2:	0e 94 32 0b 	call	0x1664	; 0x1664 <_ZN15OrangutanMotors5init2Ev>
    16c6:	08 95       	ret

000016c8 <_ZN15OrangutanMotors10setM1SpeedEi>:
    16c8:	cf 93       	push	r28
    16ca:	df 93       	push	r29
    16cc:	ec 01       	movw	r28, r24
    16ce:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <_ZN15OrangutanMotors4initEv>
    16d2:	d7 ff       	sbrs	r29, 7
    16d4:	05 c0       	rjmp	.+10     	; 0x16e0 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    16d6:	d0 95       	com	r29
    16d8:	c1 95       	neg	r28
    16da:	df 4f       	sbci	r29, 0xFF	; 255
    16dc:	81 e0       	ldi	r24, 0x01	; 1
    16de:	01 c0       	rjmp	.+2      	; 0x16e2 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	cf 3f       	cpi	r28, 0xFF	; 255
    16e4:	d1 05       	cpc	r29, r1
    16e6:	19 f0       	breq	.+6      	; 0x16ee <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16e8:	14 f0       	brlt	.+4      	; 0x16ee <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16ea:	cf ef       	ldi	r28, 0xFF	; 255
    16ec:	d0 e0       	ldi	r29, 0x00	; 0
    16ee:	88 23       	and	r24, r24
    16f0:	19 f0       	breq	.+6      	; 0x16f8 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    16f2:	18 bc       	out	0x28, r1	; 40
    16f4:	c7 bd       	out	0x27, r28	; 39
    16f6:	02 c0       	rjmp	.+4      	; 0x16fc <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    16f8:	c8 bd       	out	0x28, r28	; 40
    16fa:	17 bc       	out	0x27, r1	; 39
    16fc:	df 91       	pop	r29
    16fe:	cf 91       	pop	r28
    1700:	08 95       	ret

00001702 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1702:	cf 93       	push	r28
    1704:	df 93       	push	r29
    1706:	ec 01       	movw	r28, r24
    1708:	0e 94 5a 0b 	call	0x16b4	; 0x16b4 <_ZN15OrangutanMotors4initEv>
    170c:	d7 ff       	sbrs	r29, 7
    170e:	05 c0       	rjmp	.+10     	; 0x171a <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1710:	d0 95       	com	r29
    1712:	c1 95       	neg	r28
    1714:	df 4f       	sbci	r29, 0xFF	; 255
    1716:	81 e0       	ldi	r24, 0x01	; 1
    1718:	01 c0       	rjmp	.+2      	; 0x171c <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    171a:	80 e0       	ldi	r24, 0x00	; 0
    171c:	cf 3f       	cpi	r28, 0xFF	; 255
    171e:	d1 05       	cpc	r29, r1
    1720:	19 f0       	breq	.+6      	; 0x1728 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1722:	14 f0       	brlt	.+4      	; 0x1728 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1724:	cf ef       	ldi	r28, 0xFF	; 255
    1726:	d0 e0       	ldi	r29, 0x00	; 0
    1728:	88 23       	and	r24, r24
    172a:	29 f0       	breq	.+10     	; 0x1736 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    172c:	10 92 b4 00 	sts	0x00B4, r1
    1730:	c0 93 b3 00 	sts	0x00B3, r28
    1734:	04 c0       	rjmp	.+8      	; 0x173e <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1736:	c0 93 b4 00 	sts	0x00B4, r28
    173a:	10 92 b3 00 	sts	0x00B3, r1
    173e:	df 91       	pop	r29
    1740:	cf 91       	pop	r28
    1742:	08 95       	ret

00001744 <_ZN15OrangutanMotors9setSpeedsEii>:
    1744:	cf 93       	push	r28
    1746:	df 93       	push	r29
    1748:	eb 01       	movw	r28, r22
    174a:	0e 94 64 0b 	call	0x16c8	; 0x16c8 <_ZN15OrangutanMotors10setM1SpeedEi>
    174e:	ce 01       	movw	r24, r28
    1750:	0e 94 81 0b 	call	0x1702	; 0x1702 <_ZN15OrangutanMotors10setM2SpeedEi>
    1754:	df 91       	pop	r29
    1756:	cf 91       	pop	r28
    1758:	08 95       	ret

0000175a <set_motors>:
    175a:	0e 94 a2 0b 	call	0x1744	; 0x1744 <_ZN15OrangutanMotors9setSpeedsEii>
    175e:	08 95       	ret

00001760 <_ZN20OrangutanPushbuttons5init2Ev>:
    1760:	84 b1       	in	r24, 0x04	; 4
    1762:	8d 7c       	andi	r24, 0xCD	; 205
    1764:	84 b9       	out	0x04, r24	; 4
    1766:	85 b1       	in	r24, 0x05	; 5
    1768:	82 63       	ori	r24, 0x32	; 50
    176a:	85 b9       	out	0x05, r24	; 5
    176c:	85 e0       	ldi	r24, 0x05	; 5
    176e:	90 e0       	ldi	r25, 0x00	; 0
    1770:	6f 93       	push	r22
    1772:	64 e0       	ldi	r22, 0x04	; 4
    1774:	6a 95       	dec	r22
    1776:	f1 f7       	brne	.-4      	; 0x1774 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1778:	6f 91       	pop	r22
    177a:	01 97       	sbiw	r24, 0x01	; 1
    177c:	c9 f7       	brne	.-14     	; 0x1770 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    177e:	08 95       	ret

00001780 <_ZN20OrangutanPushbuttons4initEv>:
    1780:	80 91 5d 01 	lds	r24, 0x015D
    1784:	88 23       	and	r24, r24
    1786:	29 f4       	brne	.+10     	; 0x1792 <_ZN20OrangutanPushbuttons4initEv+0x12>
    1788:	81 e0       	ldi	r24, 0x01	; 1
    178a:	80 93 5d 01 	sts	0x015D, r24
    178e:	0e 94 b0 0b 	call	0x1760	; 0x1760 <_ZN20OrangutanPushbuttons5init2Ev>
    1792:	08 95       	ret

00001794 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1794:	1f 93       	push	r17
    1796:	18 2f       	mov	r17, r24
    1798:	0e 94 c0 0b 	call	0x1780	; 0x1780 <_ZN20OrangutanPushbuttons4initEv>
    179c:	83 b1       	in	r24, 0x03	; 3
    179e:	81 23       	and	r24, r17
    17a0:	e9 f3       	breq	.-6      	; 0x179c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    17a2:	8a e0       	ldi	r24, 0x0A	; 10
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	0e 94 43 0c 	call	0x1886	; 0x1886 <delay_ms>
    17aa:	83 b1       	in	r24, 0x03	; 3
    17ac:	81 23       	and	r24, r17
    17ae:	b1 f3       	breq	.-20     	; 0x179c <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    17b0:	83 b1       	in	r24, 0x03	; 3
    17b2:	81 23       	and	r24, r17
    17b4:	1f 91       	pop	r17
    17b6:	08 95       	ret

000017b8 <wait_for_button_release>:
    17b8:	0e 94 ca 0b 	call	0x1794	; 0x1794 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    17bc:	08 95       	ret

000017be <_ZN20OrangutanPushbuttons9isPressedEh>:
    17be:	a1 e0       	ldi	r26, 0x01	; 1
    17c0:	b0 e0       	ldi	r27, 0x00	; 0
    17c2:	e5 ee       	ldi	r30, 0xE5	; 229
    17c4:	fb e0       	ldi	r31, 0x0B	; 11
    17c6:	0c 94 91 12 	jmp	0x2522	; 0x2522 <__prologue_saves__+0x20>
    17ca:	89 83       	std	Y+1, r24	; 0x01
    17cc:	0e 94 c0 0b 	call	0x1780	; 0x1780 <_ZN20OrangutanPushbuttons4initEv>
    17d0:	93 b1       	in	r25, 0x03	; 3
    17d2:	90 95       	com	r25
    17d4:	89 81       	ldd	r24, Y+1	; 0x01
    17d6:	89 23       	and	r24, r25
    17d8:	21 96       	adiw	r28, 0x01	; 1
    17da:	e2 e0       	ldi	r30, 0x02	; 2
    17dc:	0c 94 ad 12 	jmp	0x255a	; 0x255a <__epilogue_restores__+0x20>

000017e0 <button_is_pressed>:
    17e0:	0e 94 df 0b 	call	0x17be	; 0x17be <_ZN20OrangutanPushbuttons9isPressedEh>
    17e4:	08 95       	ret

000017e6 <_ZN13OrangutanTime17delayMicrosecondsEj>:
    17e6:	6f 93       	push	r22
    17e8:	64 e0       	ldi	r22, 0x04	; 4
    17ea:	6a 95       	dec	r22
    17ec:	f1 f7       	brne	.-4      	; 0x17ea <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    17ee:	6f 91       	pop	r22
    17f0:	01 97       	sbiw	r24, 0x01	; 1
    17f2:	c9 f7       	brne	.-14     	; 0x17e6 <_ZN13OrangutanTime17delayMicrosecondsEj>
    17f4:	08 95       	ret

000017f6 <__vector_9>:
    17f6:	2f 92       	push	r2
    17f8:	8f 93       	push	r24
    17fa:	9f 93       	push	r25
    17fc:	2f b6       	in	r2, 0x3f	; 63
    17fe:	80 91 6b 01 	lds	r24, 0x016B
    1802:	90 91 6c 01 	lds	r25, 0x016C
    1806:	01 96       	adiw	r24, 0x01	; 1
    1808:	80 93 6b 01 	sts	0x016B, r24
    180c:	90 93 6c 01 	sts	0x016C, r25
    1810:	90 e0       	ldi	r25, 0x00	; 0
    1812:	80 91 6d 01 	lds	r24, 0x016D
    1816:	89 1f       	adc	r24, r25
    1818:	80 93 6d 01 	sts	0x016D, r24
    181c:	90 91 73 01 	lds	r25, 0x0173
    1820:	9c 5f       	subi	r25, 0xFC	; 252
    1822:	90 93 73 01 	sts	0x0173, r25
    1826:	80 91 72 01 	lds	r24, 0x0172
    182a:	80 51       	subi	r24, 0x10	; 16
    182c:	97 42       	sbci	r25, 0x27	; 39
    182e:	c0 f0       	brcs	.+48     	; 0x1860 <end>
    1830:	90 93 73 01 	sts	0x0173, r25
    1834:	80 93 72 01 	sts	0x0172, r24
    1838:	80 91 6e 01 	lds	r24, 0x016E
    183c:	90 91 6f 01 	lds	r25, 0x016F
    1840:	01 96       	adiw	r24, 0x01	; 1
    1842:	80 93 6e 01 	sts	0x016E, r24
    1846:	90 93 6f 01 	sts	0x016F, r25
    184a:	90 e0       	ldi	r25, 0x00	; 0
    184c:	80 91 70 01 	lds	r24, 0x0170
    1850:	89 1f       	adc	r24, r25
    1852:	80 93 70 01 	sts	0x0170, r24
    1856:	80 91 71 01 	lds	r24, 0x0171
    185a:	89 1f       	adc	r24, r25
    185c:	80 93 71 01 	sts	0x0171, r24

00001860 <end>:
    1860:	2f be       	out	0x3f, r2	; 63
    1862:	9f 91       	pop	r25
    1864:	8f 91       	pop	r24
    1866:	2f 90       	pop	r2
    1868:	18 95       	reti

0000186a <_ZN13OrangutanTime17delayMillisecondsEj>:
    186a:	cf 93       	push	r28
    186c:	df 93       	push	r29
    186e:	ec 01       	movw	r28, r24
    1870:	05 c0       	rjmp	.+10     	; 0x187c <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    1872:	88 ee       	ldi	r24, 0xE8	; 232
    1874:	93 e0       	ldi	r25, 0x03	; 3
    1876:	0e 94 f3 0b 	call	0x17e6	; 0x17e6 <_ZN13OrangutanTime17delayMicrosecondsEj>
    187a:	21 97       	sbiw	r28, 0x01	; 1
    187c:	20 97       	sbiw	r28, 0x00	; 0
    187e:	c9 f7       	brne	.-14     	; 0x1872 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1880:	df 91       	pop	r29
    1882:	cf 91       	pop	r28
    1884:	08 95       	ret

00001886 <delay_ms>:
    1886:	0e 94 35 0c 	call	0x186a	; 0x186a <_ZN13OrangutanTime17delayMillisecondsEj>
    188a:	08 95       	ret

0000188c <_ZN13OrangutanTime5init2Ev>:
    188c:	e0 e7       	ldi	r30, 0x70	; 112
    188e:	f0 e0       	ldi	r31, 0x00	; 0
    1890:	80 81       	ld	r24, Z
    1892:	8e 7f       	andi	r24, 0xFE	; 254
    1894:	80 83       	st	Z, r24
    1896:	a0 eb       	ldi	r26, 0xB0	; 176
    1898:	b0 e0       	ldi	r27, 0x00	; 0
    189a:	8c 91       	ld	r24, X
    189c:	83 60       	ori	r24, 0x03	; 3
    189e:	8c 93       	st	X, r24
    18a0:	a1 eb       	ldi	r26, 0xB1	; 177
    18a2:	b0 e0       	ldi	r27, 0x00	; 0
    18a4:	8c 91       	ld	r24, X
    18a6:	80 7f       	andi	r24, 0xF0	; 240
    18a8:	8c 93       	st	X, r24
    18aa:	8c 91       	ld	r24, X
    18ac:	82 60       	ori	r24, 0x02	; 2
    18ae:	8c 93       	st	X, r24
    18b0:	b8 9a       	sbi	0x17, 0	; 23
    18b2:	80 81       	ld	r24, Z
    18b4:	81 60       	ori	r24, 0x01	; 1
    18b6:	80 83       	st	Z, r24
    18b8:	78 94       	sei
    18ba:	08 95       	ret

000018bc <_ZN13OrangutanTime4initEv>:
    18bc:	80 91 74 01 	lds	r24, 0x0174
    18c0:	88 23       	and	r24, r24
    18c2:	29 f4       	brne	.+10     	; 0x18ce <_ZN13OrangutanTime4initEv+0x12>
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	80 93 74 01 	sts	0x0174, r24
    18ca:	0e 94 46 0c 	call	0x188c	; 0x188c <_ZN13OrangutanTime5init2Ev>
    18ce:	08 95       	ret

000018d0 <_ZN13OrangutanTime5resetEv>:
    18d0:	0e 94 5e 0c 	call	0x18bc	; 0x18bc <_ZN13OrangutanTime4initEv>
    18d4:	e0 e7       	ldi	r30, 0x70	; 112
    18d6:	f0 e0       	ldi	r31, 0x00	; 0
    18d8:	80 81       	ld	r24, Z
    18da:	8e 7f       	andi	r24, 0xFE	; 254
    18dc:	80 83       	st	Z, r24
    18de:	10 92 6e 01 	sts	0x016E, r1
    18e2:	10 92 6f 01 	sts	0x016F, r1
    18e6:	10 92 70 01 	sts	0x0170, r1
    18ea:	10 92 71 01 	sts	0x0171, r1
    18ee:	10 92 73 01 	sts	0x0173, r1
    18f2:	10 92 72 01 	sts	0x0172, r1
    18f6:	80 81       	ld	r24, Z
    18f8:	81 60       	ori	r24, 0x01	; 1
    18fa:	80 83       	st	Z, r24
    18fc:	08 95       	ret

000018fe <calibrate_line_sensors>:
    18fe:	68 2f       	mov	r22, r24
    1900:	85 e7       	ldi	r24, 0x75	; 117
    1902:	91 e0       	ldi	r25, 0x01	; 1
    1904:	0e 94 af 11 	call	0x235e	; 0x235e <_ZN16PololuQTRSensors9calibrateEh>
    1908:	08 95       	ret

0000190a <read_line>:
    190a:	9c 01       	movw	r18, r24
    190c:	46 2f       	mov	r20, r22
    190e:	85 e7       	ldi	r24, 0x75	; 117
    1910:	91 e0       	ldi	r25, 0x01	; 1
    1912:	b9 01       	movw	r22, r18
    1914:	20 e0       	ldi	r18, 0x00	; 0
    1916:	0e 94 0d 10 	call	0x201a	; 0x201a <_ZN16PololuQTRSensors8readLineEPjhh>
    191a:	08 95       	ret

0000191c <_ZN9Pololu3pi4initEjh>:
    191c:	0f 93       	push	r16
    191e:	df 93       	push	r29
    1920:	cf 93       	push	r28
    1922:	00 d0       	rcall	.+0      	; 0x1924 <_ZN9Pololu3pi4initEjh+0x8>
    1924:	00 d0       	rcall	.+0      	; 0x1926 <_ZN9Pololu3pi4initEjh+0xa>
    1926:	0f 92       	push	r0
    1928:	cd b7       	in	r28, 0x3d	; 61
    192a:	de b7       	in	r29, 0x3e	; 62
    192c:	9c 01       	movw	r18, r24
    192e:	96 2f       	mov	r25, r22
    1930:	de 01       	movw	r26, r28
    1932:	11 96       	adiw	r26, 0x01	; 1
    1934:	e6 e2       	ldi	r30, 0x26	; 38
    1936:	f1 e0       	ldi	r31, 0x01	; 1
    1938:	85 e0       	ldi	r24, 0x05	; 5
    193a:	01 90       	ld	r0, Z+
    193c:	0d 92       	st	X+, r0
    193e:	81 50       	subi	r24, 0x01	; 1
    1940:	e1 f7       	brne	.-8      	; 0x193a <_ZN9Pololu3pi4initEjh+0x1e>
    1942:	be 01       	movw	r22, r28
    1944:	6f 5f       	subi	r22, 0xFF	; 255
    1946:	7f 4f       	sbci	r23, 0xFF	; 255
    1948:	99 23       	and	r25, r25
    194a:	29 f0       	breq	.+10     	; 0x1956 <_ZN9Pololu3pi4initEjh+0x3a>
    194c:	85 e7       	ldi	r24, 0x75	; 117
    194e:	91 e0       	ldi	r25, 0x01	; 1
    1950:	45 e0       	ldi	r20, 0x05	; 5
    1952:	0f ef       	ldi	r16, 0xFF	; 255
    1954:	04 c0       	rjmp	.+8      	; 0x195e <_ZN9Pololu3pi4initEjh+0x42>
    1956:	85 e7       	ldi	r24, 0x75	; 117
    1958:	91 e0       	ldi	r25, 0x01	; 1
    195a:	45 e0       	ldi	r20, 0x05	; 5
    195c:	03 e1       	ldi	r16, 0x13	; 19
    195e:	0e 94 28 0d 	call	0x1a50	; 0x1a50 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1962:	85 e7       	ldi	r24, 0x75	; 117
    1964:	91 e0       	ldi	r25, 0x01	; 1
    1966:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <_ZN16PololuQTRSensors11emittersOffEv>
    196a:	0e 94 68 0c 	call	0x18d0	; 0x18d0 <_ZN13OrangutanTime5resetEv>
    196e:	0f 90       	pop	r0
    1970:	0f 90       	pop	r0
    1972:	0f 90       	pop	r0
    1974:	0f 90       	pop	r0
    1976:	0f 90       	pop	r0
    1978:	cf 91       	pop	r28
    197a:	df 91       	pop	r29
    197c:	0f 91       	pop	r16
    197e:	08 95       	ret

00001980 <pololu_3pi_init>:
    1980:	60 e0       	ldi	r22, 0x00	; 0
    1982:	0e 94 8e 0c 	call	0x191c	; 0x191c <_ZN9Pololu3pi4initEjh>
    1986:	08 95       	ret

00001988 <_GLOBAL__I_pololu_3pi_init>:
    1988:	08 95       	ret

0000198a <_GLOBAL__D_pololu_3pi_init>:
    198a:	85 e7       	ldi	r24, 0x75	; 117
    198c:	91 e0       	ldi	r25, 0x01	; 1
    198e:	0e 94 d3 11 	call	0x23a6	; 0x23a6 <_ZN16PololuQTRSensorsD1Ev>
    1992:	08 95       	ret

00001994 <delayMicroseconds>:
    1994:	6f 93       	push	r22
    1996:	64 e0       	ldi	r22, 0x04	; 4
    1998:	6a 95       	dec	r22
    199a:	f1 f7       	brne	.-4      	; 0x1998 <delayMicroseconds+0x4>
    199c:	6f 91       	pop	r22
    199e:	01 97       	sbiw	r24, 0x01	; 1
    19a0:	c9 f7       	brne	.-14     	; 0x1994 <delayMicroseconds>
    19a2:	08 95       	ret

000019a4 <_ZN16PololuQTRSensors4initEhhh>:
    19a4:	a7 e0       	ldi	r26, 0x07	; 7
    19a6:	b0 e0       	ldi	r27, 0x00	; 0
    19a8:	e8 ed       	ldi	r30, 0xD8	; 216
    19aa:	fc e0       	ldi	r31, 0x0C	; 12
    19ac:	0c 94 8f 12 	jmp	0x251e	; 0x251e <__prologue_saves__+0x1c>
    19b0:	8c 01       	movw	r16, r24
    19b2:	fc 01       	movw	r30, r24
    19b4:	11 82       	std	Z+1, r1	; 0x01
    19b6:	10 82       	st	Z, r1
    19b8:	13 82       	std	Z+3, r1	; 0x03
    19ba:	12 82       	std	Z+2, r1	; 0x02
    19bc:	15 82       	std	Z+5, r1	; 0x05
    19be:	14 82       	std	Z+4, r1	; 0x04
    19c0:	17 82       	std	Z+7, r1	; 0x07
    19c2:	16 82       	std	Z+6, r1	; 0x06
    19c4:	61 31       	cpi	r22, 0x11	; 17
    19c6:	18 f0       	brcs	.+6      	; 0x19ce <_ZN16PololuQTRSensors4initEhhh+0x2a>
    19c8:	80 e1       	ldi	r24, 0x10	; 16
    19ca:	80 87       	std	Z+8, r24	; 0x08
    19cc:	02 c0       	rjmp	.+4      	; 0x19d2 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    19ce:	fc 01       	movw	r30, r24
    19d0:	60 87       	std	Z+8, r22	; 0x08
    19d2:	f8 01       	movw	r30, r16
    19d4:	20 8b       	std	Z+16, r18	; 0x10
    19d6:	ce 01       	movw	r24, r28
    19d8:	01 96       	adiw	r24, 0x01	; 1
    19da:	64 2f       	mov	r22, r20
    19dc:	0e 94 a6 0a 	call	0x154c	; 0x154c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    19e0:	8f 81       	ldd	r24, Y+7	; 0x07
    19e2:	f8 01       	movw	r30, r16
    19e4:	81 87       	std	Z+9, r24	; 0x09
    19e6:	8b 81       	ldd	r24, Y+3	; 0x03
    19e8:	9c 81       	ldd	r25, Y+4	; 0x04
    19ea:	93 87       	std	Z+11, r25	; 0x0b
    19ec:	82 87       	std	Z+10, r24	; 0x0a
    19ee:	8d 81       	ldd	r24, Y+5	; 0x05
    19f0:	9e 81       	ldd	r25, Y+6	; 0x06
    19f2:	95 87       	std	Z+13, r25	; 0x0d
    19f4:	84 87       	std	Z+12, r24	; 0x0c
    19f6:	27 96       	adiw	r28, 0x07	; 7
    19f8:	e4 e0       	ldi	r30, 0x04	; 4
    19fa:	0c 94 ab 12 	jmp	0x2556	; 0x2556 <__epilogue_restores__+0x1c>

000019fe <_ZN16PololuQTRSensors11emittersOffEv>:
    19fe:	fc 01       	movw	r30, r24
    1a00:	a4 85       	ldd	r26, Z+12	; 0x0c
    1a02:	b5 85       	ldd	r27, Z+13	; 0x0d
    1a04:	10 97       	sbiw	r26, 0x00	; 0
    1a06:	79 f0       	breq	.+30     	; 0x1a26 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1a08:	8c 91       	ld	r24, X
    1a0a:	91 85       	ldd	r25, Z+9	; 0x09
    1a0c:	89 2b       	or	r24, r25
    1a0e:	8c 93       	st	X, r24
    1a10:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a12:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a14:	9c 91       	ld	r25, X
    1a16:	81 85       	ldd	r24, Z+9	; 0x09
    1a18:	80 95       	com	r24
    1a1a:	89 23       	and	r24, r25
    1a1c:	8c 93       	st	X, r24
    1a1e:	88 ec       	ldi	r24, 0xC8	; 200
    1a20:	90 e0       	ldi	r25, 0x00	; 0
    1a22:	0e 94 ca 0c 	call	0x1994	; 0x1994 <delayMicroseconds>
    1a26:	08 95       	ret

00001a28 <_ZN16PololuQTRSensors10emittersOnEv>:
    1a28:	fc 01       	movw	r30, r24
    1a2a:	a4 85       	ldd	r26, Z+12	; 0x0c
    1a2c:	b5 85       	ldd	r27, Z+13	; 0x0d
    1a2e:	10 97       	sbiw	r26, 0x00	; 0
    1a30:	71 f0       	breq	.+28     	; 0x1a4e <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1a32:	8c 91       	ld	r24, X
    1a34:	91 85       	ldd	r25, Z+9	; 0x09
    1a36:	89 2b       	or	r24, r25
    1a38:	8c 93       	st	X, r24
    1a3a:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a3c:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a3e:	8c 91       	ld	r24, X
    1a40:	91 85       	ldd	r25, Z+9	; 0x09
    1a42:	89 2b       	or	r24, r25
    1a44:	8c 93       	st	X, r24
    1a46:	88 ec       	ldi	r24, 0xC8	; 200
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	0e 94 ca 0c 	call	0x1994	; 0x1994 <delayMicroseconds>
    1a4e:	08 95       	ret

00001a50 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1a50:	a7 e0       	ldi	r26, 0x07	; 7
    1a52:	b0 e0       	ldi	r27, 0x00	; 0
    1a54:	ee e2       	ldi	r30, 0x2E	; 46
    1a56:	fd e0       	ldi	r31, 0x0D	; 13
    1a58:	0c 94 81 12 	jmp	0x2502	; 0x2502 <__prologue_saves__>
    1a5c:	7c 01       	movw	r14, r24
    1a5e:	1b 01       	movw	r2, r22
    1a60:	64 2f       	mov	r22, r20
    1a62:	39 01       	movw	r6, r18
    1a64:	40 2f       	mov	r20, r16
    1a66:	20 e0       	ldi	r18, 0x00	; 0
    1a68:	0e 94 d2 0c 	call	0x19a4	; 0x19a4 <_ZN16PololuQTRSensors4initEhhh>
    1a6c:	97 01       	movw	r18, r14
    1a6e:	2f 5b       	subi	r18, 0xBF	; 191
    1a70:	3f 4f       	sbci	r19, 0xFF	; 255
    1a72:	f9 01       	movw	r30, r18
    1a74:	10 82       	st	Z, r1
    1a76:	d7 01       	movw	r26, r14
    1a78:	ae 5b       	subi	r26, 0xBE	; 190
    1a7a:	bf 4f       	sbci	r27, 0xFF	; 255
    1a7c:	1c 92       	st	X, r1
    1a7e:	c7 01       	movw	r24, r14
    1a80:	8d 5b       	subi	r24, 0xBD	; 189
    1a82:	9f 4f       	sbci	r25, 0xFF	; 255
    1a84:	fc 01       	movw	r30, r24
    1a86:	10 82       	st	Z, r1
    1a88:	f7 01       	movw	r30, r14
    1a8a:	77 86       	std	Z+15, r7	; 0x0f
    1a8c:	66 86       	std	Z+14, r6	; 0x0e
    1a8e:	66 24       	eor	r6, r6
    1a90:	2e 01       	movw	r4, r28
    1a92:	08 94       	sec
    1a94:	41 1c       	adc	r4, r1
    1a96:	51 1c       	adc	r5, r1
    1a98:	6c 01       	movw	r12, r24
    1a9a:	5d 01       	movw	r10, r26
    1a9c:	49 01       	movw	r8, r18
    1a9e:	29 c0       	rjmp	.+82     	; 0x1af2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1aa0:	06 2d       	mov	r16, r6
    1aa2:	10 e0       	ldi	r17, 0x00	; 0
    1aa4:	f1 01       	movw	r30, r2
    1aa6:	e0 0f       	add	r30, r16
    1aa8:	f1 1f       	adc	r31, r17
    1aaa:	c2 01       	movw	r24, r4
    1aac:	60 81       	ld	r22, Z
    1aae:	0e 94 a6 0a 	call	0x154c	; 0x154c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1ab2:	2f 81       	ldd	r18, Y+7	; 0x07
    1ab4:	f7 01       	movw	r30, r14
    1ab6:	e0 0f       	add	r30, r16
    1ab8:	f1 1f       	adc	r31, r17
    1aba:	21 8b       	std	Z+17, r18	; 0x11
    1abc:	89 81       	ldd	r24, Y+1	; 0x01
    1abe:	9a 81       	ldd	r25, Y+2	; 0x02
    1ac0:	f8 01       	movw	r30, r16
    1ac2:	ee 0f       	add	r30, r30
    1ac4:	ff 1f       	adc	r31, r31
    1ac6:	ee 0d       	add	r30, r14
    1ac8:	ff 1d       	adc	r31, r15
    1aca:	92 a3       	std	Z+34, r25	; 0x22
    1acc:	81 a3       	std	Z+33, r24	; 0x21
    1ace:	83 32       	cpi	r24, 0x23	; 35
    1ad0:	91 05       	cpc	r25, r1
    1ad2:	11 f4       	brne	.+4      	; 0x1ad8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1ad4:	f4 01       	movw	r30, r8
    1ad6:	09 c0       	rjmp	.+18     	; 0x1aea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1ad8:	86 32       	cpi	r24, 0x26	; 38
    1ada:	91 05       	cpc	r25, r1
    1adc:	11 f4       	brne	.+4      	; 0x1ae2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1ade:	f5 01       	movw	r30, r10
    1ae0:	04 c0       	rjmp	.+8      	; 0x1aea <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1ae2:	89 32       	cpi	r24, 0x29	; 41
    1ae4:	91 05       	cpc	r25, r1
    1ae6:	21 f4       	brne	.+8      	; 0x1af0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    1ae8:	f6 01       	movw	r30, r12
    1aea:	80 81       	ld	r24, Z
    1aec:	82 2b       	or	r24, r18
    1aee:	80 83       	st	Z, r24
    1af0:	63 94       	inc	r6
    1af2:	f7 01       	movw	r30, r14
    1af4:	80 85       	ldd	r24, Z+8	; 0x08
    1af6:	68 16       	cp	r6, r24
    1af8:	98 f2       	brcs	.-90     	; 0x1aa0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1afa:	27 96       	adiw	r28, 0x07	; 7
    1afc:	e2 e1       	ldi	r30, 0x12	; 18
    1afe:	0c 94 9d 12 	jmp	0x253a	; 0x253a <__epilogue_restores__>

00001b02 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1b02:	a0 e0       	ldi	r26, 0x00	; 0
    1b04:	b0 e0       	ldi	r27, 0x00	; 0
    1b06:	e7 e8       	ldi	r30, 0x87	; 135
    1b08:	fd e0       	ldi	r31, 0x0D	; 13
    1b0a:	0c 94 86 12 	jmp	0x250c	; 0x250c <__prologue_saves__+0xa>
    1b0e:	ec 01       	movw	r28, r24
    1b10:	5b 01       	movw	r10, r22
    1b12:	fc 01       	movw	r30, r24
    1b14:	ef 5b       	subi	r30, 0xBF	; 191
    1b16:	ff 4f       	sbci	r31, 0xFF	; 255
    1b18:	90 80       	ld	r9, Z
    1b1a:	fc 01       	movw	r30, r24
    1b1c:	ee 5b       	subi	r30, 0xBE	; 190
    1b1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b20:	80 80       	ld	r8, Z
    1b22:	fc 01       	movw	r30, r24
    1b24:	ed 5b       	subi	r30, 0xBD	; 189
    1b26:	ff 4f       	sbci	r31, 0xFF	; 255
    1b28:	70 80       	ld	r7, Z
    1b2a:	80 e0       	ldi	r24, 0x00	; 0
    1b2c:	09 c0       	rjmp	.+18     	; 0x1b40 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1b2e:	e8 2f       	mov	r30, r24
    1b30:	f0 e0       	ldi	r31, 0x00	; 0
    1b32:	ee 0f       	add	r30, r30
    1b34:	ff 1f       	adc	r31, r31
    1b36:	ea 0d       	add	r30, r10
    1b38:	fb 1d       	adc	r31, r11
    1b3a:	11 82       	std	Z+1, r1	; 0x01
    1b3c:	10 82       	st	Z, r1
    1b3e:	8f 5f       	subi	r24, 0xFF	; 255
    1b40:	98 85       	ldd	r25, Y+8	; 0x08
    1b42:	89 17       	cp	r24, r25
    1b44:	a0 f3       	brcs	.-24     	; 0x1b2e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1b46:	84 b1       	in	r24, 0x04	; 4
    1b48:	21 e4       	ldi	r18, 0x41	; 65
    1b4a:	e2 2e       	mov	r14, r18
    1b4c:	f1 2c       	mov	r15, r1
    1b4e:	ec 0e       	add	r14, r28
    1b50:	fd 1e       	adc	r15, r29
    1b52:	d7 01       	movw	r26, r14
    1b54:	9c 91       	ld	r25, X
    1b56:	89 2b       	or	r24, r25
    1b58:	84 b9       	out	0x04, r24	; 4
    1b5a:	87 b1       	in	r24, 0x07	; 7
    1b5c:	8e 01       	movw	r16, r28
    1b5e:	0e 5b       	subi	r16, 0xBE	; 190
    1b60:	1f 4f       	sbci	r17, 0xFF	; 255
    1b62:	f8 01       	movw	r30, r16
    1b64:	90 81       	ld	r25, Z
    1b66:	89 2b       	or	r24, r25
    1b68:	87 b9       	out	0x07, r24	; 7
    1b6a:	8a b1       	in	r24, 0x0a	; 10
    1b6c:	93 e4       	ldi	r25, 0x43	; 67
    1b6e:	c9 2e       	mov	r12, r25
    1b70:	d1 2c       	mov	r13, r1
    1b72:	cc 0e       	add	r12, r28
    1b74:	dd 1e       	adc	r13, r29
    1b76:	d6 01       	movw	r26, r12
    1b78:	9c 91       	ld	r25, X
    1b7a:	89 2b       	or	r24, r25
    1b7c:	8a b9       	out	0x0a, r24	; 10
    1b7e:	85 b1       	in	r24, 0x05	; 5
    1b80:	f7 01       	movw	r30, r14
    1b82:	90 81       	ld	r25, Z
    1b84:	89 2b       	or	r24, r25
    1b86:	85 b9       	out	0x05, r24	; 5
    1b88:	88 b1       	in	r24, 0x08	; 8
    1b8a:	d8 01       	movw	r26, r16
    1b8c:	9c 91       	ld	r25, X
    1b8e:	89 2b       	or	r24, r25
    1b90:	88 b9       	out	0x08, r24	; 8
    1b92:	8b b1       	in	r24, 0x0b	; 11
    1b94:	f6 01       	movw	r30, r12
    1b96:	90 81       	ld	r25, Z
    1b98:	89 2b       	or	r24, r25
    1b9a:	8b b9       	out	0x0b, r24	; 11
    1b9c:	8a e0       	ldi	r24, 0x0A	; 10
    1b9e:	90 e0       	ldi	r25, 0x00	; 0
    1ba0:	0e 94 ca 0c 	call	0x1994	; 0x1994 <delayMicroseconds>
    1ba4:	94 b1       	in	r25, 0x04	; 4
    1ba6:	d7 01       	movw	r26, r14
    1ba8:	8c 91       	ld	r24, X
    1baa:	80 95       	com	r24
    1bac:	89 23       	and	r24, r25
    1bae:	84 b9       	out	0x04, r24	; 4
    1bb0:	97 b1       	in	r25, 0x07	; 7
    1bb2:	f8 01       	movw	r30, r16
    1bb4:	80 81       	ld	r24, Z
    1bb6:	80 95       	com	r24
    1bb8:	89 23       	and	r24, r25
    1bba:	87 b9       	out	0x07, r24	; 7
    1bbc:	9a b1       	in	r25, 0x0a	; 10
    1bbe:	d6 01       	movw	r26, r12
    1bc0:	8c 91       	ld	r24, X
    1bc2:	80 95       	com	r24
    1bc4:	89 23       	and	r24, r25
    1bc6:	8a b9       	out	0x0a, r24	; 10
    1bc8:	95 b1       	in	r25, 0x05	; 5
    1bca:	f7 01       	movw	r30, r14
    1bcc:	80 81       	ld	r24, Z
    1bce:	80 95       	com	r24
    1bd0:	89 23       	and	r24, r25
    1bd2:	85 b9       	out	0x05, r24	; 5
    1bd4:	98 b1       	in	r25, 0x08	; 8
    1bd6:	d8 01       	movw	r26, r16
    1bd8:	8c 91       	ld	r24, X
    1bda:	80 95       	com	r24
    1bdc:	89 23       	and	r24, r25
    1bde:	88 b9       	out	0x08, r24	; 8
    1be0:	9b b1       	in	r25, 0x0b	; 11
    1be2:	f6 01       	movw	r30, r12
    1be4:	80 81       	ld	r24, Z
    1be6:	80 95       	com	r24
    1be8:	89 23       	and	r24, r25
    1bea:	8b b9       	out	0x0b, r24	; 11
    1bec:	c0 90 b0 00 	lds	r12, 0x00B0
    1bf0:	e0 90 b1 00 	lds	r14, 0x00B1
    1bf4:	80 91 b0 00 	lds	r24, 0x00B0
    1bf8:	83 60       	ori	r24, 0x03	; 3
    1bfa:	80 93 b0 00 	sts	0x00B0, r24
    1bfe:	82 e0       	ldi	r24, 0x02	; 2
    1c00:	80 93 b1 00 	sts	0x00B1, r24
    1c04:	00 91 b2 00 	lds	r16, 0x00B2
    1c08:	80 e0       	ldi	r24, 0x00	; 0
    1c0a:	90 e0       	ldi	r25, 0x00	; 0
    1c0c:	39 c0       	rjmp	.+114    	; 0x1c80 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1c0e:	20 91 b2 00 	lds	r18, 0x00B2
    1c12:	20 1b       	sub	r18, r16
    1c14:	82 0f       	add	r24, r18
    1c16:	91 1d       	adc	r25, r1
    1c18:	02 0f       	add	r16, r18
    1c1a:	f3 b0       	in	r15, 0x03	; 3
    1c1c:	f9 14       	cp	r15, r9
    1c1e:	09 f0       	breq	.+2      	; 0x1c22 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1c20:	4d c0       	rjmp	.+154    	; 0x1cbc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c22:	96 b0       	in	r9, 0x06	; 6
    1c24:	98 14       	cp	r9, r8
    1c26:	09 f0       	breq	.+2      	; 0x1c2a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1c28:	49 c0       	rjmp	.+146    	; 0x1cbc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c2a:	29 b1       	in	r18, 0x09	; 9
    1c2c:	27 15       	cp	r18, r7
    1c2e:	09 f0       	breq	.+2      	; 0x1c32 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1c30:	45 c0       	rjmp	.+138    	; 0x1cbc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c32:	24 c0       	rjmp	.+72     	; 0x1c7c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1c34:	21 2f       	mov	r18, r17
    1c36:	30 e0       	ldi	r19, 0x00	; 0
    1c38:	a9 01       	movw	r20, r18
    1c3a:	44 0f       	add	r20, r20
    1c3c:	55 1f       	adc	r21, r21
    1c3e:	f5 01       	movw	r30, r10
    1c40:	e4 0f       	add	r30, r20
    1c42:	f5 1f       	adc	r31, r21
    1c44:	60 81       	ld	r22, Z
    1c46:	71 81       	ldd	r23, Z+1	; 0x01
    1c48:	61 15       	cp	r22, r1
    1c4a:	71 05       	cpc	r23, r1
    1c4c:	99 f4       	brne	.+38     	; 0x1c74 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1c4e:	4c 0f       	add	r20, r28
    1c50:	5d 1f       	adc	r21, r29
    1c52:	da 01       	movw	r26, r20
    1c54:	91 96       	adiw	r26, 0x21	; 33
    1c56:	4d 91       	ld	r20, X+
    1c58:	5c 91       	ld	r21, X
    1c5a:	92 97       	sbiw	r26, 0x22	; 34
    1c5c:	da 01       	movw	r26, r20
    1c5e:	4c 91       	ld	r20, X
    1c60:	2c 0f       	add	r18, r28
    1c62:	3d 1f       	adc	r19, r29
    1c64:	d9 01       	movw	r26, r18
    1c66:	51 96       	adiw	r26, 0x11	; 17
    1c68:	2c 91       	ld	r18, X
    1c6a:	51 97       	sbiw	r26, 0x11	; 17
    1c6c:	42 23       	and	r20, r18
    1c6e:	11 f4       	brne	.+4      	; 0x1c74 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1c70:	91 83       	std	Z+1, r25	; 0x01
    1c72:	80 83       	st	Z, r24
    1c74:	1f 5f       	subi	r17, 0xFF	; 255
    1c76:	28 85       	ldd	r18, Y+8	; 0x08
    1c78:	12 17       	cp	r17, r18
    1c7a:	e0 f2       	brcs	.-72     	; 0x1c34 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1c7c:	89 2c       	mov	r8, r9
    1c7e:	9f 2c       	mov	r9, r15
    1c80:	2e 85       	ldd	r18, Y+14	; 0x0e
    1c82:	3f 85       	ldd	r19, Y+15	; 0x0f
    1c84:	82 17       	cp	r24, r18
    1c86:	93 07       	cpc	r25, r19
    1c88:	10 f2       	brcs	.-124    	; 0x1c0e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1c8a:	c0 92 b0 00 	sts	0x00B0, r12
    1c8e:	e0 92 b1 00 	sts	0x00B1, r14
    1c92:	20 e0       	ldi	r18, 0x00	; 0
    1c94:	0f c0       	rjmp	.+30     	; 0x1cb4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1c96:	e2 2f       	mov	r30, r18
    1c98:	f0 e0       	ldi	r31, 0x00	; 0
    1c9a:	ee 0f       	add	r30, r30
    1c9c:	ff 1f       	adc	r31, r31
    1c9e:	ea 0d       	add	r30, r10
    1ca0:	fb 1d       	adc	r31, r11
    1ca2:	80 81       	ld	r24, Z
    1ca4:	91 81       	ldd	r25, Z+1	; 0x01
    1ca6:	00 97       	sbiw	r24, 0x00	; 0
    1ca8:	21 f4       	brne	.+8      	; 0x1cb2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1caa:	8e 85       	ldd	r24, Y+14	; 0x0e
    1cac:	9f 85       	ldd	r25, Y+15	; 0x0f
    1cae:	91 83       	std	Z+1, r25	; 0x01
    1cb0:	80 83       	st	Z, r24
    1cb2:	2f 5f       	subi	r18, 0xFF	; 255
    1cb4:	88 85       	ldd	r24, Y+8	; 0x08
    1cb6:	28 17       	cp	r18, r24
    1cb8:	70 f3       	brcs	.-36     	; 0x1c96 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1cba:	05 c0       	rjmp	.+10     	; 0x1cc6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1cbc:	f3 b0       	in	r15, 0x03	; 3
    1cbe:	96 b0       	in	r9, 0x06	; 6
    1cc0:	79 b0       	in	r7, 0x09	; 9
    1cc2:	10 e0       	ldi	r17, 0x00	; 0
    1cc4:	d8 cf       	rjmp	.-80     	; 0x1c76 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1cc6:	cd b7       	in	r28, 0x3d	; 61
    1cc8:	de b7       	in	r29, 0x3e	; 62
    1cca:	ed e0       	ldi	r30, 0x0D	; 13
    1ccc:	0c 94 a2 12 	jmp	0x2544	; 0x2544 <__epilogue_restores__+0xa>

00001cd0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1cd0:	ef 92       	push	r14
    1cd2:	ff 92       	push	r15
    1cd4:	0f 93       	push	r16
    1cd6:	1f 93       	push	r17
    1cd8:	cf 93       	push	r28
    1cda:	df 93       	push	r29
    1cdc:	fc 01       	movw	r30, r24
    1cde:	9b 01       	movw	r18, r22
    1ce0:	00 91 7c 00 	lds	r16, 0x007C
    1ce4:	10 91 7a 00 	lds	r17, 0x007A
    1ce8:	e7 b0       	in	r14, 0x07	; 7
    1cea:	f8 b0       	in	r15, 0x08	; 8
    1cec:	80 91 7a 00 	lds	r24, 0x007A
    1cf0:	86 fd       	sbrc	r24, 6
    1cf2:	fc cf       	rjmp	.-8      	; 0x1cec <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1cf4:	80 e0       	ldi	r24, 0x00	; 0
    1cf6:	0a c0       	rjmp	.+20     	; 0x1d0c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1cf8:	a8 2f       	mov	r26, r24
    1cfa:	b0 e0       	ldi	r27, 0x00	; 0
    1cfc:	aa 0f       	add	r26, r26
    1cfe:	bb 1f       	adc	r27, r27
    1d00:	a2 0f       	add	r26, r18
    1d02:	b3 1f       	adc	r27, r19
    1d04:	11 96       	adiw	r26, 0x01	; 1
    1d06:	1c 92       	st	X, r1
    1d08:	1e 92       	st	-X, r1
    1d0a:	8f 5f       	subi	r24, 0xFF	; 255
    1d0c:	90 85       	ldd	r25, Z+8	; 0x08
    1d0e:	89 17       	cp	r24, r25
    1d10:	98 f3       	brcs	.-26     	; 0x1cf8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1d12:	97 b1       	in	r25, 0x07	; 7
    1d14:	82 a1       	ldd	r24, Z+34	; 0x22
    1d16:	80 95       	com	r24
    1d18:	89 23       	and	r24, r25
    1d1a:	87 b9       	out	0x07, r24	; 7
    1d1c:	98 b1       	in	r25, 0x08	; 8
    1d1e:	82 a1       	ldd	r24, Z+34	; 0x22
    1d20:	80 95       	com	r24
    1d22:	89 23       	and	r24, r25
    1d24:	88 b9       	out	0x08, r24	; 8
    1d26:	87 e8       	ldi	r24, 0x87	; 135
    1d28:	80 93 7a 00 	sts	0x007A, r24
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	29 c0       	rjmp	.+82     	; 0x1d82 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1d30:	df 01       	movw	r26, r30
    1d32:	a6 0f       	add	r26, r22
    1d34:	b1 1d       	adc	r27, r1
    1d36:	51 96       	adiw	r26, 0x11	; 17
    1d38:	8c 91       	ld	r24, X
    1d3a:	51 97       	sbiw	r26, 0x11	; 17
    1d3c:	80 64       	ori	r24, 0x40	; 64
    1d3e:	80 93 7c 00 	sts	0x007C, r24
    1d42:	80 91 7a 00 	lds	r24, 0x007A
    1d46:	80 64       	ori	r24, 0x40	; 64
    1d48:	80 93 7a 00 	sts	0x007A, r24
    1d4c:	80 91 7a 00 	lds	r24, 0x007A
    1d50:	86 fd       	sbrc	r24, 6
    1d52:	fc cf       	rjmp	.-8      	; 0x1d4c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1d54:	a6 2f       	mov	r26, r22
    1d56:	b0 e0       	ldi	r27, 0x00	; 0
    1d58:	aa 0f       	add	r26, r26
    1d5a:	bb 1f       	adc	r27, r27
    1d5c:	a2 0f       	add	r26, r18
    1d5e:	b3 1f       	adc	r27, r19
    1d60:	40 91 78 00 	lds	r20, 0x0078
    1d64:	50 91 79 00 	lds	r21, 0x0079
    1d68:	8d 91       	ld	r24, X+
    1d6a:	9c 91       	ld	r25, X
    1d6c:	11 97       	sbiw	r26, 0x01	; 1
    1d6e:	84 0f       	add	r24, r20
    1d70:	95 1f       	adc	r25, r21
    1d72:	11 96       	adiw	r26, 0x01	; 1
    1d74:	9c 93       	st	X, r25
    1d76:	8e 93       	st	-X, r24
    1d78:	6f 5f       	subi	r22, 0xFF	; 255
    1d7a:	80 85       	ldd	r24, Z+8	; 0x08
    1d7c:	68 17       	cp	r22, r24
    1d7e:	c0 f2       	brcs	.-80     	; 0x1d30 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1d80:	7f 5f       	subi	r23, 0xFF	; 255
    1d82:	81 a1       	ldd	r24, Z+33	; 0x21
    1d84:	78 17       	cp	r23, r24
    1d86:	10 f4       	brcc	.+4      	; 0x1d8c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1d88:	60 e0       	ldi	r22, 0x00	; 0
    1d8a:	f7 cf       	rjmp	.-18     	; 0x1d7a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1d8c:	40 e0       	ldi	r20, 0x00	; 0
    1d8e:	14 c0       	rjmp	.+40     	; 0x1db8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1d90:	c4 2f       	mov	r28, r20
    1d92:	d0 e0       	ldi	r29, 0x00	; 0
    1d94:	cc 0f       	add	r28, r28
    1d96:	dd 1f       	adc	r29, r29
    1d98:	c2 0f       	add	r28, r18
    1d9a:	d3 1f       	adc	r29, r19
    1d9c:	61 a1       	ldd	r22, Z+33	; 0x21
    1d9e:	70 e0       	ldi	r23, 0x00	; 0
    1da0:	cb 01       	movw	r24, r22
    1da2:	95 95       	asr	r25
    1da4:	87 95       	ror	r24
    1da6:	a8 81       	ld	r26, Y
    1da8:	b9 81       	ldd	r27, Y+1	; 0x01
    1daa:	8a 0f       	add	r24, r26
    1dac:	9b 1f       	adc	r25, r27
    1dae:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
    1db2:	79 83       	std	Y+1, r23	; 0x01
    1db4:	68 83       	st	Y, r22
    1db6:	4f 5f       	subi	r20, 0xFF	; 255
    1db8:	80 85       	ldd	r24, Z+8	; 0x08
    1dba:	48 17       	cp	r20, r24
    1dbc:	48 f3       	brcs	.-46     	; 0x1d90 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1dbe:	00 93 7c 00 	sts	0x007C, r16
    1dc2:	10 93 7a 00 	sts	0x007A, r17
    1dc6:	f8 b8       	out	0x08, r15	; 8
    1dc8:	e7 b8       	out	0x07, r14	; 7
    1dca:	cd b7       	in	r28, 0x3d	; 61
    1dcc:	de b7       	in	r29, 0x3e	; 62
    1dce:	e6 e0       	ldi	r30, 0x06	; 6
    1dd0:	0c 94 a9 12 	jmp	0x2552	; 0x2552 <__epilogue_restores__+0x18>

00001dd4 <_ZN16PololuQTRSensors4readEPjh>:
    1dd4:	a0 e2       	ldi	r26, 0x20	; 32
    1dd6:	b0 e0       	ldi	r27, 0x00	; 0
    1dd8:	e0 ef       	ldi	r30, 0xF0	; 240
    1dda:	fe e0       	ldi	r31, 0x0E	; 14
    1ddc:	0c 94 8c 12 	jmp	0x2518	; 0x2518 <__prologue_saves__+0x16>
    1de0:	8c 01       	movw	r16, r24
    1de2:	7b 01       	movw	r14, r22
    1de4:	d4 2e       	mov	r13, r20
    1de6:	84 2f       	mov	r24, r20
    1de8:	81 50       	subi	r24, 0x01	; 1
    1dea:	82 30       	cpi	r24, 0x02	; 2
    1dec:	18 f4       	brcc	.+6      	; 0x1df4 <_ZN16PololuQTRSensors4readEPjh+0x20>
    1dee:	c8 01       	movw	r24, r16
    1df0:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <_ZN16PololuQTRSensors10emittersOnEv>
    1df4:	d8 01       	movw	r26, r16
    1df6:	50 96       	adiw	r26, 0x10	; 16
    1df8:	8c 91       	ld	r24, X
    1dfa:	50 97       	sbiw	r26, 0x10	; 16
    1dfc:	88 23       	and	r24, r24
    1dfe:	89 f4       	brne	.+34     	; 0x1e22 <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1e00:	c8 01       	movw	r24, r16
    1e02:	b7 01       	movw	r22, r14
    1e04:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1e08:	c8 01       	movw	r24, r16
    1e0a:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <_ZN16PololuQTRSensors11emittersOffEv>
    1e0e:	bd 2d       	mov	r27, r13
    1e10:	b2 30       	cpi	r27, 0x02	; 2
    1e12:	d9 f5       	brne	.+118    	; 0x1e8a <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1e14:	c8 01       	movw	r24, r16
    1e16:	be 01       	movw	r22, r28
    1e18:	6f 5f       	subi	r22, 0xFF	; 255
    1e1a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e1c:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1e20:	10 c0       	rjmp	.+32     	; 0x1e42 <_ZN16PololuQTRSensors4readEPjh+0x6e>
    1e22:	c8 01       	movw	r24, r16
    1e24:	b7 01       	movw	r22, r14
    1e26:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e2a:	c8 01       	movw	r24, r16
    1e2c:	0e 94 ff 0c 	call	0x19fe	; 0x19fe <_ZN16PololuQTRSensors11emittersOffEv>
    1e30:	ed 2d       	mov	r30, r13
    1e32:	e2 30       	cpi	r30, 0x02	; 2
    1e34:	51 f5       	brne	.+84     	; 0x1e8a <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1e36:	c8 01       	movw	r24, r16
    1e38:	be 01       	movw	r22, r28
    1e3a:	6f 5f       	subi	r22, 0xFF	; 255
    1e3c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e3e:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e42:	60 e0       	ldi	r22, 0x00	; 0
    1e44:	ae 01       	movw	r20, r28
    1e46:	4f 5f       	subi	r20, 0xFF	; 255
    1e48:	5f 4f       	sbci	r21, 0xFF	; 255
    1e4a:	1b c0       	rjmp	.+54     	; 0x1e82 <_ZN16PololuQTRSensors4readEPjh+0xae>
    1e4c:	86 2f       	mov	r24, r22
    1e4e:	90 e0       	ldi	r25, 0x00	; 0
    1e50:	88 0f       	add	r24, r24
    1e52:	99 1f       	adc	r25, r25
    1e54:	f7 01       	movw	r30, r14
    1e56:	e8 0f       	add	r30, r24
    1e58:	f9 1f       	adc	r31, r25
    1e5a:	84 0f       	add	r24, r20
    1e5c:	95 1f       	adc	r25, r21
    1e5e:	d8 01       	movw	r26, r16
    1e60:	1e 96       	adiw	r26, 0x0e	; 14
    1e62:	2d 91       	ld	r18, X+
    1e64:	3c 91       	ld	r19, X
    1e66:	1f 97       	sbiw	r26, 0x0f	; 15
    1e68:	dc 01       	movw	r26, r24
    1e6a:	8d 91       	ld	r24, X+
    1e6c:	9c 91       	ld	r25, X
    1e6e:	11 97       	sbiw	r26, 0x01	; 1
    1e70:	28 1b       	sub	r18, r24
    1e72:	39 0b       	sbc	r19, r25
    1e74:	80 81       	ld	r24, Z
    1e76:	91 81       	ldd	r25, Z+1	; 0x01
    1e78:	82 0f       	add	r24, r18
    1e7a:	93 1f       	adc	r25, r19
    1e7c:	91 83       	std	Z+1, r25	; 0x01
    1e7e:	80 83       	st	Z, r24
    1e80:	6f 5f       	subi	r22, 0xFF	; 255
    1e82:	f8 01       	movw	r30, r16
    1e84:	80 85       	ldd	r24, Z+8	; 0x08
    1e86:	68 17       	cp	r22, r24
    1e88:	08 f3       	brcs	.-62     	; 0x1e4c <_ZN16PololuQTRSensors4readEPjh+0x78>
    1e8a:	a0 96       	adiw	r28, 0x20	; 32
    1e8c:	e7 e0       	ldi	r30, 0x07	; 7
    1e8e:	0c 94 a8 12 	jmp	0x2550	; 0x2550 <__epilogue_restores__+0x16>

00001e92 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1e92:	8f 92       	push	r8
    1e94:	9f 92       	push	r9
    1e96:	af 92       	push	r10
    1e98:	bf 92       	push	r11
    1e9a:	cf 92       	push	r12
    1e9c:	df 92       	push	r13
    1e9e:	ff 92       	push	r15
    1ea0:	0f 93       	push	r16
    1ea2:	1f 93       	push	r17
    1ea4:	cf 93       	push	r28
    1ea6:	df 93       	push	r29
    1ea8:	ec 01       	movw	r28, r24
    1eaa:	c6 2e       	mov	r12, r22
    1eac:	07 2f       	mov	r16, r23
    1eae:	f4 2e       	mov	r15, r20
    1eb0:	42 30       	cpi	r20, 0x02	; 2
    1eb2:	11 f0       	breq	.+4      	; 0x1eb8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    1eb4:	ff 20       	and	r15, r15
    1eb6:	51 f4       	brne	.+20     	; 0x1ecc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1eb8:	8c 81       	ldd	r24, Y+4	; 0x04
    1eba:	9d 81       	ldd	r25, Y+5	; 0x05
    1ebc:	00 97       	sbiw	r24, 0x00	; 0
    1ebe:	09 f4       	brne	.+2      	; 0x1ec2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    1ec0:	a0 c0       	rjmp	.+320    	; 0x2002 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ec2:	8e 81       	ldd	r24, Y+6	; 0x06
    1ec4:	9f 81       	ldd	r25, Y+7	; 0x07
    1ec6:	00 97       	sbiw	r24, 0x00	; 0
    1ec8:	09 f4       	brne	.+2      	; 0x1ecc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1eca:	9b c0       	rjmp	.+310    	; 0x2002 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ecc:	8f 2d       	mov	r24, r15
    1ece:	81 50       	subi	r24, 0x01	; 1
    1ed0:	82 30       	cpi	r24, 0x02	; 2
    1ed2:	50 f4       	brcc	.+20     	; 0x1ee8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1ed4:	88 81       	ld	r24, Y
    1ed6:	99 81       	ldd	r25, Y+1	; 0x01
    1ed8:	00 97       	sbiw	r24, 0x00	; 0
    1eda:	09 f4       	brne	.+2      	; 0x1ede <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    1edc:	92 c0       	rjmp	.+292    	; 0x2002 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ede:	8a 81       	ldd	r24, Y+2	; 0x02
    1ee0:	9b 81       	ldd	r25, Y+3	; 0x03
    1ee2:	00 97       	sbiw	r24, 0x00	; 0
    1ee4:	09 f4       	brne	.+2      	; 0x1ee8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1ee6:	8d c0       	rjmp	.+282    	; 0x2002 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ee8:	ce 01       	movw	r24, r28
    1eea:	6c 2d       	mov	r22, r12
    1eec:	70 2f       	mov	r23, r16
    1eee:	4f 2d       	mov	r20, r15
    1ef0:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <_ZN16PololuQTRSensors4readEPjh>
    1ef4:	ac 2c       	mov	r10, r12
    1ef6:	b0 2e       	mov	r11, r16
    1ef8:	00 e0       	ldi	r16, 0x00	; 0
    1efa:	10 e0       	ldi	r17, 0x00	; 0
    1efc:	88 24       	eor	r8, r8
    1efe:	99 24       	eor	r9, r9
    1f00:	7a c0       	rjmp	.+244    	; 0x1ff6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1f02:	8f 2d       	mov	r24, r15
    1f04:	81 30       	cpi	r24, 0x01	; 1
    1f06:	59 f4       	brne	.+22     	; 0x1f1e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1f08:	ea 81       	ldd	r30, Y+2	; 0x02
    1f0a:	fb 81       	ldd	r31, Y+3	; 0x03
    1f0c:	e0 0f       	add	r30, r16
    1f0e:	f1 1f       	adc	r31, r17
    1f10:	c0 80       	ld	r12, Z
    1f12:	d1 80       	ldd	r13, Z+1	; 0x01
    1f14:	e8 81       	ld	r30, Y
    1f16:	f9 81       	ldd	r31, Y+1	; 0x01
    1f18:	e0 0f       	add	r30, r16
    1f1a:	f1 1f       	adc	r31, r17
    1f1c:	0d c0       	rjmp	.+26     	; 0x1f38 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1f1e:	8c 81       	ldd	r24, Y+4	; 0x04
    1f20:	9d 81       	ldd	r25, Y+5	; 0x05
    1f22:	ff 20       	and	r15, r15
    1f24:	61 f4       	brne	.+24     	; 0x1f3e <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    1f26:	ee 81       	ldd	r30, Y+6	; 0x06
    1f28:	ff 81       	ldd	r31, Y+7	; 0x07
    1f2a:	e0 0f       	add	r30, r16
    1f2c:	f1 1f       	adc	r31, r17
    1f2e:	c0 80       	ld	r12, Z
    1f30:	d1 80       	ldd	r13, Z+1	; 0x01
    1f32:	80 0f       	add	r24, r16
    1f34:	91 1f       	adc	r25, r17
    1f36:	fc 01       	movw	r30, r24
    1f38:	40 81       	ld	r20, Z
    1f3a:	51 81       	ldd	r21, Z+1	; 0x01
    1f3c:	2b c0       	rjmp	.+86     	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f3e:	80 0f       	add	r24, r16
    1f40:	91 1f       	adc	r25, r17
    1f42:	fc 01       	movw	r30, r24
    1f44:	80 81       	ld	r24, Z
    1f46:	91 81       	ldd	r25, Z+1	; 0x01
    1f48:	e8 81       	ld	r30, Y
    1f4a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f4c:	e0 0f       	add	r30, r16
    1f4e:	f1 1f       	adc	r31, r17
    1f50:	40 81       	ld	r20, Z
    1f52:	51 81       	ldd	r21, Z+1	; 0x01
    1f54:	ce 84       	ldd	r12, Y+14	; 0x0e
    1f56:	df 84       	ldd	r13, Y+15	; 0x0f
    1f58:	84 17       	cp	r24, r20
    1f5a:	95 07       	cpc	r25, r21
    1f5c:	10 f4       	brcc	.+4      	; 0x1f62 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    1f5e:	a6 01       	movw	r20, r12
    1f60:	04 c0       	rjmp	.+8      	; 0x1f6a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    1f62:	4c 0d       	add	r20, r12
    1f64:	5d 1d       	adc	r21, r13
    1f66:	48 1b       	sub	r20, r24
    1f68:	59 0b       	sbc	r21, r25
    1f6a:	ee 81       	ldd	r30, Y+6	; 0x06
    1f6c:	ff 81       	ldd	r31, Y+7	; 0x07
    1f6e:	e0 0f       	add	r30, r16
    1f70:	f1 1f       	adc	r31, r17
    1f72:	80 81       	ld	r24, Z
    1f74:	91 81       	ldd	r25, Z+1	; 0x01
    1f76:	ea 81       	ldd	r30, Y+2	; 0x02
    1f78:	fb 81       	ldd	r31, Y+3	; 0x03
    1f7a:	e0 0f       	add	r30, r16
    1f7c:	f1 1f       	adc	r31, r17
    1f7e:	20 81       	ld	r18, Z
    1f80:	31 81       	ldd	r19, Z+1	; 0x01
    1f82:	ce 84       	ldd	r12, Y+14	; 0x0e
    1f84:	df 84       	ldd	r13, Y+15	; 0x0f
    1f86:	82 17       	cp	r24, r18
    1f88:	93 07       	cpc	r25, r19
    1f8a:	20 f0       	brcs	.+8      	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f8c:	c2 0e       	add	r12, r18
    1f8e:	d3 1e       	adc	r13, r19
    1f90:	c8 1a       	sub	r12, r24
    1f92:	d9 0a       	sbc	r13, r25
    1f94:	c4 1a       	sub	r12, r20
    1f96:	d5 0a       	sbc	r13, r21
    1f98:	d1 f0       	breq	.+52     	; 0x1fce <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1f9a:	f5 01       	movw	r30, r10
    1f9c:	60 81       	ld	r22, Z
    1f9e:	71 81       	ldd	r23, Z+1	; 0x01
    1fa0:	80 e0       	ldi	r24, 0x00	; 0
    1fa2:	90 e0       	ldi	r25, 0x00	; 0
    1fa4:	9a 01       	movw	r18, r20
    1fa6:	40 e0       	ldi	r20, 0x00	; 0
    1fa8:	50 e0       	ldi	r21, 0x00	; 0
    1faa:	62 1b       	sub	r22, r18
    1fac:	73 0b       	sbc	r23, r19
    1fae:	84 0b       	sbc	r24, r20
    1fb0:	95 0b       	sbc	r25, r21
    1fb2:	28 ee       	ldi	r18, 0xE8	; 232
    1fb4:	33 e0       	ldi	r19, 0x03	; 3
    1fb6:	40 e0       	ldi	r20, 0x00	; 0
    1fb8:	50 e0       	ldi	r21, 0x00	; 0
    1fba:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__mulsi3>
    1fbe:	96 01       	movw	r18, r12
    1fc0:	40 e0       	ldi	r20, 0x00	; 0
    1fc2:	50 e0       	ldi	r21, 0x00	; 0
    1fc4:	0e 94 57 12 	call	0x24ae	; 0x24ae <__divmodsi4>
    1fc8:	37 fd       	sbrc	r19, 7
    1fca:	0a c0       	rjmp	.+20     	; 0x1fe0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1fcc:	02 c0       	rjmp	.+4      	; 0x1fd2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    1fce:	20 e0       	ldi	r18, 0x00	; 0
    1fd0:	30 e0       	ldi	r19, 0x00	; 0
    1fd2:	f3 e0       	ldi	r31, 0x03	; 3
    1fd4:	29 3e       	cpi	r18, 0xE9	; 233
    1fd6:	3f 07       	cpc	r19, r31
    1fd8:	2c f0       	brlt	.+10     	; 0x1fe4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1fda:	28 ee       	ldi	r18, 0xE8	; 232
    1fdc:	33 e0       	ldi	r19, 0x03	; 3
    1fde:	02 c0       	rjmp	.+4      	; 0x1fe4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1fe0:	20 e0       	ldi	r18, 0x00	; 0
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	f5 01       	movw	r30, r10
    1fe6:	21 93       	st	Z+, r18
    1fe8:	31 93       	st	Z+, r19
    1fea:	5f 01       	movw	r10, r30
    1fec:	08 94       	sec
    1fee:	81 1c       	adc	r8, r1
    1ff0:	91 1c       	adc	r9, r1
    1ff2:	0e 5f       	subi	r16, 0xFE	; 254
    1ff4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ff6:	88 85       	ldd	r24, Y+8	; 0x08
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	88 16       	cp	r8, r24
    1ffc:	99 06       	cpc	r9, r25
    1ffe:	0c f4       	brge	.+2      	; 0x2002 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    2000:	80 cf       	rjmp	.-256    	; 0x1f02 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    2002:	df 91       	pop	r29
    2004:	cf 91       	pop	r28
    2006:	1f 91       	pop	r17
    2008:	0f 91       	pop	r16
    200a:	ff 90       	pop	r15
    200c:	df 90       	pop	r13
    200e:	cf 90       	pop	r12
    2010:	bf 90       	pop	r11
    2012:	af 90       	pop	r10
    2014:	9f 90       	pop	r9
    2016:	8f 90       	pop	r8
    2018:	08 95       	ret

0000201a <_ZN16PololuQTRSensors8readLineEPjhh>:
    201a:	a5 e0       	ldi	r26, 0x05	; 5
    201c:	b0 e0       	ldi	r27, 0x00	; 0
    201e:	e3 e1       	ldi	r30, 0x13	; 19
    2020:	f0 e1       	ldi	r31, 0x10	; 16
    2022:	0c 94 81 12 	jmp	0x2502	; 0x2502 <__prologue_saves__>
    2026:	4c 01       	movw	r8, r24
    2028:	c6 2e       	mov	r12, r22
    202a:	e7 2e       	mov	r14, r23
    202c:	2d 83       	std	Y+5, r18	; 0x05
    202e:	0e 94 49 0f 	call	0x1e92	; 0x1e92 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    2032:	d4 01       	movw	r26, r8
    2034:	18 96       	adiw	r26, 0x08	; 8
    2036:	4c 90       	ld	r4, X
    2038:	18 97       	sbiw	r26, 0x08	; 8
    203a:	de 2c       	mov	r13, r14
    203c:	64 2d       	mov	r22, r4
    203e:	70 e0       	ldi	r23, 0x00	; 0
    2040:	80 e0       	ldi	r24, 0x00	; 0
    2042:	90 e0       	ldi	r25, 0x00	; 0
    2044:	28 ee       	ldi	r18, 0xE8	; 232
    2046:	33 e0       	ldi	r19, 0x03	; 3
    2048:	40 e0       	ldi	r20, 0x00	; 0
    204a:	50 e0       	ldi	r21, 0x00	; 0
    204c:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__mulsi3>
    2050:	69 83       	std	Y+1, r22	; 0x01
    2052:	7a 83       	std	Y+2, r23	; 0x02
    2054:	8b 83       	std	Y+3, r24	; 0x03
    2056:	9c 83       	std	Y+4, r25	; 0x04
    2058:	ee 24       	eor	r14, r14
    205a:	ff 24       	eor	r15, r15
    205c:	87 01       	movw	r16, r14
    205e:	66 24       	eor	r6, r6
    2060:	77 24       	eor	r7, r7
    2062:	88 24       	eor	r8, r8
    2064:	99 24       	eor	r9, r9
    2066:	54 01       	movw	r10, r8
    2068:	55 24       	eor	r5, r5
    206a:	36 c0       	rjmp	.+108    	; 0x20d8 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    206c:	f6 01       	movw	r30, r12
    206e:	30 81       	ld	r19, Z
    2070:	21 81       	ldd	r18, Z+1	; 0x01
    2072:	42 e0       	ldi	r20, 0x02	; 2
    2074:	24 2e       	mov	r2, r20
    2076:	31 2c       	mov	r3, r1
    2078:	c2 0c       	add	r12, r2
    207a:	d3 1c       	adc	r13, r3
    207c:	c9 01       	movw	r24, r18
    207e:	49 2f       	mov	r20, r25
    2080:	58 2f       	mov	r21, r24
    2082:	1a 01       	movw	r2, r20
    2084:	2d 81       	ldd	r18, Y+5	; 0x05
    2086:	22 23       	and	r18, r18
    2088:	29 f0       	breq	.+10     	; 0x2094 <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    208a:	88 ee       	ldi	r24, 0xE8	; 232
    208c:	93 e0       	ldi	r25, 0x03	; 3
    208e:	82 19       	sub	r24, r2
    2090:	93 09       	sbc	r25, r3
    2092:	1c 01       	movw	r2, r24
    2094:	99 ec       	ldi	r25, 0xC9	; 201
    2096:	29 16       	cp	r2, r25
    2098:	31 04       	cpc	r3, r1
    209a:	2c f4       	brge	.+10     	; 0x20a6 <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    209c:	a3 e3       	ldi	r26, 0x33	; 51
    209e:	2a 16       	cp	r2, r26
    20a0:	31 04       	cpc	r3, r1
    20a2:	94 f0       	brlt	.+36     	; 0x20c8 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    20a4:	02 c0       	rjmp	.+4      	; 0x20aa <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    20a6:	55 24       	eor	r5, r5
    20a8:	53 94       	inc	r5
    20aa:	b1 01       	movw	r22, r2
    20ac:	88 27       	eor	r24, r24
    20ae:	77 fd       	sbrc	r23, 7
    20b0:	80 95       	com	r24
    20b2:	98 2f       	mov	r25, r24
    20b4:	a8 01       	movw	r20, r16
    20b6:	97 01       	movw	r18, r14
    20b8:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__mulsi3>
    20bc:	86 0e       	add	r8, r22
    20be:	97 1e       	adc	r9, r23
    20c0:	a8 1e       	adc	r10, r24
    20c2:	b9 1e       	adc	r11, r25
    20c4:	62 0c       	add	r6, r2
    20c6:	73 1c       	adc	r7, r3
    20c8:	88 ee       	ldi	r24, 0xE8	; 232
    20ca:	93 e0       	ldi	r25, 0x03	; 3
    20cc:	a0 e0       	ldi	r26, 0x00	; 0
    20ce:	b0 e0       	ldi	r27, 0x00	; 0
    20d0:	e8 0e       	add	r14, r24
    20d2:	f9 1e       	adc	r15, r25
    20d4:	0a 1f       	adc	r16, r26
    20d6:	1b 1f       	adc	r17, r27
    20d8:	89 81       	ldd	r24, Y+1	; 0x01
    20da:	9a 81       	ldd	r25, Y+2	; 0x02
    20dc:	ab 81       	ldd	r26, Y+3	; 0x03
    20de:	bc 81       	ldd	r27, Y+4	; 0x04
    20e0:	e8 16       	cp	r14, r24
    20e2:	f9 06       	cpc	r15, r25
    20e4:	0a 07       	cpc	r16, r26
    20e6:	1b 07       	cpc	r17, r27
    20e8:	09 f6       	brne	.-126    	; 0x206c <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    20ea:	55 20       	and	r5, r5
    20ec:	f1 f4       	brne	.+60     	; 0x212a <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    20ee:	55 24       	eor	r5, r5
    20f0:	08 94       	sec
    20f2:	41 08       	sbc	r4, r1
    20f4:	51 08       	sbc	r5, r1
    20f6:	24 ef       	ldi	r18, 0xF4	; 244
    20f8:	31 e0       	ldi	r19, 0x01	; 1
    20fa:	42 9e       	mul	r4, r18
    20fc:	c0 01       	movw	r24, r0
    20fe:	43 9e       	mul	r4, r19
    2100:	90 0d       	add	r25, r0
    2102:	52 9e       	mul	r5, r18
    2104:	90 0d       	add	r25, r0
    2106:	11 24       	eor	r1, r1
    2108:	20 91 b9 01 	lds	r18, 0x01B9
    210c:	30 91 ba 01 	lds	r19, 0x01BA
    2110:	28 17       	cp	r18, r24
    2112:	39 07       	cpc	r19, r25
    2114:	b4 f0       	brlt	.+44     	; 0x2142 <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    2116:	88 ee       	ldi	r24, 0xE8	; 232
    2118:	93 e0       	ldi	r25, 0x03	; 3
    211a:	48 9e       	mul	r4, r24
    211c:	90 01       	movw	r18, r0
    211e:	49 9e       	mul	r4, r25
    2120:	30 0d       	add	r19, r0
    2122:	58 9e       	mul	r5, r24
    2124:	30 0d       	add	r19, r0
    2126:	11 24       	eor	r1, r1
    2128:	0e c0       	rjmp	.+28     	; 0x2146 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    212a:	93 01       	movw	r18, r6
    212c:	40 e0       	ldi	r20, 0x00	; 0
    212e:	50 e0       	ldi	r21, 0x00	; 0
    2130:	c5 01       	movw	r24, r10
    2132:	b4 01       	movw	r22, r8
    2134:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
    2138:	20 93 b9 01 	sts	0x01B9, r18
    213c:	30 93 ba 01 	sts	0x01BA, r19
    2140:	02 c0       	rjmp	.+4      	; 0x2146 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    2142:	20 e0       	ldi	r18, 0x00	; 0
    2144:	30 e0       	ldi	r19, 0x00	; 0
    2146:	c9 01       	movw	r24, r18
    2148:	25 96       	adiw	r28, 0x05	; 5
    214a:	e2 e1       	ldi	r30, 0x12	; 18
    214c:	0c 94 9d 12 	jmp	0x253a	; 0x253a <__epilogue_restores__>

00002150 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    2150:	a7 e6       	ldi	r26, 0x67	; 103
    2152:	b0 e0       	ldi	r27, 0x00	; 0
    2154:	ee ea       	ldi	r30, 0xAE	; 174
    2156:	f0 e1       	ldi	r31, 0x10	; 16
    2158:	0c 94 81 12 	jmp	0x2502	; 0x2502 <__prologue_saves__>
    215c:	8c 01       	movw	r16, r24
    215e:	4b 01       	movw	r8, r22
    2160:	6a 01       	movw	r12, r20
    2162:	a6 96       	adiw	r28, 0x26	; 38
    2164:	2f af       	std	Y+63, r18	; 0x3f
    2166:	a6 97       	sbiw	r28, 0x26	; 38
    2168:	da 01       	movw	r26, r20
    216a:	8d 91       	ld	r24, X+
    216c:	9c 91       	ld	r25, X
    216e:	11 97       	sbiw	r26, 0x01	; 1
    2170:	00 97       	sbiw	r24, 0x00	; 0
    2172:	e9 f4       	brne	.+58     	; 0x21ae <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    2174:	f8 01       	movw	r30, r16
    2176:	80 85       	ldd	r24, Z+8	; 0x08
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	88 0f       	add	r24, r24
    217c:	99 1f       	adc	r25, r25
    217e:	0e 94 cd 12 	call	0x259a	; 0x259a <malloc>
    2182:	d6 01       	movw	r26, r12
    2184:	11 96       	adiw	r26, 0x01	; 1
    2186:	9c 93       	st	X, r25
    2188:	8e 93       	st	-X, r24
    218a:	00 97       	sbiw	r24, 0x00	; 0
    218c:	09 f4       	brne	.+2      	; 0x2190 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    218e:	e2 c0       	rjmp	.+452    	; 0x2354 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2190:	fc 01       	movw	r30, r24
    2192:	80 e0       	ldi	r24, 0x00	; 0
    2194:	90 e0       	ldi	r25, 0x00	; 0
    2196:	03 c0       	rjmp	.+6      	; 0x219e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    2198:	11 92       	st	Z+, r1
    219a:	11 92       	st	Z+, r1
    219c:	01 96       	adiw	r24, 0x01	; 1
    219e:	d8 01       	movw	r26, r16
    21a0:	18 96       	adiw	r26, 0x08	; 8
    21a2:	2c 91       	ld	r18, X
    21a4:	18 97       	sbiw	r26, 0x08	; 8
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	82 17       	cp	r24, r18
    21aa:	93 07       	cpc	r25, r19
    21ac:	ac f3       	brlt	.-22     	; 0x2198 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    21ae:	f4 01       	movw	r30, r8
    21b0:	80 81       	ld	r24, Z
    21b2:	91 81       	ldd	r25, Z+1	; 0x01
    21b4:	00 97       	sbiw	r24, 0x00	; 0
    21b6:	89 f0       	breq	.+34     	; 0x21da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    21b8:	ee 24       	eor	r14, r14
    21ba:	ff 24       	eor	r15, r15
    21bc:	5e 01       	movw	r10, r28
    21be:	08 94       	sec
    21c0:	a1 1c       	adc	r10, r1
    21c2:	b1 1c       	adc	r11, r1
    21c4:	b1 e4       	ldi	r27, 0x41	; 65
    21c6:	6b 2e       	mov	r6, r27
    21c8:	71 2c       	mov	r7, r1
    21ca:	6c 0e       	add	r6, r28
    21cc:	7d 1e       	adc	r7, r29
    21ce:	a1 e2       	ldi	r26, 0x21	; 33
    21d0:	4a 2e       	mov	r4, r26
    21d2:	51 2c       	mov	r5, r1
    21d4:	4c 0e       	add	r4, r28
    21d6:	5d 1e       	adc	r5, r29
    21d8:	23 c0       	rjmp	.+70     	; 0x2220 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    21da:	d8 01       	movw	r26, r16
    21dc:	18 96       	adiw	r26, 0x08	; 8
    21de:	8c 91       	ld	r24, X
    21e0:	90 e0       	ldi	r25, 0x00	; 0
    21e2:	88 0f       	add	r24, r24
    21e4:	99 1f       	adc	r25, r25
    21e6:	0e 94 cd 12 	call	0x259a	; 0x259a <malloc>
    21ea:	f4 01       	movw	r30, r8
    21ec:	91 83       	std	Z+1, r25	; 0x01
    21ee:	80 83       	st	Z, r24
    21f0:	00 97       	sbiw	r24, 0x00	; 0
    21f2:	09 f4       	brne	.+2      	; 0x21f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    21f4:	af c0       	rjmp	.+350    	; 0x2354 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    21f6:	fc 01       	movw	r30, r24
    21f8:	80 e0       	ldi	r24, 0x00	; 0
    21fa:	90 e0       	ldi	r25, 0x00	; 0
    21fc:	d8 01       	movw	r26, r16
    21fe:	07 c0       	rjmp	.+14     	; 0x220e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    2200:	1e 96       	adiw	r26, 0x0e	; 14
    2202:	2d 91       	ld	r18, X+
    2204:	3c 91       	ld	r19, X
    2206:	1f 97       	sbiw	r26, 0x0f	; 15
    2208:	21 93       	st	Z+, r18
    220a:	31 93       	st	Z+, r19
    220c:	01 96       	adiw	r24, 0x01	; 1
    220e:	18 96       	adiw	r26, 0x08	; 8
    2210:	2c 91       	ld	r18, X
    2212:	18 97       	sbiw	r26, 0x08	; 8
    2214:	30 e0       	ldi	r19, 0x00	; 0
    2216:	82 17       	cp	r24, r18
    2218:	93 07       	cpc	r25, r19
    221a:	94 f3       	brlt	.-28     	; 0x2200 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    221c:	8d 01       	movw	r16, r26
    221e:	cc cf       	rjmp	.-104    	; 0x21b8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    2220:	c8 01       	movw	r24, r16
    2222:	b5 01       	movw	r22, r10
    2224:	a6 96       	adiw	r28, 0x26	; 38
    2226:	4f ad       	ldd	r20, Y+63	; 0x3f
    2228:	a6 97       	sbiw	r28, 0x26	; 38
    222a:	0e 94 ea 0e 	call	0x1dd4	; 0x1dd4 <_ZN16PololuQTRSensors4readEPjh>
    222e:	d8 01       	movw	r26, r16
    2230:	18 96       	adiw	r26, 0x08	; 8
    2232:	8c 91       	ld	r24, X
    2234:	18 97       	sbiw	r26, 0x08	; 8
    2236:	e8 2f       	mov	r30, r24
    2238:	f0 e0       	ldi	r31, 0x00	; 0
    223a:	a5 96       	adiw	r28, 0x25	; 37
    223c:	ff af       	std	Y+63, r31	; 0x3f
    223e:	ee af       	std	Y+62, r30	; 0x3e
    2240:	a5 97       	sbiw	r28, 0x25	; 37
    2242:	13 01       	movw	r2, r6
    2244:	f5 01       	movw	r30, r10
    2246:	a3 96       	adiw	r28, 0x23	; 35
    2248:	5f ae       	std	Y+63, r5	; 0x3f
    224a:	4e ae       	std	Y+62, r4	; 0x3e
    224c:	a3 97       	sbiw	r28, 0x23	; 35
    224e:	93 01       	movw	r18, r6
    2250:	40 e0       	ldi	r20, 0x00	; 0
    2252:	50 e0       	ldi	r21, 0x00	; 0
    2254:	a8 96       	adiw	r28, 0x28	; 40
    2256:	5f ae       	std	Y+63, r5	; 0x3f
    2258:	4e ae       	std	Y+62, r4	; 0x3e
    225a:	a8 97       	sbiw	r28, 0x28	; 40
    225c:	37 c0       	rjmp	.+110    	; 0x22cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    225e:	e1 14       	cp	r14, r1
    2260:	f1 04       	cpc	r15, r1
    2262:	61 f0       	breq	.+24     	; 0x227c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    2264:	a8 96       	adiw	r28, 0x28	; 40
    2266:	ae ad       	ldd	r26, Y+62	; 0x3e
    2268:	bf ad       	ldd	r27, Y+63	; 0x3f
    226a:	a8 97       	sbiw	r28, 0x28	; 40
    226c:	6d 91       	ld	r22, X+
    226e:	7c 91       	ld	r23, X
    2270:	11 97       	sbiw	r26, 0x01	; 1
    2272:	80 81       	ld	r24, Z
    2274:	91 81       	ldd	r25, Z+1	; 0x01
    2276:	68 17       	cp	r22, r24
    2278:	79 07       	cpc	r23, r25
    227a:	60 f4       	brcc	.+24     	; 0x2294 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    227c:	80 81       	ld	r24, Z
    227e:	91 81       	ldd	r25, Z+1	; 0x01
    2280:	a8 96       	adiw	r28, 0x28	; 40
    2282:	ae ad       	ldd	r26, Y+62	; 0x3e
    2284:	bf ad       	ldd	r27, Y+63	; 0x3f
    2286:	a8 97       	sbiw	r28, 0x28	; 40
    2288:	11 96       	adiw	r26, 0x01	; 1
    228a:	9c 93       	st	X, r25
    228c:	8e 93       	st	-X, r24
    228e:	e1 14       	cp	r14, r1
    2290:	f1 04       	cpc	r15, r1
    2292:	49 f0       	breq	.+18     	; 0x22a6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    2294:	d9 01       	movw	r26, r18
    2296:	6d 91       	ld	r22, X+
    2298:	7c 91       	ld	r23, X
    229a:	11 97       	sbiw	r26, 0x01	; 1
    229c:	80 81       	ld	r24, Z
    229e:	91 81       	ldd	r25, Z+1	; 0x01
    22a0:	86 17       	cp	r24, r22
    22a2:	97 07       	cpc	r25, r23
    22a4:	28 f4       	brcc	.+10     	; 0x22b0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    22a6:	80 81       	ld	r24, Z
    22a8:	91 81       	ldd	r25, Z+1	; 0x01
    22aa:	d9 01       	movw	r26, r18
    22ac:	8d 93       	st	X+, r24
    22ae:	9c 93       	st	X, r25
    22b0:	4f 5f       	subi	r20, 0xFF	; 255
    22b2:	5f 4f       	sbci	r21, 0xFF	; 255
    22b4:	2e 5f       	subi	r18, 0xFE	; 254
    22b6:	3f 4f       	sbci	r19, 0xFF	; 255
    22b8:	32 96       	adiw	r30, 0x02	; 2
    22ba:	a8 96       	adiw	r28, 0x28	; 40
    22bc:	8e ad       	ldd	r24, Y+62	; 0x3e
    22be:	9f ad       	ldd	r25, Y+63	; 0x3f
    22c0:	a8 97       	sbiw	r28, 0x28	; 40
    22c2:	02 96       	adiw	r24, 0x02	; 2
    22c4:	a8 96       	adiw	r28, 0x28	; 40
    22c6:	9f af       	std	Y+63, r25	; 0x3f
    22c8:	8e af       	std	Y+62, r24	; 0x3e
    22ca:	a8 97       	sbiw	r28, 0x28	; 40
    22cc:	a5 96       	adiw	r28, 0x25	; 37
    22ce:	ae ad       	ldd	r26, Y+62	; 0x3e
    22d0:	bf ad       	ldd	r27, Y+63	; 0x3f
    22d2:	a5 97       	sbiw	r28, 0x25	; 37
    22d4:	4a 17       	cp	r20, r26
    22d6:	5b 07       	cpc	r21, r27
    22d8:	14 f2       	brlt	.-124    	; 0x225e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    22da:	08 94       	sec
    22dc:	e1 1c       	adc	r14, r1
    22de:	f1 1c       	adc	r15, r1
    22e0:	ba e0       	ldi	r27, 0x0A	; 10
    22e2:	eb 16       	cp	r14, r27
    22e4:	f1 04       	cpc	r15, r1
    22e6:	09 f0       	breq	.+2      	; 0x22ea <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    22e8:	9b cf       	rjmp	.-202    	; 0x2220 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    22ea:	80 e0       	ldi	r24, 0x00	; 0
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	2c c0       	rjmp	.+88     	; 0x2348 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    22f0:	f1 01       	movw	r30, r2
    22f2:	41 91       	ld	r20, Z+
    22f4:	51 91       	ld	r21, Z+
    22f6:	1f 01       	movw	r2, r30
    22f8:	bc 01       	movw	r22, r24
    22fa:	66 0f       	add	r22, r22
    22fc:	77 1f       	adc	r23, r23
    22fe:	d6 01       	movw	r26, r12
    2300:	ed 91       	ld	r30, X+
    2302:	fc 91       	ld	r31, X
    2304:	11 97       	sbiw	r26, 0x01	; 1
    2306:	e6 0f       	add	r30, r22
    2308:	f7 1f       	adc	r31, r23
    230a:	20 81       	ld	r18, Z
    230c:	31 81       	ldd	r19, Z+1	; 0x01
    230e:	24 17       	cp	r18, r20
    2310:	35 07       	cpc	r19, r21
    2312:	10 f4       	brcc	.+4      	; 0x2318 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    2314:	51 83       	std	Z+1, r21	; 0x01
    2316:	40 83       	st	Z, r20
    2318:	a3 96       	adiw	r28, 0x23	; 35
    231a:	ee ad       	ldd	r30, Y+62	; 0x3e
    231c:	ff ad       	ldd	r31, Y+63	; 0x3f
    231e:	a3 97       	sbiw	r28, 0x23	; 35
    2320:	41 91       	ld	r20, Z+
    2322:	51 91       	ld	r21, Z+
    2324:	a3 96       	adiw	r28, 0x23	; 35
    2326:	ff af       	std	Y+63, r31	; 0x3f
    2328:	ee af       	std	Y+62, r30	; 0x3e
    232a:	a3 97       	sbiw	r28, 0x23	; 35
    232c:	d4 01       	movw	r26, r8
    232e:	ed 91       	ld	r30, X+
    2330:	fc 91       	ld	r31, X
    2332:	11 97       	sbiw	r26, 0x01	; 1
    2334:	e6 0f       	add	r30, r22
    2336:	f7 1f       	adc	r31, r23
    2338:	20 81       	ld	r18, Z
    233a:	31 81       	ldd	r19, Z+1	; 0x01
    233c:	42 17       	cp	r20, r18
    233e:	53 07       	cpc	r21, r19
    2340:	10 f4       	brcc	.+4      	; 0x2346 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    2342:	51 83       	std	Z+1, r21	; 0x01
    2344:	40 83       	st	Z, r20
    2346:	01 96       	adiw	r24, 0x01	; 1
    2348:	f8 01       	movw	r30, r16
    234a:	20 85       	ldd	r18, Z+8	; 0x08
    234c:	30 e0       	ldi	r19, 0x00	; 0
    234e:	82 17       	cp	r24, r18
    2350:	93 07       	cpc	r25, r19
    2352:	74 f2       	brlt	.-100    	; 0x22f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    2354:	c9 59       	subi	r28, 0x99	; 153
    2356:	df 4f       	sbci	r29, 0xFF	; 255
    2358:	e2 e1       	ldi	r30, 0x12	; 18
    235a:	0c 94 9d 12 	jmp	0x253a	; 0x253a <__epilogue_restores__>

0000235e <_ZN16PololuQTRSensors9calibrateEh>:
    235e:	1f 93       	push	r17
    2360:	cf 93       	push	r28
    2362:	df 93       	push	r29
    2364:	ec 01       	movw	r28, r24
    2366:	16 2f       	mov	r17, r22
    2368:	86 2f       	mov	r24, r22
    236a:	81 50       	subi	r24, 0x01	; 1
    236c:	82 30       	cpi	r24, 0x02	; 2
    236e:	58 f4       	brcc	.+22     	; 0x2386 <_ZN16PololuQTRSensors9calibrateEh+0x28>
    2370:	ae 01       	movw	r20, r28
    2372:	4e 5f       	subi	r20, 0xFE	; 254
    2374:	5f 4f       	sbci	r21, 0xFF	; 255
    2376:	ce 01       	movw	r24, r28
    2378:	be 01       	movw	r22, r28
    237a:	21 e0       	ldi	r18, 0x01	; 1
    237c:	0e 94 a8 10 	call	0x2150	; 0x2150 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2380:	12 30       	cpi	r17, 0x02	; 2
    2382:	19 f0       	breq	.+6      	; 0x238a <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    2384:	0c c0       	rjmp	.+24     	; 0x239e <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2386:	66 23       	and	r22, r22
    2388:	51 f4       	brne	.+20     	; 0x239e <_ZN16PololuQTRSensors9calibrateEh+0x40>
    238a:	be 01       	movw	r22, r28
    238c:	6c 5f       	subi	r22, 0xFC	; 252
    238e:	7f 4f       	sbci	r23, 0xFF	; 255
    2390:	ae 01       	movw	r20, r28
    2392:	4a 5f       	subi	r20, 0xFA	; 250
    2394:	5f 4f       	sbci	r21, 0xFF	; 255
    2396:	ce 01       	movw	r24, r28
    2398:	20 e0       	ldi	r18, 0x00	; 0
    239a:	0e 94 a8 10 	call	0x2150	; 0x2150 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    239e:	df 91       	pop	r29
    23a0:	cf 91       	pop	r28
    23a2:	1f 91       	pop	r17
    23a4:	08 95       	ret

000023a6 <_ZN16PololuQTRSensorsD1Ev>:
    23a6:	cf 93       	push	r28
    23a8:	df 93       	push	r29
    23aa:	ec 01       	movw	r28, r24
    23ac:	8a 81       	ldd	r24, Y+2	; 0x02
    23ae:	9b 81       	ldd	r25, Y+3	; 0x03
    23b0:	00 97       	sbiw	r24, 0x00	; 0
    23b2:	11 f0       	breq	.+4      	; 0x23b8 <_ZN16PololuQTRSensorsD1Ev+0x12>
    23b4:	0e 94 65 13 	call	0x26ca	; 0x26ca <free>
    23b8:	8e 81       	ldd	r24, Y+6	; 0x06
    23ba:	9f 81       	ldd	r25, Y+7	; 0x07
    23bc:	00 97       	sbiw	r24, 0x00	; 0
    23be:	11 f0       	breq	.+4      	; 0x23c4 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    23c0:	0e 94 65 13 	call	0x26ca	; 0x26ca <free>
    23c4:	88 81       	ld	r24, Y
    23c6:	99 81       	ldd	r25, Y+1	; 0x01
    23c8:	00 97       	sbiw	r24, 0x00	; 0
    23ca:	11 f0       	breq	.+4      	; 0x23d0 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    23cc:	0e 94 65 13 	call	0x26ca	; 0x26ca <free>
    23d0:	8c 81       	ldd	r24, Y+4	; 0x04
    23d2:	9d 81       	ldd	r25, Y+5	; 0x05
    23d4:	00 97       	sbiw	r24, 0x00	; 0
    23d6:	11 f0       	breq	.+4      	; 0x23dc <_ZN16PololuQTRSensorsD1Ev+0x36>
    23d8:	0e 94 65 13 	call	0x26ca	; 0x26ca <free>
    23dc:	df 91       	pop	r29
    23de:	cf 91       	pop	r28
    23e0:	08 95       	ret

000023e2 <__mulsi3>:
    23e2:	db 01       	movw	r26, r22
    23e4:	8f 93       	push	r24
    23e6:	9f 93       	push	r25
    23e8:	0e 94 76 12 	call	0x24ec	; 0x24ec <__muluhisi3>
    23ec:	bf 91       	pop	r27
    23ee:	af 91       	pop	r26
    23f0:	a2 9f       	mul	r26, r18
    23f2:	80 0d       	add	r24, r0
    23f4:	91 1d       	adc	r25, r1
    23f6:	a3 9f       	mul	r26, r19
    23f8:	90 0d       	add	r25, r0
    23fa:	b2 9f       	mul	r27, r18
    23fc:	90 0d       	add	r25, r0
    23fe:	11 24       	eor	r1, r1
    2400:	08 95       	ret

00002402 <__udivmodqi4>:
    2402:	99 1b       	sub	r25, r25
    2404:	79 e0       	ldi	r23, 0x09	; 9
    2406:	04 c0       	rjmp	.+8      	; 0x2410 <__udivmodqi4_ep>

00002408 <__udivmodqi4_loop>:
    2408:	99 1f       	adc	r25, r25
    240a:	96 17       	cp	r25, r22
    240c:	08 f0       	brcs	.+2      	; 0x2410 <__udivmodqi4_ep>
    240e:	96 1b       	sub	r25, r22

00002410 <__udivmodqi4_ep>:
    2410:	88 1f       	adc	r24, r24
    2412:	7a 95       	dec	r23
    2414:	c9 f7       	brne	.-14     	; 0x2408 <__udivmodqi4_loop>
    2416:	80 95       	com	r24
    2418:	08 95       	ret

0000241a <__udivmodhi4>:
    241a:	aa 1b       	sub	r26, r26
    241c:	bb 1b       	sub	r27, r27
    241e:	51 e1       	ldi	r21, 0x11	; 17
    2420:	07 c0       	rjmp	.+14     	; 0x2430 <__udivmodhi4_ep>

00002422 <__udivmodhi4_loop>:
    2422:	aa 1f       	adc	r26, r26
    2424:	bb 1f       	adc	r27, r27
    2426:	a6 17       	cp	r26, r22
    2428:	b7 07       	cpc	r27, r23
    242a:	10 f0       	brcs	.+4      	; 0x2430 <__udivmodhi4_ep>
    242c:	a6 1b       	sub	r26, r22
    242e:	b7 0b       	sbc	r27, r23

00002430 <__udivmodhi4_ep>:
    2430:	88 1f       	adc	r24, r24
    2432:	99 1f       	adc	r25, r25
    2434:	5a 95       	dec	r21
    2436:	a9 f7       	brne	.-22     	; 0x2422 <__udivmodhi4_loop>
    2438:	80 95       	com	r24
    243a:	90 95       	com	r25
    243c:	bc 01       	movw	r22, r24
    243e:	cd 01       	movw	r24, r26
    2440:	08 95       	ret

00002442 <__divmodhi4>:
    2442:	97 fb       	bst	r25, 7
    2444:	07 2e       	mov	r0, r23
    2446:	16 f4       	brtc	.+4      	; 0x244c <__divmodhi4+0xa>
    2448:	00 94       	com	r0
    244a:	07 d0       	rcall	.+14     	; 0x245a <__divmodhi4_neg1>
    244c:	77 fd       	sbrc	r23, 7
    244e:	09 d0       	rcall	.+18     	; 0x2462 <__divmodhi4_neg2>
    2450:	0e 94 0d 12 	call	0x241a	; 0x241a <__udivmodhi4>
    2454:	07 fc       	sbrc	r0, 7
    2456:	05 d0       	rcall	.+10     	; 0x2462 <__divmodhi4_neg2>
    2458:	3e f4       	brtc	.+14     	; 0x2468 <__divmodhi4_exit>

0000245a <__divmodhi4_neg1>:
    245a:	90 95       	com	r25
    245c:	81 95       	neg	r24
    245e:	9f 4f       	sbci	r25, 0xFF	; 255
    2460:	08 95       	ret

00002462 <__divmodhi4_neg2>:
    2462:	70 95       	com	r23
    2464:	61 95       	neg	r22
    2466:	7f 4f       	sbci	r23, 0xFF	; 255

00002468 <__divmodhi4_exit>:
    2468:	08 95       	ret

0000246a <__udivmodsi4>:
    246a:	a1 e2       	ldi	r26, 0x21	; 33
    246c:	1a 2e       	mov	r1, r26
    246e:	aa 1b       	sub	r26, r26
    2470:	bb 1b       	sub	r27, r27
    2472:	fd 01       	movw	r30, r26
    2474:	0d c0       	rjmp	.+26     	; 0x2490 <__udivmodsi4_ep>

00002476 <__udivmodsi4_loop>:
    2476:	aa 1f       	adc	r26, r26
    2478:	bb 1f       	adc	r27, r27
    247a:	ee 1f       	adc	r30, r30
    247c:	ff 1f       	adc	r31, r31
    247e:	a2 17       	cp	r26, r18
    2480:	b3 07       	cpc	r27, r19
    2482:	e4 07       	cpc	r30, r20
    2484:	f5 07       	cpc	r31, r21
    2486:	20 f0       	brcs	.+8      	; 0x2490 <__udivmodsi4_ep>
    2488:	a2 1b       	sub	r26, r18
    248a:	b3 0b       	sbc	r27, r19
    248c:	e4 0b       	sbc	r30, r20
    248e:	f5 0b       	sbc	r31, r21

00002490 <__udivmodsi4_ep>:
    2490:	66 1f       	adc	r22, r22
    2492:	77 1f       	adc	r23, r23
    2494:	88 1f       	adc	r24, r24
    2496:	99 1f       	adc	r25, r25
    2498:	1a 94       	dec	r1
    249a:	69 f7       	brne	.-38     	; 0x2476 <__udivmodsi4_loop>
    249c:	60 95       	com	r22
    249e:	70 95       	com	r23
    24a0:	80 95       	com	r24
    24a2:	90 95       	com	r25
    24a4:	9b 01       	movw	r18, r22
    24a6:	ac 01       	movw	r20, r24
    24a8:	bd 01       	movw	r22, r26
    24aa:	cf 01       	movw	r24, r30
    24ac:	08 95       	ret

000024ae <__divmodsi4>:
    24ae:	05 2e       	mov	r0, r21
    24b0:	97 fb       	bst	r25, 7
    24b2:	1e f4       	brtc	.+6      	; 0x24ba <__divmodsi4+0xc>
    24b4:	00 94       	com	r0
    24b6:	0e 94 6e 12 	call	0x24dc	; 0x24dc <__negsi2>
    24ba:	57 fd       	sbrc	r21, 7
    24bc:	07 d0       	rcall	.+14     	; 0x24cc <__divmodsi4_neg2>
    24be:	0e 94 35 12 	call	0x246a	; 0x246a <__udivmodsi4>
    24c2:	07 fc       	sbrc	r0, 7
    24c4:	03 d0       	rcall	.+6      	; 0x24cc <__divmodsi4_neg2>
    24c6:	4e f4       	brtc	.+18     	; 0x24da <__divmodsi4_exit>
    24c8:	0c 94 6e 12 	jmp	0x24dc	; 0x24dc <__negsi2>

000024cc <__divmodsi4_neg2>:
    24cc:	50 95       	com	r21
    24ce:	40 95       	com	r20
    24d0:	30 95       	com	r19
    24d2:	21 95       	neg	r18
    24d4:	3f 4f       	sbci	r19, 0xFF	; 255
    24d6:	4f 4f       	sbci	r20, 0xFF	; 255
    24d8:	5f 4f       	sbci	r21, 0xFF	; 255

000024da <__divmodsi4_exit>:
    24da:	08 95       	ret

000024dc <__negsi2>:
    24dc:	90 95       	com	r25
    24de:	80 95       	com	r24
    24e0:	70 95       	com	r23
    24e2:	61 95       	neg	r22
    24e4:	7f 4f       	sbci	r23, 0xFF	; 255
    24e6:	8f 4f       	sbci	r24, 0xFF	; 255
    24e8:	9f 4f       	sbci	r25, 0xFF	; 255
    24ea:	08 95       	ret

000024ec <__muluhisi3>:
    24ec:	0e 94 be 12 	call	0x257c	; 0x257c <__umulhisi3>
    24f0:	a5 9f       	mul	r26, r21
    24f2:	90 0d       	add	r25, r0
    24f4:	b4 9f       	mul	r27, r20
    24f6:	90 0d       	add	r25, r0
    24f8:	a4 9f       	mul	r26, r20
    24fa:	80 0d       	add	r24, r0
    24fc:	91 1d       	adc	r25, r1
    24fe:	11 24       	eor	r1, r1
    2500:	08 95       	ret

00002502 <__prologue_saves__>:
    2502:	2f 92       	push	r2
    2504:	3f 92       	push	r3
    2506:	4f 92       	push	r4
    2508:	5f 92       	push	r5
    250a:	6f 92       	push	r6
    250c:	7f 92       	push	r7
    250e:	8f 92       	push	r8
    2510:	9f 92       	push	r9
    2512:	af 92       	push	r10
    2514:	bf 92       	push	r11
    2516:	cf 92       	push	r12
    2518:	df 92       	push	r13
    251a:	ef 92       	push	r14
    251c:	ff 92       	push	r15
    251e:	0f 93       	push	r16
    2520:	1f 93       	push	r17
    2522:	cf 93       	push	r28
    2524:	df 93       	push	r29
    2526:	cd b7       	in	r28, 0x3d	; 61
    2528:	de b7       	in	r29, 0x3e	; 62
    252a:	ca 1b       	sub	r28, r26
    252c:	db 0b       	sbc	r29, r27
    252e:	0f b6       	in	r0, 0x3f	; 63
    2530:	f8 94       	cli
    2532:	de bf       	out	0x3e, r29	; 62
    2534:	0f be       	out	0x3f, r0	; 63
    2536:	cd bf       	out	0x3d, r28	; 61
    2538:	09 94       	ijmp

0000253a <__epilogue_restores__>:
    253a:	2a 88       	ldd	r2, Y+18	; 0x12
    253c:	39 88       	ldd	r3, Y+17	; 0x11
    253e:	48 88       	ldd	r4, Y+16	; 0x10
    2540:	5f 84       	ldd	r5, Y+15	; 0x0f
    2542:	6e 84       	ldd	r6, Y+14	; 0x0e
    2544:	7d 84       	ldd	r7, Y+13	; 0x0d
    2546:	8c 84       	ldd	r8, Y+12	; 0x0c
    2548:	9b 84       	ldd	r9, Y+11	; 0x0b
    254a:	aa 84       	ldd	r10, Y+10	; 0x0a
    254c:	b9 84       	ldd	r11, Y+9	; 0x09
    254e:	c8 84       	ldd	r12, Y+8	; 0x08
    2550:	df 80       	ldd	r13, Y+7	; 0x07
    2552:	ee 80       	ldd	r14, Y+6	; 0x06
    2554:	fd 80       	ldd	r15, Y+5	; 0x05
    2556:	0c 81       	ldd	r16, Y+4	; 0x04
    2558:	1b 81       	ldd	r17, Y+3	; 0x03
    255a:	aa 81       	ldd	r26, Y+2	; 0x02
    255c:	b9 81       	ldd	r27, Y+1	; 0x01
    255e:	ce 0f       	add	r28, r30
    2560:	d1 1d       	adc	r29, r1
    2562:	0f b6       	in	r0, 0x3f	; 63
    2564:	f8 94       	cli
    2566:	de bf       	out	0x3e, r29	; 62
    2568:	0f be       	out	0x3f, r0	; 63
    256a:	cd bf       	out	0x3d, r28	; 61
    256c:	ed 01       	movw	r28, r26
    256e:	08 95       	ret

00002570 <__tablejump2__>:
    2570:	ee 0f       	add	r30, r30
    2572:	ff 1f       	adc	r31, r31

00002574 <__tablejump__>:
    2574:	05 90       	lpm	r0, Z+
    2576:	f4 91       	lpm	r31, Z
    2578:	e0 2d       	mov	r30, r0
    257a:	09 94       	ijmp

0000257c <__umulhisi3>:
    257c:	a2 9f       	mul	r26, r18
    257e:	b0 01       	movw	r22, r0
    2580:	b3 9f       	mul	r27, r19
    2582:	c0 01       	movw	r24, r0
    2584:	a3 9f       	mul	r26, r19
    2586:	70 0d       	add	r23, r0
    2588:	81 1d       	adc	r24, r1
    258a:	11 24       	eor	r1, r1
    258c:	91 1d       	adc	r25, r1
    258e:	b2 9f       	mul	r27, r18
    2590:	70 0d       	add	r23, r0
    2592:	81 1d       	adc	r24, r1
    2594:	11 24       	eor	r1, r1
    2596:	91 1d       	adc	r25, r1
    2598:	08 95       	ret

0000259a <malloc>:
    259a:	cf 93       	push	r28
    259c:	df 93       	push	r29
    259e:	82 30       	cpi	r24, 0x02	; 2
    25a0:	91 05       	cpc	r25, r1
    25a2:	10 f4       	brcc	.+4      	; 0x25a8 <malloc+0xe>
    25a4:	82 e0       	ldi	r24, 0x02	; 2
    25a6:	90 e0       	ldi	r25, 0x00	; 0
    25a8:	e0 91 bf 01 	lds	r30, 0x01BF
    25ac:	f0 91 c0 01 	lds	r31, 0x01C0
    25b0:	20 e0       	ldi	r18, 0x00	; 0
    25b2:	30 e0       	ldi	r19, 0x00	; 0
    25b4:	a0 e0       	ldi	r26, 0x00	; 0
    25b6:	b0 e0       	ldi	r27, 0x00	; 0
    25b8:	30 97       	sbiw	r30, 0x00	; 0
    25ba:	39 f1       	breq	.+78     	; 0x260a <malloc+0x70>
    25bc:	40 81       	ld	r20, Z
    25be:	51 81       	ldd	r21, Z+1	; 0x01
    25c0:	48 17       	cp	r20, r24
    25c2:	59 07       	cpc	r21, r25
    25c4:	b8 f0       	brcs	.+46     	; 0x25f4 <malloc+0x5a>
    25c6:	48 17       	cp	r20, r24
    25c8:	59 07       	cpc	r21, r25
    25ca:	71 f4       	brne	.+28     	; 0x25e8 <malloc+0x4e>
    25cc:	82 81       	ldd	r24, Z+2	; 0x02
    25ce:	93 81       	ldd	r25, Z+3	; 0x03
    25d0:	10 97       	sbiw	r26, 0x00	; 0
    25d2:	29 f0       	breq	.+10     	; 0x25de <malloc+0x44>
    25d4:	13 96       	adiw	r26, 0x03	; 3
    25d6:	9c 93       	st	X, r25
    25d8:	8e 93       	st	-X, r24
    25da:	12 97       	sbiw	r26, 0x02	; 2
    25dc:	2c c0       	rjmp	.+88     	; 0x2636 <malloc+0x9c>
    25de:	90 93 c0 01 	sts	0x01C0, r25
    25e2:	80 93 bf 01 	sts	0x01BF, r24
    25e6:	27 c0       	rjmp	.+78     	; 0x2636 <malloc+0x9c>
    25e8:	21 15       	cp	r18, r1
    25ea:	31 05       	cpc	r19, r1
    25ec:	31 f0       	breq	.+12     	; 0x25fa <malloc+0x60>
    25ee:	42 17       	cp	r20, r18
    25f0:	53 07       	cpc	r21, r19
    25f2:	18 f0       	brcs	.+6      	; 0x25fa <malloc+0x60>
    25f4:	a9 01       	movw	r20, r18
    25f6:	db 01       	movw	r26, r22
    25f8:	01 c0       	rjmp	.+2      	; 0x25fc <malloc+0x62>
    25fa:	ef 01       	movw	r28, r30
    25fc:	9a 01       	movw	r18, r20
    25fe:	bd 01       	movw	r22, r26
    2600:	df 01       	movw	r26, r30
    2602:	02 80       	ldd	r0, Z+2	; 0x02
    2604:	f3 81       	ldd	r31, Z+3	; 0x03
    2606:	e0 2d       	mov	r30, r0
    2608:	d7 cf       	rjmp	.-82     	; 0x25b8 <malloc+0x1e>
    260a:	21 15       	cp	r18, r1
    260c:	31 05       	cpc	r19, r1
    260e:	f9 f0       	breq	.+62     	; 0x264e <malloc+0xb4>
    2610:	28 1b       	sub	r18, r24
    2612:	39 0b       	sbc	r19, r25
    2614:	24 30       	cpi	r18, 0x04	; 4
    2616:	31 05       	cpc	r19, r1
    2618:	80 f4       	brcc	.+32     	; 0x263a <malloc+0xa0>
    261a:	8a 81       	ldd	r24, Y+2	; 0x02
    261c:	9b 81       	ldd	r25, Y+3	; 0x03
    261e:	61 15       	cp	r22, r1
    2620:	71 05       	cpc	r23, r1
    2622:	21 f0       	breq	.+8      	; 0x262c <malloc+0x92>
    2624:	fb 01       	movw	r30, r22
    2626:	93 83       	std	Z+3, r25	; 0x03
    2628:	82 83       	std	Z+2, r24	; 0x02
    262a:	04 c0       	rjmp	.+8      	; 0x2634 <malloc+0x9a>
    262c:	90 93 c0 01 	sts	0x01C0, r25
    2630:	80 93 bf 01 	sts	0x01BF, r24
    2634:	fe 01       	movw	r30, r28
    2636:	32 96       	adiw	r30, 0x02	; 2
    2638:	44 c0       	rjmp	.+136    	; 0x26c2 <malloc+0x128>
    263a:	fe 01       	movw	r30, r28
    263c:	e2 0f       	add	r30, r18
    263e:	f3 1f       	adc	r31, r19
    2640:	81 93       	st	Z+, r24
    2642:	91 93       	st	Z+, r25
    2644:	22 50       	subi	r18, 0x02	; 2
    2646:	31 09       	sbc	r19, r1
    2648:	39 83       	std	Y+1, r19	; 0x01
    264a:	28 83       	st	Y, r18
    264c:	3a c0       	rjmp	.+116    	; 0x26c2 <malloc+0x128>
    264e:	20 91 bd 01 	lds	r18, 0x01BD
    2652:	30 91 be 01 	lds	r19, 0x01BE
    2656:	23 2b       	or	r18, r19
    2658:	41 f4       	brne	.+16     	; 0x266a <malloc+0xd0>
    265a:	20 91 2d 01 	lds	r18, 0x012D
    265e:	30 91 2e 01 	lds	r19, 0x012E
    2662:	30 93 be 01 	sts	0x01BE, r19
    2666:	20 93 bd 01 	sts	0x01BD, r18
    266a:	20 91 2b 01 	lds	r18, 0x012B
    266e:	30 91 2c 01 	lds	r19, 0x012C
    2672:	21 15       	cp	r18, r1
    2674:	31 05       	cpc	r19, r1
    2676:	41 f4       	brne	.+16     	; 0x2688 <malloc+0xee>
    2678:	2d b7       	in	r18, 0x3d	; 61
    267a:	3e b7       	in	r19, 0x3e	; 62
    267c:	40 91 2f 01 	lds	r20, 0x012F
    2680:	50 91 30 01 	lds	r21, 0x0130
    2684:	24 1b       	sub	r18, r20
    2686:	35 0b       	sbc	r19, r21
    2688:	e0 91 bd 01 	lds	r30, 0x01BD
    268c:	f0 91 be 01 	lds	r31, 0x01BE
    2690:	e2 17       	cp	r30, r18
    2692:	f3 07       	cpc	r31, r19
    2694:	a0 f4       	brcc	.+40     	; 0x26be <malloc+0x124>
    2696:	2e 1b       	sub	r18, r30
    2698:	3f 0b       	sbc	r19, r31
    269a:	28 17       	cp	r18, r24
    269c:	39 07       	cpc	r19, r25
    269e:	78 f0       	brcs	.+30     	; 0x26be <malloc+0x124>
    26a0:	ac 01       	movw	r20, r24
    26a2:	4e 5f       	subi	r20, 0xFE	; 254
    26a4:	5f 4f       	sbci	r21, 0xFF	; 255
    26a6:	24 17       	cp	r18, r20
    26a8:	35 07       	cpc	r19, r21
    26aa:	48 f0       	brcs	.+18     	; 0x26be <malloc+0x124>
    26ac:	4e 0f       	add	r20, r30
    26ae:	5f 1f       	adc	r21, r31
    26b0:	50 93 be 01 	sts	0x01BE, r21
    26b4:	40 93 bd 01 	sts	0x01BD, r20
    26b8:	81 93       	st	Z+, r24
    26ba:	91 93       	st	Z+, r25
    26bc:	02 c0       	rjmp	.+4      	; 0x26c2 <malloc+0x128>
    26be:	e0 e0       	ldi	r30, 0x00	; 0
    26c0:	f0 e0       	ldi	r31, 0x00	; 0
    26c2:	cf 01       	movw	r24, r30
    26c4:	df 91       	pop	r29
    26c6:	cf 91       	pop	r28
    26c8:	08 95       	ret

000026ca <free>:
    26ca:	cf 93       	push	r28
    26cc:	df 93       	push	r29
    26ce:	00 97       	sbiw	r24, 0x00	; 0
    26d0:	09 f4       	brne	.+2      	; 0x26d4 <free+0xa>
    26d2:	87 c0       	rjmp	.+270    	; 0x27e2 <free+0x118>
    26d4:	fc 01       	movw	r30, r24
    26d6:	32 97       	sbiw	r30, 0x02	; 2
    26d8:	13 82       	std	Z+3, r1	; 0x03
    26da:	12 82       	std	Z+2, r1	; 0x02
    26dc:	c0 91 bf 01 	lds	r28, 0x01BF
    26e0:	d0 91 c0 01 	lds	r29, 0x01C0
    26e4:	20 97       	sbiw	r28, 0x00	; 0
    26e6:	81 f4       	brne	.+32     	; 0x2708 <free+0x3e>
    26e8:	20 81       	ld	r18, Z
    26ea:	31 81       	ldd	r19, Z+1	; 0x01
    26ec:	28 0f       	add	r18, r24
    26ee:	39 1f       	adc	r19, r25
    26f0:	80 91 bd 01 	lds	r24, 0x01BD
    26f4:	90 91 be 01 	lds	r25, 0x01BE
    26f8:	82 17       	cp	r24, r18
    26fa:	93 07       	cpc	r25, r19
    26fc:	79 f5       	brne	.+94     	; 0x275c <free+0x92>
    26fe:	f0 93 be 01 	sts	0x01BE, r31
    2702:	e0 93 bd 01 	sts	0x01BD, r30
    2706:	6d c0       	rjmp	.+218    	; 0x27e2 <free+0x118>
    2708:	de 01       	movw	r26, r28
    270a:	20 e0       	ldi	r18, 0x00	; 0
    270c:	30 e0       	ldi	r19, 0x00	; 0
    270e:	ae 17       	cp	r26, r30
    2710:	bf 07       	cpc	r27, r31
    2712:	50 f4       	brcc	.+20     	; 0x2728 <free+0x5e>
    2714:	12 96       	adiw	r26, 0x02	; 2
    2716:	4d 91       	ld	r20, X+
    2718:	5c 91       	ld	r21, X
    271a:	13 97       	sbiw	r26, 0x03	; 3
    271c:	9d 01       	movw	r18, r26
    271e:	41 15       	cp	r20, r1
    2720:	51 05       	cpc	r21, r1
    2722:	09 f1       	breq	.+66     	; 0x2766 <free+0x9c>
    2724:	da 01       	movw	r26, r20
    2726:	f3 cf       	rjmp	.-26     	; 0x270e <free+0x44>
    2728:	b3 83       	std	Z+3, r27	; 0x03
    272a:	a2 83       	std	Z+2, r26	; 0x02
    272c:	40 81       	ld	r20, Z
    272e:	51 81       	ldd	r21, Z+1	; 0x01
    2730:	84 0f       	add	r24, r20
    2732:	95 1f       	adc	r25, r21
    2734:	8a 17       	cp	r24, r26
    2736:	9b 07       	cpc	r25, r27
    2738:	71 f4       	brne	.+28     	; 0x2756 <free+0x8c>
    273a:	8d 91       	ld	r24, X+
    273c:	9c 91       	ld	r25, X
    273e:	11 97       	sbiw	r26, 0x01	; 1
    2740:	84 0f       	add	r24, r20
    2742:	95 1f       	adc	r25, r21
    2744:	02 96       	adiw	r24, 0x02	; 2
    2746:	91 83       	std	Z+1, r25	; 0x01
    2748:	80 83       	st	Z, r24
    274a:	12 96       	adiw	r26, 0x02	; 2
    274c:	8d 91       	ld	r24, X+
    274e:	9c 91       	ld	r25, X
    2750:	13 97       	sbiw	r26, 0x03	; 3
    2752:	93 83       	std	Z+3, r25	; 0x03
    2754:	82 83       	std	Z+2, r24	; 0x02
    2756:	21 15       	cp	r18, r1
    2758:	31 05       	cpc	r19, r1
    275a:	29 f4       	brne	.+10     	; 0x2766 <free+0x9c>
    275c:	f0 93 c0 01 	sts	0x01C0, r31
    2760:	e0 93 bf 01 	sts	0x01BF, r30
    2764:	3e c0       	rjmp	.+124    	; 0x27e2 <free+0x118>
    2766:	d9 01       	movw	r26, r18
    2768:	13 96       	adiw	r26, 0x03	; 3
    276a:	fc 93       	st	X, r31
    276c:	ee 93       	st	-X, r30
    276e:	12 97       	sbiw	r26, 0x02	; 2
    2770:	4d 91       	ld	r20, X+
    2772:	5d 91       	ld	r21, X+
    2774:	a4 0f       	add	r26, r20
    2776:	b5 1f       	adc	r27, r21
    2778:	ea 17       	cp	r30, r26
    277a:	fb 07       	cpc	r31, r27
    277c:	79 f4       	brne	.+30     	; 0x279c <free+0xd2>
    277e:	80 81       	ld	r24, Z
    2780:	91 81       	ldd	r25, Z+1	; 0x01
    2782:	84 0f       	add	r24, r20
    2784:	95 1f       	adc	r25, r21
    2786:	02 96       	adiw	r24, 0x02	; 2
    2788:	d9 01       	movw	r26, r18
    278a:	11 96       	adiw	r26, 0x01	; 1
    278c:	9c 93       	st	X, r25
    278e:	8e 93       	st	-X, r24
    2790:	82 81       	ldd	r24, Z+2	; 0x02
    2792:	93 81       	ldd	r25, Z+3	; 0x03
    2794:	13 96       	adiw	r26, 0x03	; 3
    2796:	9c 93       	st	X, r25
    2798:	8e 93       	st	-X, r24
    279a:	12 97       	sbiw	r26, 0x02	; 2
    279c:	e0 e0       	ldi	r30, 0x00	; 0
    279e:	f0 e0       	ldi	r31, 0x00	; 0
    27a0:	8a 81       	ldd	r24, Y+2	; 0x02
    27a2:	9b 81       	ldd	r25, Y+3	; 0x03
    27a4:	00 97       	sbiw	r24, 0x00	; 0
    27a6:	19 f0       	breq	.+6      	; 0x27ae <free+0xe4>
    27a8:	fe 01       	movw	r30, r28
    27aa:	ec 01       	movw	r28, r24
    27ac:	f9 cf       	rjmp	.-14     	; 0x27a0 <free+0xd6>
    27ae:	ce 01       	movw	r24, r28
    27b0:	02 96       	adiw	r24, 0x02	; 2
    27b2:	28 81       	ld	r18, Y
    27b4:	39 81       	ldd	r19, Y+1	; 0x01
    27b6:	82 0f       	add	r24, r18
    27b8:	93 1f       	adc	r25, r19
    27ba:	20 91 bd 01 	lds	r18, 0x01BD
    27be:	30 91 be 01 	lds	r19, 0x01BE
    27c2:	28 17       	cp	r18, r24
    27c4:	39 07       	cpc	r19, r25
    27c6:	69 f4       	brne	.+26     	; 0x27e2 <free+0x118>
    27c8:	30 97       	sbiw	r30, 0x00	; 0
    27ca:	29 f4       	brne	.+10     	; 0x27d6 <free+0x10c>
    27cc:	10 92 c0 01 	sts	0x01C0, r1
    27d0:	10 92 bf 01 	sts	0x01BF, r1
    27d4:	02 c0       	rjmp	.+4      	; 0x27da <free+0x110>
    27d6:	13 82       	std	Z+3, r1	; 0x03
    27d8:	12 82       	std	Z+2, r1	; 0x02
    27da:	d0 93 be 01 	sts	0x01BE, r29
    27de:	c0 93 bd 01 	sts	0x01BD, r28
    27e2:	df 91       	pop	r29
    27e4:	cf 91       	pop	r28
    27e6:	08 95       	ret

000027e8 <__do_global_dtors>:
    27e8:	10 e0       	ldi	r17, 0x00	; 0
    27ea:	cc ea       	ldi	r28, 0xAC	; 172
    27ec:	d0 e0       	ldi	r29, 0x00	; 0
    27ee:	04 c0       	rjmp	.+8      	; 0x27f8 <__do_global_dtors+0x10>
    27f0:	fe 01       	movw	r30, r28
    27f2:	0e 94 ba 12 	call	0x2574	; 0x2574 <__tablejump__>
    27f6:	22 96       	adiw	r28, 0x02	; 2
    27f8:	ce 3a       	cpi	r28, 0xAE	; 174
    27fa:	d1 07       	cpc	r29, r17
    27fc:	c9 f7       	brne	.-14     	; 0x27f0 <__do_global_dtors+0x8>
    27fe:	f8 94       	cli

00002800 <__stop_program>:
    2800:	ff cf       	rjmp	.-2      	; 0x2800 <__stop_program>
