
3pi-mazesolver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  0000277a  0000280e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000277a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000077  0080014a  0080014a  00002858  2**0
                  ALLOC
  3 .stab         00006624  00000000  00000000  00002858  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008bbc  00000000  00000000  00008e7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00011a38  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e8  00000000  00000000  00011a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000014f4  00000000  00000000  00011b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007af  00000000  00000000  00013044  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f92  00000000  00000000  000137f3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000220  00000000  00000000  00014788  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000004e6  00000000  00000000  000149a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000009bb  00000000  00000000  00014e8e  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000c8  00000000  00000000  00015849  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 00 	jmp	0xae	; 0xae <__dtors_end>
       4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      24:	0c 94 b7 0b 	jmp	0x176e	; 0x176e <__vector_9>
      28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      34:	0c 94 02 08 	jmp	0x1004	; 0x1004 <__vector_13>
      38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <go>:
      76:	4c 31 36 20 63 64 65 67 72 65 67 34 00              L16 cdegreg4.

00000083 <welcome>:
      83:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000008d <demo_name_line2>:
      8d:	73 6f 6c 76 65 72 00                                solver.

00000094 <demo_name_line1>:
      94:	4d 61 7a 65 00                                      Maze.

00000099 <welcome_line2>:
      99:	33 f7 20 52 6f 62 6f 74 00                          3. Robot.

000000a2 <welcome_line1>:
      a2:	20 50 6f 6c 6f 6c 75 00                              Pololu.

000000aa <__ctors_start>:
      aa:	80 0c       	add	r8, r0

000000ac <__ctors_end>:
      ac:	81 0c       	add	r8, r1

000000ae <__dtors_end>:
      ae:	11 24       	eor	r1, r1
      b0:	1f be       	out	0x3f, r1	; 63
      b2:	cf ef       	ldi	r28, 0xFF	; 255
      b4:	d8 e0       	ldi	r29, 0x08	; 8
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_copy_data>:
      ba:	11 e0       	ldi	r17, 0x01	; 1
      bc:	a0 e0       	ldi	r26, 0x00	; 0
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	ea e7       	ldi	r30, 0x7A	; 122
      c2:	f7 e2       	ldi	r31, 0x27	; 39
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x10>
      c6:	05 90       	lpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	aa 34       	cpi	r26, 0x4A	; 74
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0xc>

000000d0 <__do_clear_bss>:
      d0:	21 e0       	ldi	r18, 0x01	; 1
      d2:	aa e4       	ldi	r26, 0x4A	; 74
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a1 3c       	cpi	r26, 0xC1	; 193
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>

000000e0 <__do_global_ctors>:
      e0:	10 e0       	ldi	r17, 0x00	; 0
      e2:	cc ea       	ldi	r28, 0xAC	; 172
      e4:	d0 e0       	ldi	r29, 0x00	; 0
      e6:	04 c0       	rjmp	.+8      	; 0xf0 <__do_global_ctors+0x10>
      e8:	22 97       	sbiw	r28, 0x02	; 2
      ea:	fe 01       	movw	r30, r28
      ec:	0e 94 76 12 	call	0x24ec	; 0x24ec <__tablejump__>
      f0:	ca 3a       	cpi	r28, 0xAA	; 170
      f2:	d1 07       	cpc	r29, r17
      f4:	c9 f7       	brne	.-14     	; 0xe8 <__do_global_ctors+0x8>
      f6:	0e 94 44 02 	call	0x488	; 0x488 <main>
      fa:	0c 94 b0 13 	jmp	0x2760	; 0x2760 <__do_global_dtors>

000000fe <__bad_interrupt>:
      fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <load_custom_characters>:

// This function loads custom characters into the LCD.  Up to 8
// characters can be loaded; we use them for 7 levels of a bar graph.
void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     102:	60 e0       	ldi	r22, 0x00	; 0
     104:	88 e6       	ldi	r24, 0x68	; 104
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     10c:	61 e0       	ldi	r22, 0x01	; 1
     10e:	89 e6       	ldi	r24, 0x69	; 105
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     116:	62 e0       	ldi	r22, 0x02	; 2
     118:	8a e6       	ldi	r24, 0x6A	; 106
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     120:	63 e0       	ldi	r22, 0x03	; 3
     122:	8b e6       	ldi	r24, 0x6B	; 107
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     12a:	64 e0       	ldi	r22, 0x04	; 4
     12c:	8c e6       	ldi	r24, 0x6C	; 108
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     134:	65 e0       	ldi	r22, 0x05	; 5
     136:	8d e6       	ldi	r24, 0x6D	; 109
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     13e:	66 e0       	ldi	r22, 0x06	; 6
     140:	8e e6       	ldi	r24, 0x6E	; 110
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	0e 94 37 09 	call	0x126e	; 0x126e <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     148:	0c 94 b7 09 	jmp	0x136e	; 0x136e <clear>

0000014c <display_readings>:
}

// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
     14c:	cf 92       	push	r12
     14e:	df 92       	push	r13
     150:	ef 92       	push	r14
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	cd b7       	in	r28, 0x3d	; 61
     15e:	de b7       	in	r29, 0x3e	; 62
     160:	2a 97       	sbiw	r28, 0x0a	; 10
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	de bf       	out	0x3e, r29	; 62
     168:	0f be       	out	0x3f, r0	; 63
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	8c 01       	movw	r16, r24
	unsigned char i;

	for(i=0;i<5;i++) {
     16e:	d1 2c       	mov	r13, r1
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     170:	8a e0       	ldi	r24, 0x0A	; 10
     172:	c8 2e       	mov	r12, r24

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     174:	95 e6       	ldi	r25, 0x65	; 101
     176:	e9 2e       	mov	r14, r25
     178:	f1 2c       	mov	r15, r1
	for(i=0;i<5;i++) {
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     17a:	e1 e3       	ldi	r30, 0x31	; 49
     17c:	f1 e0       	ldi	r31, 0x01	; 1
     17e:	de 01       	movw	r26, r28
     180:	11 96       	adiw	r26, 0x01	; 1
     182:	8c 2d       	mov	r24, r12
     184:	01 90       	ld	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	8a 95       	dec	r24
     18a:	e1 f7       	brne	.-8      	; 0x184 <display_readings+0x38>

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     18c:	f8 01       	movw	r30, r16
     18e:	81 91       	ld	r24, Z+
     190:	91 91       	ld	r25, Z+
     192:	8f 01       	movw	r16, r30
     194:	b7 01       	movw	r22, r14
     196:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	8c 0f       	add	r24, r28
     1a0:	9d 1f       	adc	r25, r29
     1a2:	68 0f       	add	r22, r24
     1a4:	79 1f       	adc	r23, r25

		// Display the bar graph character.
		print_character(c);
     1a6:	fb 01       	movw	r30, r22
     1a8:	80 81       	ld	r24, Z
     1aa:	0e 94 3a 09 	call	0x1274	; 0x1274 <print_character>
// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;

	for(i=0;i<5;i++) {
     1ae:	d3 94       	inc	r13
     1b0:	f5 e0       	ldi	r31, 0x05	; 5
     1b2:	df 12       	cpse	r13, r31
     1b4:	e2 cf       	rjmp	.-60     	; 0x17a <display_readings+0x2e>
		char c = display_characters[calibrated_values[i]/101];

		// Display the bar graph character.
		print_character(c);
	}
}
     1b6:	2a 96       	adiw	r28, 0x0a	; 10
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	08 95       	ret

000001d4 <follow_segment>:
#include <pololu/3pi.h>

void follow_segment(int max)
{
     1d4:	2f 92       	push	r2
     1d6:	3f 92       	push	r3
     1d8:	4f 92       	push	r4
     1da:	5f 92       	push	r5
     1dc:	6f 92       	push	r6
     1de:	7f 92       	push	r7
     1e0:	8f 92       	push	r8
     1e2:	9f 92       	push	r9
     1e4:	af 92       	push	r10
     1e6:	bf 92       	push	r11
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	2a 97       	sbiw	r28, 0x0a	; 10
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
     208:	8c 01       	movw	r16, r24
	int last_proportional = 0;
	long integral=0;
     20a:	c1 2c       	mov	r12, r1
     20c:	d1 2c       	mov	r13, r1
     20e:	76 01       	movw	r14, r12
#include <pololu/3pi.h>

void follow_segment(int max)
{
	int last_proportional = 0;
     210:	21 2c       	mov	r2, r1
     212:	31 2c       	mov	r3, r1
		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     214:	50 e1       	ldi	r21, 0x10	; 16
     216:	45 2e       	mov	r4, r21
     218:	57 e2       	ldi	r21, 0x27	; 39
     21a:	55 2e       	mov	r5, r21
     21c:	61 2c       	mov	r6, r1
     21e:	71 2c       	mov	r7, r1

		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
     220:	88 24       	eor	r8, r8
     222:	99 24       	eor	r9, r9
     224:	88 1a       	sub	r8, r24
     226:	99 0a       	sbc	r9, r25
	long integral=0;

	while(1)
	{
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     228:	61 e0       	ldi	r22, 0x01	; 1
     22a:	ce 01       	movw	r24, r28
     22c:	01 96       	adiw	r24, 0x01	; 1
     22e:	0e 94 41 0c 	call	0x1882	; 0x1882 <read_line>

		int proportional = ((int)position) - 2000;
     232:	80 5d       	subi	r24, 0xD0	; 208
     234:	97 40       	sbci	r25, 0x07	; 7
     236:	5c 01       	movw	r10, r24

		int derivative = proportional - last_proportional;
		integral += proportional;
     238:	aa 27       	eor	r26, r26
     23a:	97 fd       	sbrc	r25, 7
     23c:	a0 95       	com	r26
     23e:	ba 2f       	mov	r27, r26
     240:	c8 0e       	add	r12, r24
     242:	d9 1e       	adc	r13, r25
     244:	ea 1e       	adc	r14, r26
     246:	fb 1e       	adc	r15, r27

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     248:	c7 01       	movw	r24, r14
     24a:	b6 01       	movw	r22, r12
     24c:	a3 01       	movw	r20, r6
     24e:	92 01       	movw	r18, r4
     250:	0e 94 13 12 	call	0x2426	; 0x2426 <__divmodsi4>
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);

		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
     254:	b5 01       	movw	r22, r10
     256:	62 19       	sub	r22, r2
     258:	73 09       	sbc	r23, r3
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     25a:	cb 01       	movw	r24, r22
     25c:	88 0f       	add	r24, r24
     25e:	99 1f       	adc	r25, r25
     260:	86 0f       	add	r24, r22
     262:	97 1f       	adc	r25, r23
     264:	97 fd       	sbrc	r25, 7
     266:	01 96       	adiw	r24, 0x01	; 1
     268:	fc 01       	movw	r30, r24
     26a:	f5 95       	asr	r31
     26c:	e7 95       	ror	r30
     26e:	e2 0f       	add	r30, r18
     270:	f3 1f       	adc	r31, r19
     272:	c5 01       	movw	r24, r10
     274:	64 e1       	ldi	r22, 0x14	; 20
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	0e 94 dd 11 	call	0x23ba	; 0x23ba <__divmodhi4>
     27c:	e6 0f       	add	r30, r22
     27e:	f7 1f       	adc	r31, r23
     280:	0e 17       	cp	r16, r30
     282:	1f 07       	cpc	r17, r31
     284:	0c f4       	brge	.+2      	; 0x288 <follow_segment+0xb4>
     286:	f8 01       	movw	r30, r16
     288:	cf 01       	movw	r24, r30
     28a:	e8 15       	cp	r30, r8
     28c:	f9 05       	cpc	r31, r9
     28e:	0c f4       	brge	.+2      	; 0x292 <follow_segment+0xbe>
     290:	c4 01       	movw	r24, r8
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
			set_motors(max+power_difference,max);
     292:	b8 01       	movw	r22, r16
		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
     294:	97 ff       	sbrs	r25, 7
     296:	03 c0       	rjmp	.+6      	; 0x29e <follow_segment+0xca>
			set_motors(max+power_difference,max);
     298:	80 0f       	add	r24, r16
     29a:	91 1f       	adc	r25, r17
     29c:	03 c0       	rjmp	.+6      	; 0x2a4 <follow_segment+0xd0>
		else
			set_motors(max,max-power_difference);
     29e:	68 1b       	sub	r22, r24
     2a0:	79 0b       	sbc	r23, r25
     2a2:	c8 01       	movw	r24, r16
     2a4:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>

		if(sensors[1] < 100 && sensors[2] < 100 && sensors[3] < 100)
     2a8:	8b 81       	ldd	r24, Y+3	; 0x03
     2aa:	9c 81       	ldd	r25, Y+4	; 0x04
     2ac:	84 36       	cpi	r24, 0x64	; 100
     2ae:	91 05       	cpc	r25, r1
     2b0:	50 f4       	brcc	.+20     	; 0x2c6 <follow_segment+0xf2>
     2b2:	8d 81       	ldd	r24, Y+5	; 0x05
     2b4:	9e 81       	ldd	r25, Y+6	; 0x06
     2b6:	84 36       	cpi	r24, 0x64	; 100
     2b8:	91 05       	cpc	r25, r1
     2ba:	28 f4       	brcc	.+10     	; 0x2c6 <follow_segment+0xf2>
     2bc:	8f 81       	ldd	r24, Y+7	; 0x07
     2be:	98 85       	ldd	r25, Y+8	; 0x08
     2c0:	84 36       	cpi	r24, 0x64	; 100
     2c2:	91 05       	cpc	r25, r1
     2c4:	60 f0       	brcs	.+24     	; 0x2de <follow_segment+0x10a>
		{
			return;
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	89 3c       	cpi	r24, 0xC9	; 201
     2cc:	91 05       	cpc	r25, r1
     2ce:	38 f4       	brcc	.+14     	; 0x2de <follow_segment+0x10a>
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	89 3c       	cpi	r24, 0xC9	; 201
     2d6:	91 05       	cpc	r25, r1
     2d8:	10 f4       	brcc	.+4      	; 0x2de <follow_segment+0x10a>
		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
     2da:	15 01       	movw	r2, r10
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
		{
			return;
		}
	}
     2dc:	a5 cf       	rjmp	.-182    	; 0x228 <follow_segment+0x54>
     2de:	2a 96       	adiw	r28, 0x0a	; 10
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	0f 91       	pop	r16
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	df 90       	pop	r13
     2f8:	cf 90       	pop	r12
     2fa:	bf 90       	pop	r11
     2fc:	af 90       	pop	r10
     2fe:	9f 90       	pop	r9
     300:	8f 90       	pop	r8
     302:	7f 90       	pop	r7
     304:	6f 90       	pop	r6
     306:	5f 90       	pop	r5
     308:	4f 90       	pop	r4
     30a:	3f 90       	pop	r3
     30c:	2f 90       	pop	r2
     30e:	08 95       	ret

00000310 <initialize>:

const char welcome[] PROGMEM = ">g32>>c32";
const char go[] PROGMEM = "L16 cdegreg4";

void initialize()
{
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	2a 97       	sbiw	r28, 0x0a	; 10
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; 
	unsigned int sensors[5]; 
	
	pololu_3pi_init(2000);
     328:	80 ed       	ldi	r24, 0xD0	; 208
     32a:	97 e0       	ldi	r25, 0x07	; 7
     32c:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <pololu_3pi_init>
	load_custom_characters();
     330:	0e 94 81 00 	call	0x102	; 0x102 <load_custom_characters>
	
	print_from_program_space(welcome_line1);
     334:	82 ea       	ldi	r24, 0xA2	; 162
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 df 09 	call	0x13be	; 0x13be <print_from_program_space>
	lcd_goto_xy(0,1);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 5f 0a 	call	0x14be	; 0x14be <lcd_goto_xy>
	print_from_program_space(welcome_line2);
     344:	89 e9       	ldi	r24, 0x99	; 153
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 df 09 	call	0x13be	; 0x13be <print_from_program_space>
	play_from_program_space(welcome);
     34c:	83 e8       	ldi	r24, 0x83	; 131
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 74 08 	call	0x10e8	; 0x10e8 <play_from_program_space>
	delay_ms(1000);
     354:	88 ee       	ldi	r24, 0xE8	; 232
     356:	93 e0       	ldi	r25, 0x03	; 3
     358:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>

	clear();
     35c:	0e 94 b7 09 	call	0x136e	; 0x136e <clear>
	print_from_program_space(demo_name_line1);
     360:	84 e9       	ldi	r24, 0x94	; 148
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 df 09 	call	0x13be	; 0x13be <print_from_program_space>
	lcd_goto_xy(0,1);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	0e 94 5f 0a 	call	0x14be	; 0x14be <lcd_goto_xy>
	print_from_program_space(demo_name_line2);
     370:	8d e8       	ldi	r24, 0x8D	; 141
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 df 09 	call	0x13be	; 0x13be <print_from_program_space>
	delay_ms(1000);
     378:	88 ee       	ldi	r24, 0xE8	; 232
     37a:	93 e0       	ldi	r25, 0x03	; 3
		print_long(bat);
		print("mV");
		lcd_goto_xy(0,1);
		print("Press B");

		delay_ms(100);
     37c:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
	print_from_program_space(demo_name_line1);
	lcd_goto_xy(0,1);
	print_from_program_space(demo_name_line2);
	delay_ms(1000);

	while(!button_is_pressed(BUTTON_B))
     380:	80 e1       	ldi	r24, 0x10	; 16
     382:	0e 94 ac 0b 	call	0x1758	; 0x1758 <button_is_pressed>
     386:	81 11       	cpse	r24, r1
     388:	1b c0       	rjmp	.+54     	; 0x3c0 <initialize+0xb0>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     38a:	0e 94 32 05 	call	0xa64	; 0xa64 <read_battery_millivolts_3pi>
     38e:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();

		clear();
     390:	0e 94 b7 09 	call	0x136e	; 0x136e <clear>
		print_long(bat);
     394:	b8 01       	movw	r22, r16
     396:	88 27       	eor	r24, r24
     398:	77 fd       	sbrc	r23, 7
     39a:	80 95       	com	r24
     39c:	98 2f       	mov	r25, r24
     39e:	0e 94 3c 0a 	call	0x1478	; 0x1478 <print_long>
		print("mV");
     3a2:	8b e3       	ldi	r24, 0x3B	; 59
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 ce 09 	call	0x139c	; 0x139c <print>
		lcd_goto_xy(0,1);
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	0e 94 5f 0a 	call	0x14be	; 0x14be <lcd_goto_xy>
		print("Press B");
     3b2:	8e e3       	ldi	r24, 0x3E	; 62
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	0e 94 ce 09 	call	0x139c	; 0x139c <print>

		delay_ms(100);
     3ba:	84 e6       	ldi	r24, 0x64	; 100
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	de cf       	rjmp	.-68     	; 0x37c <initialize+0x6c>
	}

	wait_for_button_release(BUTTON_B);
     3c0:	80 e1       	ldi	r24, 0x10	; 16
     3c2:	0e 94 98 0b 	call	0x1730	; 0x1730 <wait_for_button_release>
	delay_ms(1000);
     3c6:	88 ee       	ldi	r24, 0xE8	; 232
     3c8:	93 e0       	ldi	r25, 0x03	; 3
     3ca:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
     3ce:	0c ee       	ldi	r16, 0xEC	; 236
     3d0:	1f ef       	ldi	r17, 0xFF	; 255

	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     3d2:	08 32       	cpi	r16, 0x28	; 40
     3d4:	11 05       	cpc	r17, r1
     3d6:	28 f0       	brcs	.+10     	; 0x3e2 <initialize+0xd2>
			set_motors(40,-40);
     3d8:	68 ed       	ldi	r22, 0xD8	; 216
     3da:	7f ef       	ldi	r23, 0xFF	; 255
     3dc:	88 e2       	ldi	r24, 0x28	; 40
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <initialize+0xda>
		else
			set_motors(-40,40);
     3e2:	68 e2       	ldi	r22, 0x28	; 40
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	88 ed       	ldi	r24, 0xD8	; 216
     3e8:	9f ef       	ldi	r25, 0xFF	; 255
     3ea:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	0e 94 3b 0c 	call	0x1876	; 0x1876 <calibrate_line_sensors>
		delay_ms(20);
     3f4:	84 e1       	ldi	r24, 0x14	; 20
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     400:	0c 33       	cpi	r16, 0x3C	; 60
     402:	11 05       	cpc	r17, r1
     404:	31 f7       	brne	.-52     	; 0x3d2 <initialize+0xc2>
		else
			set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	set_motors(0,0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>

	while(!button_is_pressed(BUTTON_B))
     412:	80 e1       	ldi	r24, 0x10	; 16
     414:	0e 94 ac 0b 	call	0x1758	; 0x1758 <button_is_pressed>
     418:	81 11       	cpse	r24, r1
     41a:	1a c0       	rjmp	.+52     	; 0x450 <initialize+0x140>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	0e 94 41 0c 	call	0x1882	; 0x1882 <read_line>
     426:	8c 01       	movw	r16, r24

		clear();
     428:	0e 94 b7 09 	call	0x136e	; 0x136e <clear>
		print_long(position);
     42c:	b8 01       	movw	r22, r16
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 3c 0a 	call	0x1478	; 0x1478 <print_long>
		lcd_goto_xy(0,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 5f 0a 	call	0x14be	; 0x14be <lcd_goto_xy>
		display_readings(sensors);
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	0e 94 a6 00 	call	0x14c	; 0x14c <display_readings>

		delay_ms(100);
     446:	84 e6       	ldi	r24, 0x64	; 100
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
     44e:	e1 cf       	rjmp	.-62     	; 0x412 <initialize+0x102>
	}
	wait_for_button_release(BUTTON_B);
     450:	80 e1       	ldi	r24, 0x10	; 16
     452:	0e 94 98 0b 	call	0x1730	; 0x1730 <wait_for_button_release>

	clear();
     456:	0e 94 b7 09 	call	0x136e	; 0x136e <clear>

	print("Go!");		
     45a:	86 e4       	ldi	r24, 0x46	; 70
     45c:	91 e0       	ldi	r25, 0x01	; 1
     45e:	0e 94 ce 09 	call	0x139c	; 0x139c <print>

	play_from_program_space(go);
     462:	86 e7       	ldi	r24, 0x76	; 118
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 74 08 	call	0x10e8	; 0x10e8 <play_from_program_space>
	while(is_playing());
     46a:	0e 94 63 08 	call	0x10c6	; 0x10c6 <is_playing>
     46e:	81 11       	cpse	r24, r1
     470:	fc cf       	rjmp	.-8      	; 0x46a <initialize+0x15a>
}
     472:	2a 96       	adiw	r28, 0x0a	; 10
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <main>:


int main()
{
	initialize();//3pi initialization
     488:	0e 94 88 01 	call	0x310	; 0x310 <initialize>
	
	maze_solve(160);
     48c:	80 ea       	ldi	r24, 0xA0	; 160
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 a4 02 	call	0x548	; 0x548 <maze_solve>
     494:	ff cf       	rjmp	.-2      	; 0x494 <main+0xc>

00000496 <sensor_data>:
#include <pololu/3pi.h>
#include "follow-segment.h"
#include "turn.h"

uint8_t sensor_data(void)
{
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	2a 97       	sbiw	r28, 0x0a	; 10
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
	unsigned int sensors[5], edge_th = 400, line_th = 400;
	uint8_t sn_dta = 0x00;
	read_line(sensors,IR_EMITTERS_ON);
     4aa:	61 e0       	ldi	r22, 0x01	; 1
     4ac:	ce 01       	movw	r24, r28
     4ae:	01 96       	adiw	r24, 0x01	; 1
     4b0:	0e 94 41 0c 	call	0x1882	; 0x1882 <read_line>
	if (sensors[0] > edge_th)	sn_dta |= (1<<4);
     4b4:	89 81       	ldd	r24, Y+1	; 0x01
     4b6:	9a 81       	ldd	r25, Y+2	; 0x02
     4b8:	81 39       	cpi	r24, 0x91	; 145
     4ba:	91 40       	sbci	r25, 0x01	; 1
     4bc:	10 f0       	brcs	.+4      	; 0x4c2 <sensor_data+0x2c>
     4be:	80 e1       	ldi	r24, 0x10	; 16
     4c0:	01 c0       	rjmp	.+2      	; 0x4c4 <sensor_data+0x2e>
	else						sn_dta &= ~(1<<4);
     4c2:	80 e0       	ldi	r24, 0x00	; 0
	if (sensors[1] > line_th)	sn_dta |= (1<<3);
     4c4:	2b 81       	ldd	r18, Y+3	; 0x03
     4c6:	3c 81       	ldd	r19, Y+4	; 0x04
     4c8:	21 39       	cpi	r18, 0x91	; 145
     4ca:	31 40       	sbci	r19, 0x01	; 1
     4cc:	10 f0       	brcs	.+4      	; 0x4d2 <sensor_data+0x3c>
     4ce:	88 60       	ori	r24, 0x08	; 8
     4d0:	01 c0       	rjmp	.+2      	; 0x4d4 <sensor_data+0x3e>
	else						sn_dta &= ~(1<<3);
     4d2:	87 7f       	andi	r24, 0xF7	; 247
	if (sensors[2] > line_th)	sn_dta |= (1<<2);
     4d4:	2d 81       	ldd	r18, Y+5	; 0x05
     4d6:	3e 81       	ldd	r19, Y+6	; 0x06
     4d8:	21 39       	cpi	r18, 0x91	; 145
     4da:	31 40       	sbci	r19, 0x01	; 1
     4dc:	10 f0       	brcs	.+4      	; 0x4e2 <sensor_data+0x4c>
     4de:	84 60       	ori	r24, 0x04	; 4
     4e0:	01 c0       	rjmp	.+2      	; 0x4e4 <sensor_data+0x4e>
	else						sn_dta &= ~(1<<2);
     4e2:	8b 7f       	andi	r24, 0xFB	; 251
	if (sensors[3] > line_th)	sn_dta |= (1<<1);
     4e4:	2f 81       	ldd	r18, Y+7	; 0x07
     4e6:	38 85       	ldd	r19, Y+8	; 0x08
     4e8:	21 39       	cpi	r18, 0x91	; 145
     4ea:	31 40       	sbci	r19, 0x01	; 1
     4ec:	10 f0       	brcs	.+4      	; 0x4f2 <sensor_data+0x5c>
     4ee:	82 60       	ori	r24, 0x02	; 2
     4f0:	01 c0       	rjmp	.+2      	; 0x4f4 <sensor_data+0x5e>
	else						sn_dta &= ~(1<<1);
     4f2:	8d 7f       	andi	r24, 0xFD	; 253
	if (sensors[4] > edge_th)	sn_dta |= (1<<0);
     4f4:	29 85       	ldd	r18, Y+9	; 0x09
     4f6:	3a 85       	ldd	r19, Y+10	; 0x0a
     4f8:	21 39       	cpi	r18, 0x91	; 145
     4fa:	31 40       	sbci	r19, 0x01	; 1
     4fc:	10 f0       	brcs	.+4      	; 0x502 <sensor_data+0x6c>
     4fe:	81 60       	ori	r24, 0x01	; 1
     500:	01 c0       	rjmp	.+2      	; 0x504 <sensor_data+0x6e>
	else						sn_dta &= ~(1<<0);
     502:	8e 7f       	andi	r24, 0xFE	; 254
	
	return sn_dta;
}
     504:	2a 96       	adiw	r28, 0x0a	; 10
     506:	0f b6       	in	r0, 0x3f	; 63
     508:	f8 94       	cli
     50a:	de bf       	out	0x3e, r29	; 62
     50c:	0f be       	out	0x3f, r0	; 63
     50e:	cd bf       	out	0x3d, r28	; 61
     510:	df 91       	pop	r29
     512:	cf 91       	pop	r28
     514:	08 95       	ret

00000516 <sensor_data_verified>:

uint8_t sensor_data_verified(void)
{
     516:	1f 93       	push	r17
     518:	cf 93       	push	r28
     51a:	df 93       	push	r29
void time_reset(void);

// This is inline for efficiency:
static inline void delay_us(unsigned int microseconds)
{
  __asm__ volatile (
     51c:	c4 e1       	ldi	r28, 0x14	; 20
     51e:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t snsr_data;
re_data:
	snsr_data = sensor_data();
     520:	0e 94 4b 02 	call	0x496	; 0x496 <sensor_data>
     524:	18 2f       	mov	r17, r24
     526:	fe 01       	movw	r30, r28
     528:	6f 93       	push	r22
     52a:	64 e0       	ldi	r22, 0x04	; 4
     52c:	6a 95       	dec	r22
     52e:	f1 f7       	brne	.-4      	; 0x52c <sensor_data_verified+0x16>
     530:	6f 91       	pop	r22
     532:	31 97       	sbiw	r30, 0x01	; 1
     534:	c9 f7       	brne	.-14     	; 0x528 <sensor_data_verified+0x12>
	delay_us(20);
	if (snsr_data == sensor_data())
     536:	0e 94 4b 02 	call	0x496	; 0x496 <sensor_data>
     53a:	18 13       	cpse	r17, r24
     53c:	f1 cf       	rjmp	.-30     	; 0x520 <sensor_data_verified+0xa>
	{
		return snsr_data;
	}
	else goto re_data;
}
     53e:	81 2f       	mov	r24, r17
     540:	df 91       	pop	r29
     542:	cf 91       	pop	r28
     544:	1f 91       	pop	r17
     546:	08 95       	ret

00000548 <maze_solve>:



void maze_solve(int speed)
{
     548:	cf 93       	push	r28
     54a:	df 93       	push	r29
     54c:	1f 92       	push	r1
     54e:	cd b7       	in	r28, 0x3d	; 61
     550:	de b7       	in	r29, 0x3e	; 62
     552:	5c 01       	movw	r10, r24
	uint16_t destination = 0;
	const signed int speed_node = 50, speed_break = -230, break_time = 10, zero_time = 20; //minimum 200
	char sensor_data_hold = 0, Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
     554:	f1 2c       	mov	r15, r1
     556:	d1 2c       	mov	r13, r1
     558:	e1 2c       	mov	r14, r1
	temp_strt:
	while(1)
	{
		follow_segment(speed);
     55a:	c5 01       	movw	r24, r10
     55c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
		
		sensor_data_hold = sensor_data_verified();
     560:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     564:	28 2f       	mov	r18, r24
		
		if(sensor_data_hold & 0b10000)  //left trigging 
     566:	84 ff       	sbrs	r24, 4
     568:	46 c0       	rjmp	.+140    	; 0x5f6 <maze_solve+0xae>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     56a:	62 e3       	ldi	r22, 0x32	; 50
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	82 e3       	ldi	r24, 0x32	; 50
     570:	90 e0       	ldi	r25, 0x00	; 0
     572:	29 83       	std	Y+1, r18	; 0x01
     574:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
			destination = 0;
     578:	00 e0       	ldi	r16, 0x00	; 0
     57a:	10 e0       	ldi	r17, 0x00	; 0
			while (sensor_data_hold & 0b10001)
     57c:	29 81       	ldd	r18, Y+1	; 0x01
     57e:	21 71       	andi	r18, 0x11	; 17
     580:	c1 f0       	breq	.+48     	; 0x5b2 <maze_solve+0x6a>
			{
				sensor_data_hold = sensor_data_verified();
     582:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     586:	28 2f       	mov	r18, r24

				if ((sensor_data_hold & 0b00001) && (Right_trigged == 0))
     588:	80 ff       	sbrs	r24, 0
     58a:	04 c0       	rjmp	.+8      	; 0x594 <maze_solve+0x4c>
     58c:	e1 10       	cpse	r14, r1
     58e:	02 c0       	rjmp	.+4      	; 0x594 <maze_solve+0x4c>
				{
					Right_trigged=1;
     590:	ee 24       	eor	r14, r14
     592:	e3 94       	inc	r14
				}
				if (sensor_data_hold == 0b11111)
     594:	2f 31       	cpi	r18, 0x1F	; 31
     596:	99 f7       	brne	.-26     	; 0x57e <maze_solve+0x36>
				{
					destination = destination + 1;
     598:	0f 5f       	subi	r16, 0xFF	; 255
     59a:	1f 4f       	sbci	r17, 0xFF	; 255
					if (destination > 5000)   // destination triggering
     59c:	09 38       	cpi	r16, 0x89	; 137
     59e:	83 e1       	ldi	r24, 0x13	; 19
     5a0:	18 07       	cpc	r17, r24
     5a2:	68 f3       	brcs	.-38     	; 0x57e <maze_solve+0x36>
					{
						destination = 0x00;
						set_motors(0,0);
     5a4:	60 e0       	ldi	r22, 0x00	; 0
     5a6:	70 e0       	ldi	r23, 0x00	; 0
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
     5b0:	ff cf       	rjmp	.-2      	; 0x5b0 <maze_solve+0x68>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			sensor_data_hold = sensor_data_verified();
     5b2:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
			if (sensor_data_hold & 0b00100)
     5b6:	82 fd       	sbrc	r24, 2
     5b8:	70 c0       	rjmp	.+224    	; 0x69a <maze_solve+0x152>
				Forward_trigged = 1;
			}
			//temporary pgm
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     5ba:	e1 10       	cpse	r14, r1
     5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <maze_solve+0x88>
     5be:	f1 10       	cpse	r15, r1
     5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <maze_solve+0x80>
			{
				//left_operation(speed);
				turn('L',speed);
     5c2:	b5 01       	movw	r22, r10
     5c4:	8c e4       	ldi	r24, 0x4C	; 76
     5c6:	66 c0       	rjmp	.+204    	; 0x694 <maze_solve+0x14c>
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 0) && (Forward_trigged == 1))
     5c8:	e1 e0       	ldi	r30, 0x01	; 1
     5ca:	fe 12       	cpse	r15, r30
     5cc:	c6 cf       	rjmp	.-116    	; 0x55a <maze_solve+0x12>
     5ce:	0d c0       	rjmp	.+26     	; 0x5ea <maze_solve+0xa2>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     5d0:	f1 e0       	ldi	r31, 0x01	; 1
     5d2:	ef 12       	cpse	r14, r31
     5d4:	c2 cf       	rjmp	.-124    	; 0x55a <maze_solve+0x12>
     5d6:	f1 10       	cpse	r15, r1
     5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <maze_solve+0x9c>
			{
				//left_right_operation(speed);
				turn('L',speed);
     5da:	b5 01       	movw	r22, r10
     5dc:	8c e4       	ldi	r24, 0x4C	; 76
     5de:	0e 94 5f 03 	call	0x6be	; 0x6be <turn>
     5e2:	ba cf       	rjmp	.-140    	; 0x558 <maze_solve+0x10>
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 1))
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	f8 12       	cpse	r15, r24
     5e8:	b8 cf       	rjmp	.-144    	; 0x55a <maze_solve+0x12>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     5ea:	b5 01       	movw	r22, r10
     5ec:	8c e4       	ldi	r24, 0x4C	; 76
     5ee:	0e 94 5f 03 	call	0x6be	; 0x6be <turn>
				Right_trigged = 0;
				Forward_trigged = 0;
     5f2:	f1 2c       	mov	r15, r1
     5f4:	b1 cf       	rjmp	.-158    	; 0x558 <maze_solve+0x10>
			}
		}
		else if (sensor_data_hold & 0b00001) //right trigging
     5f6:	80 ff       	sbrs	r24, 0
     5f8:	49 c0       	rjmp	.+146    	; 0x68c <maze_solve+0x144>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     5fa:	62 e3       	ldi	r22, 0x32	; 50
     5fc:	70 e0       	ldi	r23, 0x00	; 0
     5fe:	82 e3       	ldi	r24, 0x32	; 50
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	29 83       	std	Y+1, r18	; 0x01
     604:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
			destination = 0;
     608:	00 e0       	ldi	r16, 0x00	; 0
     60a:	10 e0       	ldi	r17, 0x00	; 0
			while (sensor_data_hold & 0b10001)
     60c:	29 81       	ldd	r18, Y+1	; 0x01
     60e:	21 71       	andi	r18, 0x11	; 17
     610:	c1 f0       	breq	.+48     	; 0x642 <maze_solve+0xfa>
			{
				sensor_data_hold = sensor_data_verified();
     612:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     616:	28 2f       	mov	r18, r24

				if ((sensor_data_hold & 0b10000) && (Left_trigged == 0))
     618:	84 ff       	sbrs	r24, 4
     61a:	04 c0       	rjmp	.+8      	; 0x624 <maze_solve+0xdc>
     61c:	d1 10       	cpse	r13, r1
     61e:	02 c0       	rjmp	.+4      	; 0x624 <maze_solve+0xdc>
				{
					Left_trigged=1;
     620:	dd 24       	eor	r13, r13
     622:	d3 94       	inc	r13
				}
				if (sensor_data_hold == 0b11111)
     624:	2f 31       	cpi	r18, 0x1F	; 31
     626:	99 f7       	brne	.-26     	; 0x60e <maze_solve+0xc6>
				{
					destination = destination + 1;
     628:	0f 5f       	subi	r16, 0xFF	; 255
     62a:	1f 4f       	sbci	r17, 0xFF	; 255
					if (destination > 5000)   // destination triggering
     62c:	09 38       	cpi	r16, 0x89	; 137
     62e:	e3 e1       	ldi	r30, 0x13	; 19
     630:	1e 07       	cpc	r17, r30
     632:	68 f3       	brcs	.-38     	; 0x60e <maze_solve+0xc6>
					{
						destination = 0x00;
						set_motors(0,0);
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	70 e0       	ldi	r23, 0x00	; 0
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
     640:	ff cf       	rjmp	.-2      	; 0x640 <maze_solve+0xf8>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			sensor_data_hold = sensor_data_verified();
     642:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
			if (sensor_data_hold & 0b00100)
     646:	82 fd       	sbrc	r24, 2
     648:	2c c0       	rjmp	.+88     	; 0x6a2 <maze_solve+0x15a>
				Forward_trigged = 1;
			}
			//temporary pgm
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     64a:	d1 10       	cpse	r13, r1
     64c:	0b c0       	rjmp	.+22     	; 0x664 <maze_solve+0x11c>
     64e:	f1 10       	cpse	r15, r1
     650:	03 c0       	rjmp	.+6      	; 0x658 <maze_solve+0x110>
			{
				//right_operation(speed);
				turn('R',speed);
     652:	b5 01       	movw	r22, r10
     654:	82 e5       	ldi	r24, 0x52	; 82
     656:	1e c0       	rjmp	.+60     	; 0x694 <maze_solve+0x14c>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 0) && (Forward_trigged == 1))
     658:	f1 e0       	ldi	r31, 0x01	; 1
     65a:	ff 12       	cpse	r15, r31
     65c:	7e cf       	rjmp	.-260    	; 0x55a <maze_solve+0x12>
			{
				//right_forward_operation(speed);
				turn('S',speed);
     65e:	b5 01       	movw	r22, r10
     660:	83 e5       	ldi	r24, 0x53	; 83
     662:	0f c0       	rjmp	.+30     	; 0x682 <maze_solve+0x13a>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	d8 12       	cpse	r13, r24
     668:	78 cf       	rjmp	.-272    	; 0x55a <maze_solve+0x12>
     66a:	f1 10       	cpse	r15, r1
     66c:	05 c0       	rjmp	.+10     	; 0x678 <maze_solve+0x130>
			{
				//left_right_operation(speed);
				turn('L',speed);
     66e:	b5 01       	movw	r22, r10
     670:	8c e4       	ldi	r24, 0x4C	; 76
     672:	0e 94 5f 03 	call	0x6be	; 0x6be <turn>
     676:	08 c0       	rjmp	.+16     	; 0x688 <maze_solve+0x140>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
     678:	e1 e0       	ldi	r30, 0x01	; 1
     67a:	fe 12       	cpse	r15, r30
     67c:	6e cf       	rjmp	.-292    	; 0x55a <maze_solve+0x12>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     67e:	b5 01       	movw	r22, r10
     680:	8c e4       	ldi	r24, 0x4C	; 76
     682:	0e 94 5f 03 	call	0x6be	; 0x6be <turn>
				Left_trigged = 0;
				Forward_trigged = 0;
     686:	f1 2c       	mov	r15, r1
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
				Left_trigged = 0;
     688:	d1 2c       	mov	r13, r1
     68a:	67 cf       	rjmp	.-306    	; 0x55a <maze_solve+0x12>
				Forward_trigged = 0;
			}
		}
		else if (sensor_data_hold == 0b00000) //-100
     68c:	81 11       	cpse	r24, r1
     68e:	65 cf       	rjmp	.-310    	; 0x55a <maze_solve+0x12>
		{	
			//reverse_operation(speed);
			turn('U',speed);
     690:	b5 01       	movw	r22, r10
     692:	85 e5       	ldi	r24, 0x55	; 85
     694:	0e 94 5f 03 	call	0x6be	; 0x6be <turn>
     698:	60 cf       	rjmp	.-320    	; 0x55a <maze_solve+0x12>
				Forward_trigged = 1;
			}
			//temporary pgm
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     69a:	ee 20       	and	r14, r14
     69c:	09 f4       	brne	.+2      	; 0x6a0 <maze_solve+0x158>
     69e:	a5 cf       	rjmp	.-182    	; 0x5ea <maze_solve+0xa2>
     6a0:	03 c0       	rjmp	.+6      	; 0x6a8 <maze_solve+0x160>
				Forward_trigged = 1;
			}
			//temporary pgm
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     6a2:	dd 20       	and	r13, r13
     6a4:	e1 f2       	breq	.-72     	; 0x65e <maze_solve+0x116>
     6a6:	05 c0       	rjmp	.+10     	; 0x6b2 <maze_solve+0x16a>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     6a8:	f1 e0       	ldi	r31, 0x01	; 1
     6aa:	ef 16       	cp	r14, r31
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <maze_solve+0x168>
     6ae:	9d cf       	rjmp	.-198    	; 0x5ea <maze_solve+0xa2>
     6b0:	03 c0       	rjmp	.+6      	; 0x6b8 <maze_solve+0x170>
				//right_forward_operation(speed);
				turn('S',speed);
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	d8 16       	cp	r13, r24
     6b6:	19 f3       	breq	.-58     	; 0x67e <maze_solve+0x136>
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			sensor_data_hold = sensor_data_verified();
			if (sensor_data_hold & 0b00100)
			{
				Forward_trigged = 1;
     6b8:	ff 24       	eor	r15, r15
     6ba:	f3 94       	inc	r15
     6bc:	4e cf       	rjmp	.-356    	; 0x55a <maze_solve+0x12>

000006be <turn>:
	uint8_t sensor_data_save = 0x00;
	const signed int speed_break = -230, break_time = 20, zero_time = 20, turn_th=300, edge_th=500, turn_speed = 60;
	unsigned int sensors[5];
	uint16_t align_time = 0, align_time_ld = 5;
	
	if (dir == 'L')
     6be:	8c 34       	cpi	r24, 0x4C	; 76
     6c0:	09 f0       	breq	.+2      	; 0x6c4 <turn+0x6>
     6c2:	47 c0       	rjmp	.+142    	; 0x752 <turn+0x94>
	{
		delay_ms(25);
     6c4:	89 e1       	ldi	r24, 0x19	; 25
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     6cc:	60 e0       	ldi	r22, 0x00	; 0
     6ce:	70 e0       	ldi	r23, 0x00	; 0
     6d0:	80 e0       	ldi	r24, 0x00	; 0
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     6d8:	8a e0       	ldi	r24, 0x0A	; 10
     6da:	90 e0       	ldi	r25, 0x00	; 0
     6dc:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(-200,-200);
     6e0:	68 e3       	ldi	r22, 0x38	; 56
     6e2:	7f ef       	ldi	r23, 0xFF	; 255
     6e4:	88 e3       	ldi	r24, 0x38	; 56
     6e6:	9f ef       	ldi	r25, 0xFF	; 255
     6e8:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     6ec:	8a e0       	ldi	r24, 0x0A	; 10
     6ee:	90 e0       	ldi	r25, 0x00	; 0
     6f0:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     6f4:	60 e0       	ldi	r22, 0x00	; 0
     6f6:	70 e0       	ldi	r23, 0x00	; 0
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(50);
     700:	82 e3       	ldi	r24, 0x32	; 50
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		
		set_motors(-80,80);
     708:	60 e5       	ldi	r22, 0x50	; 80
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	80 eb       	ldi	r24, 0xB0	; 176
     70e:	9f ef       	ldi	r25, 0xFF	; 255
     710:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
#include "follow-segment.h"
#include "maze-solve.h"

void turn(char dir, int speed)
{
	uint8_t sensor_data_save = 0x00;
     714:	80 e0       	ldi	r24, 0x00	; 0
		set_motors(0,0);
		delay_ms(50);
		
		set_motors(-80,80);
		
		while(!(sensor_data_save & 0b10000))
     716:	84 fd       	sbrc	r24, 4
     718:	03 c0       	rjmp	.+6      	; 0x720 <turn+0x62>
		{
			sensor_data_save = sensor_data_verified();
     71a:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     71e:	fb cf       	rjmp	.-10     	; 0x716 <turn+0x58>
		}
		while(sensor_data_save & 0b10000)
     720:	84 ff       	sbrs	r24, 4
     722:	03 c0       	rjmp	.+6      	; 0x72a <turn+0x6c>
		{
			sensor_data_save = sensor_data_verified();
     724:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     728:	fb cf       	rjmp	.-10     	; 0x720 <turn+0x62>
		}
		while(!(sensor_data_save & 0b00010))
     72a:	81 fd       	sbrc	r24, 1
     72c:	03 c0       	rjmp	.+6      	; 0x734 <turn+0x76>
		{
			sensor_data_save = sensor_data_verified();
     72e:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     732:	fb cf       	rjmp	.-10     	; 0x72a <turn+0x6c>
		}
		
		set_motors(0,0);
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	70 e0       	ldi	r23, 0x00	; 0
     738:	80 e0       	ldi	r24, 0x00	; 0
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(30);
     740:	8e e1       	ldi	r24, 0x1E	; 30
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(100,-100);
     748:	6c e9       	ldi	r22, 0x9C	; 156
     74a:	7f ef       	ldi	r23, 0xFF	; 255
     74c:	84 e6       	ldi	r24, 0x64	; 100
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	4e c0       	rjmp	.+156    	; 0x7ee <turn+0x130>
		delay_ms(50);
		//follow_segment(80);
		//follow_segment(120);
		//set_motors(speed,speed);
	}
	else if (dir == 'R')
     752:	82 35       	cpi	r24, 0x52	; 82
     754:	c1 f5       	brne	.+112    	; 0x7c6 <turn+0x108>
	{
		delay_ms(25);
     756:	89 e1       	ldi	r24, 0x19	; 25
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     75e:	60 e0       	ldi	r22, 0x00	; 0
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	80 e0       	ldi	r24, 0x00	; 0
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     76a:	8a e0       	ldi	r24, 0x0A	; 10
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(-200,-200);
     772:	68 e3       	ldi	r22, 0x38	; 56
     774:	7f ef       	ldi	r23, 0xFF	; 255
     776:	88 e3       	ldi	r24, 0x38	; 56
     778:	9f ef       	ldi	r25, 0xFF	; 255
     77a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     77e:	8a e0       	ldi	r24, 0x0A	; 10
     780:	90 e0       	ldi	r25, 0x00	; 0
     782:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     786:	60 e0       	ldi	r22, 0x00	; 0
     788:	70 e0       	ldi	r23, 0x00	; 0
     78a:	80 e0       	ldi	r24, 0x00	; 0
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(50);
     792:	82 e3       	ldi	r24, 0x32	; 50
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		
		set_motors(80,-80);
     79a:	60 eb       	ldi	r22, 0xB0	; 176
     79c:	7f ef       	ldi	r23, 0xFF	; 255
     79e:	80 e5       	ldi	r24, 0x50	; 80
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
#include "follow-segment.h"
#include "maze-solve.h"

void turn(char dir, int speed)
{
	uint8_t sensor_data_save = 0x00;
     7a6:	80 e0       	ldi	r24, 0x00	; 0
		set_motors(0,0);
		delay_ms(50);
		
		set_motors(80,-80);
		
		while(!(sensor_data_save & 0b00001))
     7a8:	80 fd       	sbrc	r24, 0
     7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <turn+0xf4>
		{
			sensor_data_save = sensor_data_verified();
     7ac:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     7b0:	fb cf       	rjmp	.-10     	; 0x7a8 <turn+0xea>
		}
		while(sensor_data_save & 0b00001)
     7b2:	80 ff       	sbrs	r24, 0
     7b4:	03 c0       	rjmp	.+6      	; 0x7bc <turn+0xfe>
		{
			sensor_data_save = sensor_data_verified();
     7b6:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     7ba:	fb cf       	rjmp	.-10     	; 0x7b2 <turn+0xf4>
		}
		while(!(sensor_data_save & 0b01000))
     7bc:	83 fd       	sbrc	r24, 3
     7be:	ba cf       	rjmp	.-140    	; 0x734 <turn+0x76>
		{
			sensor_data_save = sensor_data_verified();
     7c0:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     7c4:	fb cf       	rjmp	.-10     	; 0x7bc <turn+0xfe>
		//follow_segment(80);
		//follow_segment(120);
		//set_motors(speed,speed);

	}
	else if (dir == 'S')
     7c6:	83 35       	cpi	r24, 0x53	; 83
     7c8:	11 f5       	brne	.+68     	; 0x80e <turn+0x150>
	{
		delay_ms(25);
     7ca:	89 e1       	ldi	r24, 0x19	; 25
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     7d2:	60 e0       	ldi	r22, 0x00	; 0
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	80 e0       	ldi	r24, 0x00	; 0
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     7de:	8a e0       	ldi	r24, 0x0A	; 10
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(-200,-200);
     7e6:	68 e3       	ldi	r22, 0x38	; 56
     7e8:	7f ef       	ldi	r23, 0xFF	; 255
     7ea:	88 e3       	ldi	r24, 0x38	; 56
     7ec:	9f ef       	ldi	r25, 0xFF	; 255
     7ee:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     7f2:	8a e0       	ldi	r24, 0x0A	; 10
     7f4:	90 e0       	ldi	r25, 0x00	; 0
     7f6:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     7fa:	60 e0       	ldi	r22, 0x00	; 0
     7fc:	70 e0       	ldi	r23, 0x00	; 0
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(50);
     806:	82 e3       	ldi	r24, 0x32	; 50
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	0c 94 ff 0b 	jmp	0x17fe	; 0x17fe <delay_ms>
	}
	else if (dir == 'U')
     80e:	85 35       	cpi	r24, 0x55	; 85
     810:	c1 f5       	brne	.+112    	; 0x882 <turn+0x1c4>
	{
		delay_ms(25);
     812:	89 e1       	ldi	r24, 0x19	; 25
     814:	90 e0       	ldi	r25, 0x00	; 0
     816:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     81a:	60 e0       	ldi	r22, 0x00	; 0
     81c:	70 e0       	ldi	r23, 0x00	; 0
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	90 e0       	ldi	r25, 0x00	; 0
     822:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     826:	8a e0       	ldi	r24, 0x0A	; 10
     828:	90 e0       	ldi	r25, 0x00	; 0
     82a:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(-200,-200);
     82e:	68 e3       	ldi	r22, 0x38	; 56
     830:	7f ef       	ldi	r23, 0xFF	; 255
     832:	88 e3       	ldi	r24, 0x38	; 56
     834:	9f ef       	ldi	r25, 0xFF	; 255
     836:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(10);
     83a:	8a e0       	ldi	r24, 0x0A	; 10
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		set_motors(0,0);
     842:	60 e0       	ldi	r22, 0x00	; 0
     844:	70 e0       	ldi	r23, 0x00	; 0
     846:	80 e0       	ldi	r24, 0x00	; 0
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
		delay_ms(50);
     84e:	82 e3       	ldi	r24, 0x32	; 50
     850:	90 e0       	ldi	r25, 0x00	; 0
     852:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
		
		set_motors(-60,60);
     856:	6c e3       	ldi	r22, 0x3C	; 60
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	84 ec       	ldi	r24, 0xC4	; 196
     85c:	9f ef       	ldi	r25, 0xFF	; 255
     85e:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <set_motors>
#include "follow-segment.h"
#include "maze-solve.h"

void turn(char dir, int speed)
{
	uint8_t sensor_data_save = 0x00;
     862:	80 e0       	ldi	r24, 0x00	; 0
		set_motors(0,0);
		delay_ms(50);
		
		set_motors(-60,60);
		
		while(!(sensor_data_save & 0b10000))
     864:	84 fd       	sbrc	r24, 4
     866:	03 c0       	rjmp	.+6      	; 0x86e <turn+0x1b0>
		{
			sensor_data_save = sensor_data_verified();
     868:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     86c:	fb cf       	rjmp	.-10     	; 0x864 <turn+0x1a6>
		}
		while(sensor_data_save & 0b10000)
     86e:	84 ff       	sbrs	r24, 4
     870:	03 c0       	rjmp	.+6      	; 0x878 <turn+0x1ba>
		{
			sensor_data_save = sensor_data_verified();
     872:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     876:	fb cf       	rjmp	.-10     	; 0x86e <turn+0x1b0>
		}
		while(!(sensor_data_save & 0b00010))
     878:	81 fd       	sbrc	r24, 1
     87a:	5c cf       	rjmp	.-328    	; 0x734 <turn+0x76>
		{
			sensor_data_save = sensor_data_verified();
     87c:	0e 94 8b 02 	call	0x516	; 0x516 <sensor_data_verified>
     880:	fb cf       	rjmp	.-10     	; 0x878 <turn+0x1ba>
     882:	08 95       	ret

00000884 <_ZN15OrangutanAnalog7setModeEh>:
     884:	88 23       	and	r24, r24
     886:	21 f4       	brne	.+8      	; 0x890 <_ZN15OrangutanAnalog7setModeEh+0xc>
     888:	80 91 7c 00 	lds	r24, 0x007C
     88c:	8f 7d       	andi	r24, 0xDF	; 223
     88e:	03 c0       	rjmp	.+6      	; 0x896 <_ZN15OrangutanAnalog7setModeEh+0x12>
     890:	80 91 7c 00 	lds	r24, 0x007C
     894:	80 62       	ori	r24, 0x20	; 32
     896:	80 93 7c 00 	sts	0x007C, r24
     89a:	08 95       	ret

0000089c <_ZN15OrangutanAnalog7getModeEv>:
     89c:	80 91 7c 00 	lds	r24, 0x007C
     8a0:	90 e0       	ldi	r25, 0x00	; 0
     8a2:	25 e0       	ldi	r18, 0x05	; 5
     8a4:	95 95       	asr	r25
     8a6:	87 95       	ror	r24
     8a8:	2a 95       	dec	r18
     8aa:	e1 f7       	brne	.-8      	; 0x8a4 <_ZN15OrangutanAnalog7getModeEv+0x8>
     8ac:	81 70       	andi	r24, 0x01	; 1
     8ae:	08 95       	ret

000008b0 <_ZN15OrangutanAnalog12isConvertingEv>:
     8b0:	80 91 7a 00 	lds	r24, 0x007A
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	36 e0       	ldi	r19, 0x06	; 6
     8b8:	95 95       	asr	r25
     8ba:	87 95       	ror	r24
     8bc:	3a 95       	dec	r19
     8be:	e1 f7       	brne	.-8      	; 0x8b8 <_ZN15OrangutanAnalog12isConvertingEv+0x8>
     8c0:	81 70       	andi	r24, 0x01	; 1
     8c2:	08 95       	ret

000008c4 <_ZN15OrangutanAnalog16conversionResultEv>:
     8c4:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN15OrangutanAnalog7getModeEv>
     8c8:	88 23       	and	r24, r24
     8ca:	21 f0       	breq	.+8      	; 0x8d4 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     8cc:	20 91 79 00 	lds	r18, 0x0079
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	04 c0       	rjmp	.+8      	; 0x8dc <_ZN15OrangutanAnalog16conversionResultEv+0x18>
     8d4:	20 91 78 00 	lds	r18, 0x0078
     8d8:	30 91 79 00 	lds	r19, 0x0079
     8dc:	c9 01       	movw	r24, r18
     8de:	08 95       	ret

000008e0 <_ZN15OrangutanAnalog15startConversionEhh>:
     8e0:	80 32       	cpi	r24, 0x20	; 32
     8e2:	b0 f4       	brcc	.+44     	; 0x910 <__stack+0x11>
     8e4:	97 e8       	ldi	r25, 0x87	; 135
     8e6:	90 93 7a 00 	sts	0x007A, r25
     8ea:	90 91 7c 00 	lds	r25, 0x007C
     8ee:	29 2f       	mov	r18, r25
     8f0:	20 64       	ori	r18, 0x40	; 64
     8f2:	66 23       	and	r22, r22
     8f4:	11 f0       	breq	.+4      	; 0x8fa <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     8f6:	90 6c       	ori	r25, 0xC0	; 192
     8f8:	02 c0       	rjmp	.+4      	; 0x8fe <_ZN15OrangutanAnalog15startConversionEhh+0x1e>
     8fa:	92 2f       	mov	r25, r18
     8fc:	9f 77       	andi	r25, 0x7F	; 127
     8fe:	90 7e       	andi	r25, 0xE0	; 224
     900:	98 2b       	or	r25, r24
     902:	90 93 7c 00 	sts	0x007C, r25
     906:	80 91 7a 00 	lds	r24, 0x007A
     90a:	80 64       	ori	r24, 0x40	; 64
     90c:	80 93 7a 00 	sts	0x007A, r24
     910:	08 95       	ret

00000912 <_ZN15OrangutanAnalog11readAverageEhj>:
     912:	a0 e0       	ldi	r26, 0x00	; 0
     914:	b0 e0       	ldi	r27, 0x00	; 0
     916:	ef e8       	ldi	r30, 0x8F	; 143
     918:	f4 e0       	ldi	r31, 0x04	; 4
     91a:	0c 94 47 12 	jmp	0x248e	; 0x248e <__prologue_saves__+0x14>
     91e:	6b 01       	movw	r12, r22
     920:	60 e0       	ldi	r22, 0x00	; 0
     922:	0e 94 70 04 	call	0x8e0	; 0x8e0 <_ZN15OrangutanAnalog15startConversionEhh>
     926:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_ZN15OrangutanAnalog12isConvertingEv>
     92a:	88 23       	and	r24, r24
     92c:	e1 f7       	brne	.-8      	; 0x926 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     92e:	e6 01       	movw	r28, r12
     930:	ee 24       	eor	r14, r14
     932:	ff 24       	eor	r15, r15
     934:	87 01       	movw	r16, r14
     936:	80 91 7a 00 	lds	r24, 0x007A
     93a:	80 64       	ori	r24, 0x40	; 64
     93c:	80 93 7a 00 	sts	0x007A, r24
     940:	0e 94 58 04 	call	0x8b0	; 0x8b0 <_ZN15OrangutanAnalog12isConvertingEv>
     944:	88 23       	and	r24, r24
     946:	e1 f7       	brne	.-8      	; 0x940 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     948:	0e 94 62 04 	call	0x8c4	; 0x8c4 <_ZN15OrangutanAnalog16conversionResultEv>
     94c:	a0 e0       	ldi	r26, 0x00	; 0
     94e:	b0 e0       	ldi	r27, 0x00	; 0
     950:	e8 0e       	add	r14, r24
     952:	f9 1e       	adc	r15, r25
     954:	0a 1f       	adc	r16, r26
     956:	1b 1f       	adc	r17, r27
     958:	21 97       	sbiw	r28, 0x01	; 1
     95a:	69 f7       	brne	.-38     	; 0x936 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     95c:	c6 01       	movw	r24, r12
     95e:	96 95       	lsr	r25
     960:	87 95       	ror	r24
     962:	20 e4       	ldi	r18, 0x40	; 64
     964:	c2 16       	cp	r12, r18
     966:	d1 04       	cpc	r13, r1
     968:	40 f4       	brcc	.+16     	; 0x97a <_ZN15OrangutanAnalog11readAverageEhj+0x68>
     96a:	8e 0d       	add	r24, r14
     96c:	9f 1d       	adc	r25, r15
     96e:	6c 2d       	mov	r22, r12
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     976:	cb 01       	movw	r24, r22
     978:	0d c0       	rjmp	.+26     	; 0x994 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     97a:	bc 01       	movw	r22, r24
     97c:	80 e0       	ldi	r24, 0x00	; 0
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	6e 0d       	add	r22, r14
     982:	7f 1d       	adc	r23, r15
     984:	80 1f       	adc	r24, r16
     986:	91 1f       	adc	r25, r17
     988:	96 01       	movw	r18, r12
     98a:	40 e0       	ldi	r20, 0x00	; 0
     98c:	50 e0       	ldi	r21, 0x00	; 0
     98e:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
     992:	c9 01       	movw	r24, r18
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	e8 e0       	ldi	r30, 0x08	; 8
     99a:	0c 94 63 12 	jmp	0x24c6	; 0x24c6 <__epilogue_restores__+0x14>

0000099e <_ZN15OrangutanAnalog12toMillivoltsEj>:
     99e:	a3 e0       	ldi	r26, 0x03	; 3
     9a0:	b0 e0       	ldi	r27, 0x00	; 0
     9a2:	e5 ed       	ldi	r30, 0xD5	; 213
     9a4:	f4 e0       	ldi	r31, 0x04	; 4
     9a6:	0c 94 4c 12 	jmp	0x2498	; 0x2498 <__prologue_saves__+0x1e>
     9aa:	bc 01       	movw	r22, r24
     9ac:	80 e0       	ldi	r24, 0x00	; 0
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	20 91 00 01 	lds	r18, 0x0100
     9b4:	30 91 01 01 	lds	r19, 0x0101
     9b8:	40 e0       	ldi	r20, 0x00	; 0
     9ba:	50 e0       	ldi	r21, 0x00	; 0
     9bc:	0e 94 ad 11 	call	0x235a	; 0x235a <__mulsi3>
     9c0:	18 2f       	mov	r17, r24
     9c2:	69 83       	std	Y+1, r22	; 0x01
     9c4:	7a 83       	std	Y+2, r23	; 0x02
     9c6:	9b 83       	std	Y+3, r25	; 0x03
     9c8:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN15OrangutanAnalog7getModeEv>
     9cc:	69 81       	ldd	r22, Y+1	; 0x01
     9ce:	7a 81       	ldd	r23, Y+2	; 0x02
     9d0:	9b 81       	ldd	r25, Y+3	; 0x03
     9d2:	88 23       	and	r24, r24
     9d4:	71 f0       	breq	.+28     	; 0x9f2 <_ZN15OrangutanAnalog12toMillivoltsEj+0x54>
     9d6:	9b 01       	movw	r18, r22
     9d8:	41 2f       	mov	r20, r17
     9da:	59 2f       	mov	r21, r25
     9dc:	ca 01       	movw	r24, r20
     9de:	b9 01       	movw	r22, r18
     9e0:	61 58       	subi	r22, 0x81	; 129
     9e2:	7f 4f       	sbci	r23, 0xFF	; 255
     9e4:	8f 4f       	sbci	r24, 0xFF	; 255
     9e6:	9f 4f       	sbci	r25, 0xFF	; 255
     9e8:	2f ef       	ldi	r18, 0xFF	; 255
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e0       	ldi	r20, 0x00	; 0
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	0d c0       	rjmp	.+26     	; 0xa0c <_ZN15OrangutanAnalog12toMillivoltsEj+0x6e>
     9f2:	9b 01       	movw	r18, r22
     9f4:	41 2f       	mov	r20, r17
     9f6:	59 2f       	mov	r21, r25
     9f8:	ca 01       	movw	r24, r20
     9fa:	b9 01       	movw	r22, r18
     9fc:	61 50       	subi	r22, 0x01	; 1
     9fe:	7e 4f       	sbci	r23, 0xFE	; 254
     a00:	8f 4f       	sbci	r24, 0xFF	; 255
     a02:	9f 4f       	sbci	r25, 0xFF	; 255
     a04:	2f ef       	ldi	r18, 0xFF	; 255
     a06:	33 e0       	ldi	r19, 0x03	; 3
     a08:	40 e0       	ldi	r20, 0x00	; 0
     a0a:	50 e0       	ldi	r21, 0x00	; 0
     a0c:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
     a10:	c9 01       	movw	r24, r18
     a12:	23 96       	adiw	r28, 0x03	; 3
     a14:	e3 e0       	ldi	r30, 0x03	; 3
     a16:	0c 94 68 12 	jmp	0x24d0	; 0x24d0 <__epilogue_restores__+0x1e>

00000a1a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     a1a:	0e 94 89 04 	call	0x912	; 0x912 <_ZN15OrangutanAnalog11readAverageEhj>
     a1e:	0e 94 cf 04 	call	0x99e	; 0x99e <_ZN15OrangutanAnalog12toMillivoltsEj>
     a22:	08 95       	ret

00000a24 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     a24:	1f 93       	push	r17
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	0e 94 4e 04 	call	0x89c	; 0x89c <_ZN15OrangutanAnalog7getModeEv>
     a2e:	18 2f       	mov	r17, r24
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	0e 94 42 04 	call	0x884	; 0x884 <_ZN15OrangutanAnalog7setModeEh>
     a36:	86 e0       	ldi	r24, 0x06	; 6
     a38:	6a e0       	ldi	r22, 0x0A	; 10
     a3a:	70 e0       	ldi	r23, 0x00	; 0
     a3c:	0e 94 0d 05 	call	0xa1a	; 0xa1a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     a40:	ec 01       	movw	r28, r24
     a42:	81 2f       	mov	r24, r17
     a44:	0e 94 42 04 	call	0x884	; 0x884 <_ZN15OrangutanAnalog7setModeEh>
     a48:	9e 01       	movw	r18, r28
     a4a:	22 0f       	add	r18, r18
     a4c:	33 1f       	adc	r19, r19
     a4e:	2c 0f       	add	r18, r28
     a50:	3d 1f       	adc	r19, r29
     a52:	2f 5f       	subi	r18, 0xFF	; 255
     a54:	3f 4f       	sbci	r19, 0xFF	; 255
     a56:	36 95       	lsr	r19
     a58:	27 95       	ror	r18
     a5a:	c9 01       	movw	r24, r18
     a5c:	df 91       	pop	r29
     a5e:	cf 91       	pop	r28
     a60:	1f 91       	pop	r17
     a62:	08 95       	ret

00000a64 <read_battery_millivolts_3pi>:
     a64:	0e 94 12 05 	call	0xa24	; 0xa24 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     a68:	08 95       	ret

00000a6a <_ZL16currentCharacterv>:
     a6a:	90 91 4f 01 	lds	r25, 0x014F
     a6e:	e0 91 4b 01 	lds	r30, 0x014B
     a72:	f0 91 4c 01 	lds	r31, 0x014C
     a76:	99 23       	and	r25, r25
     a78:	11 f0       	breq	.+4      	; 0xa7e <_ZL16currentCharacterv+0x14>
     a7a:	84 91       	lpm	r24, Z
     a7c:	01 c0       	rjmp	.+2      	; 0xa80 <_ZL16currentCharacterv+0x16>
     a7e:	80 81       	ld	r24, Z
     a80:	28 2f       	mov	r18, r24
     a82:	21 54       	subi	r18, 0x41	; 65
     a84:	2a 31       	cpi	r18, 0x1A	; 26
     a86:	10 f4       	brcc	.+4      	; 0xa8c <_ZL16currentCharacterv+0x22>
     a88:	80 5e       	subi	r24, 0xE0	; 224
     a8a:	08 95       	ret
     a8c:	80 32       	cpi	r24, 0x20	; 32
     a8e:	71 f4       	brne	.+28     	; 0xaac <_ZL16currentCharacterv+0x42>
     a90:	20 91 4b 01 	lds	r18, 0x014B
     a94:	30 91 4c 01 	lds	r19, 0x014C
     a98:	a9 01       	movw	r20, r18
     a9a:	4f 5f       	subi	r20, 0xFF	; 255
     a9c:	5f 4f       	sbci	r21, 0xFF	; 255
     a9e:	50 93 4c 01 	sts	0x014C, r21
     aa2:	40 93 4b 01 	sts	0x014B, r20
     aa6:	21 15       	cp	r18, r1
     aa8:	31 05       	cpc	r19, r1
     aaa:	09 f7       	brne	.-62     	; 0xa6e <_ZL16currentCharacterv+0x4>
     aac:	08 95       	ret

00000aae <_ZL9getNumberv>:
     aae:	ef 92       	push	r14
     ab0:	ff 92       	push	r15
     ab2:	cf 93       	push	r28
     ab4:	df 93       	push	r29
     ab6:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     aba:	c0 e0       	ldi	r28, 0x00	; 0
     abc:	d0 e0       	ldi	r29, 0x00	; 0
     abe:	1b c0       	rjmp	.+54     	; 0xaf6 <_ZL9getNumberv+0x48>
     ac0:	9e 01       	movw	r18, r28
     ac2:	22 0f       	add	r18, r18
     ac4:	33 1f       	adc	r19, r19
     ac6:	93 e0       	ldi	r25, 0x03	; 3
     ac8:	cc 0f       	add	r28, r28
     aca:	dd 1f       	adc	r29, r29
     acc:	9a 95       	dec	r25
     ace:	e1 f7       	brne	.-8      	; 0xac8 <_ZL9getNumberv+0x1a>
     ad0:	c2 0f       	add	r28, r18
     ad2:	d3 1f       	adc	r29, r19
     ad4:	99 27       	eor	r25, r25
     ad6:	87 fd       	sbrc	r24, 7
     ad8:	90 95       	com	r25
     ada:	c8 0f       	add	r28, r24
     adc:	d9 1f       	adc	r29, r25
     ade:	e0 97       	sbiw	r28, 0x30	; 48
     ae0:	80 91 4b 01 	lds	r24, 0x014B
     ae4:	90 91 4c 01 	lds	r25, 0x014C
     ae8:	01 96       	adiw	r24, 0x01	; 1
     aea:	90 93 4c 01 	sts	0x014C, r25
     aee:	80 93 4b 01 	sts	0x014B, r24
     af2:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     af6:	98 2f       	mov	r25, r24
     af8:	90 53       	subi	r25, 0x30	; 48
     afa:	9a 30       	cpi	r25, 0x0A	; 10
     afc:	08 f3       	brcs	.-62     	; 0xac0 <_ZL9getNumberv+0x12>
     afe:	ce 01       	movw	r24, r28
     b00:	df 91       	pop	r29
     b02:	cf 91       	pop	r28
     b04:	ff 90       	pop	r15
     b06:	ef 90       	pop	r14
     b08:	08 95       	ret

00000b0a <_ZN15OrangutanBuzzer5init2Ev>:
     b0a:	10 92 6f 00 	sts	0x006F, r1
     b0e:	83 e2       	ldi	r24, 0x23	; 35
     b10:	80 93 80 00 	sts	0x0080, r24
     b14:	81 e1       	ldi	r24, 0x11	; 17
     b16:	80 93 81 00 	sts	0x0081, r24
     b1a:	10 92 82 00 	sts	0x0082, r1
     b1e:	80 e1       	ldi	r24, 0x10	; 16
     b20:	97 e2       	ldi	r25, 0x27	; 39
     b22:	90 93 89 00 	sts	0x0089, r25
     b26:	80 93 88 00 	sts	0x0088, r24
     b2a:	10 92 8b 00 	sts	0x008B, r1
     b2e:	10 92 8a 00 	sts	0x008A, r1
     b32:	22 9a       	sbi	0x04, 2	; 4
     b34:	78 94       	sei
     b36:	08 95       	ret

00000b38 <_ZN15OrangutanBuzzer4initEv>:
     b38:	80 91 4a 01 	lds	r24, 0x014A
     b3c:	88 23       	and	r24, r24
     b3e:	29 f4       	brne	.+10     	; 0xb4a <_ZN15OrangutanBuzzer4initEv+0x12>
     b40:	81 e0       	ldi	r24, 0x01	; 1
     b42:	80 93 4a 01 	sts	0x014A, r24
     b46:	0e 94 85 05 	call	0xb0a	; 0xb0a <_ZN15OrangutanBuzzer5init2Ev>
     b4a:	08 95       	ret

00000b4c <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     b4c:	a0 e0       	ldi	r26, 0x00	; 0
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	ec ea       	ldi	r30, 0xAC	; 172
     b52:	f5 e0       	ldi	r31, 0x05	; 5
     b54:	0c 94 43 12 	jmp	0x2486	; 0x2486 <__prologue_saves__+0xc>
     b58:	8c 01       	movw	r16, r24
     b5a:	5b 01       	movw	r10, r22
     b5c:	e4 2e       	mov	r14, r20
     b5e:	0e 94 9c 05 	call	0xb38	; 0xb38 <_ZN15OrangutanBuzzer4initEv>
     b62:	10 92 02 01 	sts	0x0102, r1
     b66:	17 ff       	sbrs	r17, 7
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     b6a:	1f 77       	andi	r17, 0x7F	; 127
     b6c:	aa e0       	ldi	r26, 0x0A	; 10
     b6e:	fa 2e       	mov	r15, r26
     b70:	02 c0       	rjmp	.+4      	; 0xb76 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     b72:	ff 24       	eor	r15, r15
     b74:	f3 94       	inc	r15
     b76:	c0 90 81 00 	lds	r12, 0x0081
     b7a:	dd 24       	eor	r13, r13
     b7c:	28 ef       	ldi	r18, 0xF8	; 248
     b7e:	c2 22       	and	r12, r18
     b80:	dd 24       	eor	r13, r13
     b82:	88 ec       	ldi	r24, 0xC8	; 200
     b84:	3f 2d       	mov	r19, r15
     b86:	38 9f       	mul	r19, r24
     b88:	c0 01       	movw	r24, r0
     b8a:	11 24       	eor	r1, r1
     b8c:	80 17       	cp	r24, r16
     b8e:	91 07       	cpc	r25, r17
     b90:	d8 f4       	brcc	.+54     	; 0xbc8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     b92:	e8 01       	movw	r28, r16
     b94:	67 e2       	ldi	r22, 0x27	; 39
     b96:	01 31       	cpi	r16, 0x11	; 17
     b98:	16 07       	cpc	r17, r22
     b9a:	10 f0       	brcs	.+4      	; 0xba0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     b9c:	c0 e1       	ldi	r28, 0x10	; 16
     b9e:	d7 e2       	ldi	r29, 0x27	; 39
     ba0:	be 01       	movw	r22, r28
     ba2:	76 95       	lsr	r23
     ba4:	67 95       	ror	r22
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	60 58       	subi	r22, 0x80	; 128
     bac:	79 46       	sbci	r23, 0x69	; 105
     bae:	87 46       	sbci	r24, 0x67	; 103
     bb0:	9f 4f       	sbci	r25, 0xFF	; 255
     bb2:	9e 01       	movw	r18, r28
     bb4:	40 e0       	ldi	r20, 0x00	; 0
     bb6:	50 e0       	ldi	r21, 0x00	; 0
     bb8:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
     bbc:	89 01       	movw	r16, r18
     bbe:	81 e0       	ldi	r24, 0x01	; 1
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	c8 2a       	or	r12, r24
     bc4:	d9 2a       	or	r13, r25
     bc6:	2c c0       	rjmp	.+88     	; 0xc20 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     bc8:	98 e2       	ldi	r25, 0x28	; 40
     bca:	f9 9e       	mul	r15, r25
     bcc:	90 2d       	mov	r25, r0
     bce:	11 24       	eor	r1, r1
     bd0:	80 e0       	ldi	r24, 0x00	; 0
     bd2:	89 2e       	mov	r8, r25
     bd4:	e4 01       	movw	r28, r8
     bd6:	4e 01       	movw	r8, r28
     bd8:	98 2e       	mov	r9, r24
     bda:	e4 01       	movw	r28, r8
     bdc:	80 16       	cp	r8, r16
     bde:	91 06       	cpc	r9, r17
     be0:	08 f4       	brcc	.+2      	; 0xbe4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     be2:	e8 01       	movw	r28, r16
     be4:	be 01       	movw	r22, r28
     be6:	76 95       	lsr	r23
     be8:	67 95       	ror	r22
     bea:	9e 01       	movw	r18, r28
     bec:	40 e0       	ldi	r20, 0x00	; 0
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	8f 2d       	mov	r24, r15
     bf2:	8a 30       	cpi	r24, 0x0A	; 10
     bf4:	39 f4       	brne	.+14     	; 0xc04 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	90 e0       	ldi	r25, 0x00	; 0
     bfa:	60 5e       	subi	r22, 0xE0	; 224
     bfc:	73 44       	sbci	r23, 0x43	; 67
     bfe:	81 44       	sbci	r24, 0x41	; 65
     c00:	9f 4f       	sbci	r25, 0xFF	; 255
     c02:	06 c0       	rjmp	.+12     	; 0xc10 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     c04:	80 e0       	ldi	r24, 0x00	; 0
     c06:	90 e0       	ldi	r25, 0x00	; 0
     c08:	60 53       	subi	r22, 0x30	; 48
     c0a:	7d 4e       	sbci	r23, 0xED	; 237
     c0c:	8c 4e       	sbci	r24, 0xEC	; 236
     c0e:	9f 4f       	sbci	r25, 0xFF	; 255
     c10:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
     c14:	89 01       	movw	r16, r18
     c16:	52 e0       	ldi	r21, 0x02	; 2
     c18:	85 2e       	mov	r8, r21
     c1a:	91 2c       	mov	r9, r1
     c1c:	c8 28       	or	r12, r8
     c1e:	d9 28       	or	r13, r9
     c20:	2f 2d       	mov	r18, r15
     c22:	2a 30       	cpi	r18, 0x0A	; 10
     c24:	39 f4       	brne	.+14     	; 0xc34 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     c26:	ce 01       	movw	r24, r28
     c28:	05 96       	adiw	r24, 0x05	; 5
     c2a:	6a e0       	ldi	r22, 0x0A	; 10
     c2c:	70 e0       	ldi	r23, 0x00	; 0
     c2e:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     c32:	eb 01       	movw	r28, r22
     c34:	33 e0       	ldi	r19, 0x03	; 3
     c36:	c8 3e       	cpi	r28, 0xE8	; 232
     c38:	d3 07       	cpc	r29, r19
     c3a:	79 f0       	breq	.+30     	; 0xc5a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     c3c:	be 01       	movw	r22, r28
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	95 01       	movw	r18, r10
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	50 e0       	ldi	r21, 0x00	; 0
     c48:	0e 94 ad 11 	call	0x235a	; 0x235a <__mulsi3>
     c4c:	28 ee       	ldi	r18, 0xE8	; 232
     c4e:	33 e0       	ldi	r19, 0x03	; 3
     c50:	40 e0       	ldi	r20, 0x00	; 0
     c52:	50 e0       	ldi	r21, 0x00	; 0
     c54:	0e 94 13 12 	call	0x2426	; 0x2426 <__divmodsi4>
     c58:	01 c0       	rjmp	.+2      	; 0xc5c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     c5a:	95 01       	movw	r18, r10
     c5c:	10 92 6f 00 	sts	0x006F, r1
     c60:	c0 92 81 00 	sts	0x0081, r12
     c64:	10 93 89 00 	sts	0x0089, r17
     c68:	00 93 88 00 	sts	0x0088, r16
     c6c:	40 91 88 00 	lds	r20, 0x0088
     c70:	50 91 89 00 	lds	r21, 0x0089
     c74:	6e 2d       	mov	r22, r14
     c76:	60 31       	cpi	r22, 0x10	; 16
     c78:	08 f0       	brcs	.+2      	; 0xc7c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     c7a:	6f e0       	ldi	r22, 0x0F	; 15
     c7c:	80 e1       	ldi	r24, 0x10	; 16
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	86 1b       	sub	r24, r22
     c82:	91 09       	sbc	r25, r1
     c84:	ba 01       	movw	r22, r20
     c86:	02 c0       	rjmp	.+4      	; 0xc8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     c88:	76 95       	lsr	r23
     c8a:	67 95       	ror	r22
     c8c:	8a 95       	dec	r24
     c8e:	e2 f7       	brpl	.-8      	; 0xc88 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     c90:	70 93 8b 00 	sts	0x008B, r23
     c94:	60 93 8a 00 	sts	0x008A, r22
     c98:	30 93 52 01 	sts	0x0152, r19
     c9c:	20 93 51 01 	sts	0x0151, r18
     ca0:	86 b3       	in	r24, 0x16	; 22
     ca2:	8f ef       	ldi	r24, 0xFF	; 255
     ca4:	86 bb       	out	0x16, r24	; 22
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	80 93 6f 00 	sts	0x006F, r24
     cac:	cd b7       	in	r28, 0x3d	; 61
     cae:	de b7       	in	r29, 0x3e	; 62
     cb0:	ec e0       	ldi	r30, 0x0C	; 12
     cb2:	0c 94 5f 12 	jmp	0x24be	; 0x24be <__epilogue_restores__+0xc>

00000cb6 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     cb6:	9b 01       	movw	r18, r22
     cb8:	8f 3f       	cpi	r24, 0xFF	; 255
     cba:	11 f0       	breq	.+4      	; 0xcc0 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     cbc:	44 23       	and	r20, r20
     cbe:	29 f4       	brne	.+10     	; 0xcca <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     cc0:	88 ee       	ldi	r24, 0xE8	; 232
     cc2:	93 e0       	ldi	r25, 0x03	; 3
     cc4:	b9 01       	movw	r22, r18
     cc6:	40 e0       	ldi	r20, 0x00	; 0
     cc8:	49 c0       	rjmp	.+146    	; 0xd5c <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     cca:	81 31       	cpi	r24, 0x11	; 17
     ccc:	30 f0       	brcs	.+12     	; 0xcda <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     cce:	58 2f       	mov	r21, r24
     cd0:	50 51       	subi	r21, 0x10	; 16
     cd2:	50 36       	cpi	r21, 0x60	; 96
     cd4:	18 f0       	brcs	.+6      	; 0xcdc <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cd6:	5f e5       	ldi	r21, 0x5F	; 95
     cd8:	01 c0       	rjmp	.+2      	; 0xcdc <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	85 2f       	mov	r24, r21
     cde:	6c e0       	ldi	r22, 0x0C	; 12
     ce0:	0e 94 bd 11 	call	0x237a	; 0x237a <__udivmodqi4>
     ce4:	a8 2f       	mov	r26, r24
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	e4 ef       	ldi	r30, 0xF4	; 244
     cea:	ff ef       	ldi	r31, 0xFF	; 255
     cec:	ae 9f       	mul	r26, r30
     cee:	b0 01       	movw	r22, r0
     cf0:	af 9f       	mul	r26, r31
     cf2:	70 0d       	add	r23, r0
     cf4:	be 9f       	mul	r27, r30
     cf6:	70 0d       	add	r23, r0
     cf8:	11 24       	eor	r1, r1
     cfa:	65 0f       	add	r22, r21
     cfc:	71 1d       	adc	r23, r1
     cfe:	6c 30       	cpi	r22, 0x0C	; 12
     d00:	71 05       	cpc	r23, r1
     d02:	40 f4       	brcc	.+16     	; 0xd14 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     d04:	fb 01       	movw	r30, r22
     d06:	ee 0f       	add	r30, r30
     d08:	ff 1f       	adc	r31, r31
     d0a:	e4 5f       	subi	r30, 0xF4	; 244
     d0c:	fe 4f       	sbci	r31, 0xFE	; 254
     d0e:	60 81       	ld	r22, Z
     d10:	71 81       	ldd	r23, Z+1	; 0x01
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     d14:	60 e0       	ldi	r22, 0x00	; 0
     d16:	70 e0       	ldi	r23, 0x00	; 0
     d18:	87 30       	cpi	r24, 0x07	; 7
     d1a:	81 f0       	breq	.+32     	; 0xd3c <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     d1c:	08 2e       	mov	r0, r24
     d1e:	02 c0       	rjmp	.+4      	; 0xd24 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     d20:	66 0f       	add	r22, r22
     d22:	77 1f       	adc	r23, r23
     d24:	0a 94       	dec	r0
     d26:	e2 f7       	brpl	.-8      	; 0xd20 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     d28:	82 30       	cpi	r24, 0x02	; 2
     d2a:	28 f0       	brcs	.+10     	; 0xd36 <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     d2c:	cb 01       	movw	r24, r22
     d2e:	05 96       	adiw	r24, 0x05	; 5
     d30:	6a e0       	ldi	r22, 0x0A	; 10
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	0c c0       	rjmp	.+24     	; 0xd4e <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     d36:	60 50       	subi	r22, 0x00	; 0
     d38:	70 48       	sbci	r23, 0x80	; 128
     d3a:	0b c0       	rjmp	.+22     	; 0xd52 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     d3c:	cb 01       	movw	r24, r22
     d3e:	b6 e0       	ldi	r27, 0x06	; 6
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	ba 95       	dec	r27
     d46:	e1 f7       	brne	.-8      	; 0xd40 <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     d48:	02 96       	adiw	r24, 0x02	; 2
     d4a:	65 e0       	ldi	r22, 0x05	; 5
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     d52:	40 31       	cpi	r20, 0x10	; 16
     d54:	08 f0       	brcs	.+2      	; 0xd58 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     d56:	4f e0       	ldi	r20, 0x0F	; 15
     d58:	cb 01       	movw	r24, r22
     d5a:	b9 01       	movw	r22, r18
     d5c:	0e 94 a6 05 	call	0xb4c	; 0xb4c <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     d60:	08 95       	ret

00000d62 <_ZL8nextNotev>:
     d62:	a0 e0       	ldi	r26, 0x00	; 0
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	e7 eb       	ldi	r30, 0xB7	; 183
     d68:	f6 e0       	ldi	r31, 0x06	; 6
     d6a:	0c 94 42 12 	jmp	0x2484	; 0x2484 <__prologue_saves__+0xa>
     d6e:	b0 90 03 01 	lds	r11, 0x0103
     d72:	80 91 4d 01 	lds	r24, 0x014D
     d76:	88 23       	and	r24, r24
     d78:	61 f0       	breq	.+24     	; 0xd92 <_ZL8nextNotev+0x30>
     d7a:	60 91 4e 01 	lds	r22, 0x014E
     d7e:	66 23       	and	r22, r22
     d80:	41 f0       	breq	.+16     	; 0xd92 <_ZL8nextNotev+0x30>
     d82:	8f ef       	ldi	r24, 0xFF	; 255
     d84:	70 e0       	ldi	r23, 0x00	; 0
     d86:	40 e0       	ldi	r20, 0x00	; 0
     d88:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN15OrangutanBuzzer8playNoteEhjh>
     d8c:	10 92 4e 01 	sts	0x014E, r1
     d90:	34 c1       	rjmp	.+616    	; 0xffa <_ZL8nextNotev+0x298>
     d92:	c0 ec       	ldi	r28, 0xC0	; 192
     d94:	dd e5       	ldi	r29, 0x5D	; 93
     d96:	aa 24       	eor	r10, r10
     d98:	a3 94       	inc	r10
     d9a:	14 e0       	ldi	r17, 0x04	; 4
     d9c:	71 2e       	mov	r7, r17
     d9e:	00 ed       	ldi	r16, 0xD0	; 208
     da0:	17 e0       	ldi	r17, 0x07	; 7
     da2:	b4 e0       	ldi	r27, 0x04	; 4
     da4:	eb 2e       	mov	r14, r27
     da6:	f1 2c       	mov	r15, r1
     da8:	a4 ef       	ldi	r26, 0xF4	; 244
     daa:	ca 2e       	mov	r12, r26
     dac:	a1 e0       	ldi	r26, 0x01	; 1
     dae:	da 2e       	mov	r13, r26
     db0:	ff e0       	ldi	r31, 0x0F	; 15
     db2:	8f 2e       	mov	r8, r31
     db4:	91 2c       	mov	r9, r1
     db6:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     dba:	20 91 4b 01 	lds	r18, 0x014B
     dbe:	30 91 4c 01 	lds	r19, 0x014C
     dc2:	2f 5f       	subi	r18, 0xFF	; 255
     dc4:	3f 4f       	sbci	r19, 0xFF	; 255
     dc6:	30 93 4c 01 	sts	0x014C, r19
     dca:	20 93 4b 01 	sts	0x014B, r18
     dce:	86 36       	cpi	r24, 0x66	; 102
     dd0:	f1 f1       	breq	.+124    	; 0xe4e <_ZL8nextNotev+0xec>
     dd2:	87 36       	cpi	r24, 0x67	; 103
     dd4:	cc f4       	brge	.+50     	; 0xe08 <_ZL8nextNotev+0xa6>
     dd6:	82 36       	cpi	r24, 0x62	; 98
     dd8:	09 f4       	brne	.+2      	; 0xddc <_ZL8nextNotev+0x7a>
     dda:	af c0       	rjmp	.+350    	; 0xf3a <_ZL8nextNotev+0x1d8>
     ddc:	83 36       	cpi	r24, 0x63	; 99
     dde:	7c f4       	brge	.+30     	; 0xdfe <_ZL8nextNotev+0x9c>
     de0:	8e 33       	cpi	r24, 0x3E	; 62
     de2:	49 f1       	breq	.+82     	; 0xe36 <_ZL8nextNotev+0xd4>
     de4:	8f 33       	cpi	r24, 0x3F	; 63
     de6:	3c f4       	brge	.+14     	; 0xdf6 <_ZL8nextNotev+0x94>
     de8:	81 32       	cpi	r24, 0x21	; 33
     dea:	09 f4       	brne	.+2      	; 0xdee <_ZL8nextNotev+0x8c>
     dec:	87 c0       	rjmp	.+270    	; 0xefc <_ZL8nextNotev+0x19a>
     dee:	8c 33       	cpi	r24, 0x3C	; 60
     df0:	09 f0       	breq	.+2      	; 0xdf4 <_ZL8nextNotev+0x92>
     df2:	9b c0       	rjmp	.+310    	; 0xf2a <_ZL8nextNotev+0x1c8>
     df4:	22 c0       	rjmp	.+68     	; 0xe3a <_ZL8nextNotev+0xd8>
     df6:	81 36       	cpi	r24, 0x61	; 97
     df8:	09 f0       	breq	.+2      	; 0xdfc <_ZL8nextNotev+0x9a>
     dfa:	97 c0       	rjmp	.+302    	; 0xf2a <_ZL8nextNotev+0x1c8>
     dfc:	9b c0       	rjmp	.+310    	; 0xf34 <_ZL8nextNotev+0x1d2>
     dfe:	84 36       	cpi	r24, 0x64	; 100
     e00:	01 f1       	breq	.+64     	; 0xe42 <_ZL8nextNotev+0xe0>
     e02:	85 36       	cpi	r24, 0x65	; 101
     e04:	0c f5       	brge	.+66     	; 0xe48 <_ZL8nextNotev+0xe6>
     e06:	1b c0       	rjmp	.+54     	; 0xe3e <_ZL8nextNotev+0xdc>
     e08:	8f 36       	cpi	r24, 0x6F	; 111
     e0a:	09 f4       	brne	.+2      	; 0xe0e <_ZL8nextNotev+0xac>
     e0c:	47 c0       	rjmp	.+142    	; 0xe9c <_ZL8nextNotev+0x13a>
     e0e:	80 37       	cpi	r24, 0x70	; 112
     e10:	44 f4       	brge	.+16     	; 0xe22 <_ZL8nextNotev+0xc0>
     e12:	8c 36       	cpi	r24, 0x6C	; 108
     e14:	11 f1       	breq	.+68     	; 0xe5a <_ZL8nextNotev+0xf8>
     e16:	8d 36       	cpi	r24, 0x6D	; 109
     e18:	61 f1       	breq	.+88     	; 0xe72 <_ZL8nextNotev+0x110>
     e1a:	87 36       	cpi	r24, 0x67	; 103
     e1c:	09 f0       	breq	.+2      	; 0xe20 <_ZL8nextNotev+0xbe>
     e1e:	85 c0       	rjmp	.+266    	; 0xf2a <_ZL8nextNotev+0x1c8>
     e20:	19 c0       	rjmp	.+50     	; 0xe54 <_ZL8nextNotev+0xf2>
     e22:	84 37       	cpi	r24, 0x74	; 116
     e24:	09 f4       	brne	.+2      	; 0xe28 <_ZL8nextNotev+0xc6>
     e26:	44 c0       	rjmp	.+136    	; 0xeb0 <_ZL8nextNotev+0x14e>
     e28:	86 37       	cpi	r24, 0x76	; 118
     e2a:	09 f4       	brne	.+2      	; 0xe2e <_ZL8nextNotev+0xcc>
     e2c:	60 c0       	rjmp	.+192    	; 0xeee <_ZL8nextNotev+0x18c>
     e2e:	82 37       	cpi	r24, 0x72	; 114
     e30:	09 f0       	breq	.+2      	; 0xe34 <_ZL8nextNotev+0xd2>
     e32:	7b c0       	rjmp	.+246    	; 0xf2a <_ZL8nextNotev+0x1c8>
     e34:	39 c0       	rjmp	.+114    	; 0xea8 <_ZL8nextNotev+0x146>
     e36:	b3 94       	inc	r11
     e38:	be cf       	rjmp	.-132    	; 0xdb6 <_ZL8nextNotev+0x54>
     e3a:	ba 94       	dec	r11
     e3c:	bc cf       	rjmp	.-136    	; 0xdb6 <_ZL8nextNotev+0x54>
     e3e:	ee 24       	eor	r14, r14
     e40:	35 c0       	rjmp	.+106    	; 0xeac <_ZL8nextNotev+0x14a>
     e42:	ee 24       	eor	r14, r14
     e44:	82 e0       	ldi	r24, 0x02	; 2
     e46:	7b c0       	rjmp	.+246    	; 0xf3e <_ZL8nextNotev+0x1dc>
     e48:	ee 24       	eor	r14, r14
     e4a:	84 e0       	ldi	r24, 0x04	; 4
     e4c:	78 c0       	rjmp	.+240    	; 0xf3e <_ZL8nextNotev+0x1dc>
     e4e:	ee 24       	eor	r14, r14
     e50:	85 e0       	ldi	r24, 0x05	; 5
     e52:	75 c0       	rjmp	.+234    	; 0xf3e <_ZL8nextNotev+0x1dc>
     e54:	ee 24       	eor	r14, r14
     e56:	87 e0       	ldi	r24, 0x07	; 7
     e58:	72 c0       	rjmp	.+228    	; 0xf3e <_ZL8nextNotev+0x1dc>
     e5a:	0e 94 57 05 	call	0xaae	; 0xaae <_ZL9getNumberv>
     e5e:	bc 01       	movw	r22, r24
     e60:	90 93 05 01 	sts	0x0105, r25
     e64:	80 93 04 01 	sts	0x0104, r24
     e68:	80 91 06 01 	lds	r24, 0x0106
     e6c:	90 91 07 01 	lds	r25, 0x0107
     e70:	37 c0       	rjmp	.+110    	; 0xee0 <_ZL8nextNotev+0x17e>
     e72:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     e76:	8c 36       	cpi	r24, 0x6C	; 108
     e78:	19 f4       	brne	.+6      	; 0xe80 <_ZL8nextNotev+0x11e>
     e7a:	10 92 4d 01 	sts	0x014D, r1
     e7e:	04 c0       	rjmp	.+8      	; 0xe88 <_ZL8nextNotev+0x126>
     e80:	a0 92 4d 01 	sts	0x014D, r10
     e84:	10 92 4e 01 	sts	0x014E, r1
     e88:	80 91 4b 01 	lds	r24, 0x014B
     e8c:	90 91 4c 01 	lds	r25, 0x014C
     e90:	01 96       	adiw	r24, 0x01	; 1
     e92:	90 93 4c 01 	sts	0x014C, r25
     e96:	80 93 4b 01 	sts	0x014B, r24
     e9a:	8d cf       	rjmp	.-230    	; 0xdb6 <_ZL8nextNotev+0x54>
     e9c:	0e 94 57 05 	call	0xaae	; 0xaae <_ZL9getNumberv>
     ea0:	b8 2e       	mov	r11, r24
     ea2:	80 93 03 01 	sts	0x0103, r24
     ea6:	87 cf       	rjmp	.-242    	; 0xdb6 <_ZL8nextNotev+0x54>
     ea8:	ee 24       	eor	r14, r14
     eaa:	e3 94       	inc	r14
     eac:	80 e0       	ldi	r24, 0x00	; 0
     eae:	47 c0       	rjmp	.+142    	; 0xf3e <_ZL8nextNotev+0x1dc>
     eb0:	0e 94 57 05 	call	0xaae	; 0xaae <_ZL9getNumberv>
     eb4:	bc 01       	movw	r22, r24
     eb6:	ce 01       	movw	r24, r28
     eb8:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     ebc:	cb 01       	movw	r24, r22
     ebe:	88 0f       	add	r24, r24
     ec0:	99 1f       	adc	r25, r25
     ec2:	53 e0       	ldi	r21, 0x03	; 3
     ec4:	66 0f       	add	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	5a 95       	dec	r21
     eca:	e1 f7       	brne	.-8      	; 0xec4 <_ZL8nextNotev+0x162>
     ecc:	86 0f       	add	r24, r22
     ece:	97 1f       	adc	r25, r23
     ed0:	90 93 07 01 	sts	0x0107, r25
     ed4:	80 93 06 01 	sts	0x0106, r24
     ed8:	60 91 04 01 	lds	r22, 0x0104
     edc:	70 91 05 01 	lds	r23, 0x0105
     ee0:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     ee4:	70 93 09 01 	sts	0x0109, r23
     ee8:	60 93 08 01 	sts	0x0108, r22
     eec:	64 cf       	rjmp	.-312    	; 0xdb6 <_ZL8nextNotev+0x54>
     eee:	0e 94 57 05 	call	0xaae	; 0xaae <_ZL9getNumberv>
     ef2:	90 93 0b 01 	sts	0x010B, r25
     ef6:	80 93 0a 01 	sts	0x010A, r24
     efa:	5d cf       	rjmp	.-326    	; 0xdb6 <_ZL8nextNotev+0x54>
     efc:	70 92 03 01 	sts	0x0103, r7
     f00:	10 93 07 01 	sts	0x0107, r17
     f04:	00 93 06 01 	sts	0x0106, r16
     f08:	f0 92 05 01 	sts	0x0105, r15
     f0c:	e0 92 04 01 	sts	0x0104, r14
     f10:	d0 92 09 01 	sts	0x0109, r13
     f14:	c0 92 08 01 	sts	0x0108, r12
     f18:	90 92 0b 01 	sts	0x010B, r9
     f1c:	80 92 0a 01 	sts	0x010A, r8
     f20:	10 92 4d 01 	sts	0x014D, r1
     f24:	44 e0       	ldi	r20, 0x04	; 4
     f26:	b4 2e       	mov	r11, r20
     f28:	46 cf       	rjmp	.-372    	; 0xdb6 <_ZL8nextNotev+0x54>
     f2a:	10 92 4c 01 	sts	0x014C, r1
     f2e:	10 92 4b 01 	sts	0x014B, r1
     f32:	63 c0       	rjmp	.+198    	; 0xffa <_ZL8nextNotev+0x298>
     f34:	ee 24       	eor	r14, r14
     f36:	89 e0       	ldi	r24, 0x09	; 9
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <_ZL8nextNotev+0x1dc>
     f3a:	ee 24       	eor	r14, r14
     f3c:	8b e0       	ldi	r24, 0x0B	; 11
     f3e:	9c e0       	ldi	r25, 0x0C	; 12
     f40:	b9 9e       	mul	r11, r25
     f42:	b0 2c       	mov	r11, r0
     f44:	11 24       	eor	r1, r1
     f46:	b8 0e       	add	r11, r24
     f48:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     f4c:	8b 32       	cpi	r24, 0x2B	; 43
     f4e:	11 f0       	breq	.+4      	; 0xf54 <_ZL8nextNotev+0x1f2>
     f50:	83 32       	cpi	r24, 0x23	; 35
     f52:	b9 f4       	brne	.+46     	; 0xf82 <_ZL8nextNotev+0x220>
     f54:	80 91 4b 01 	lds	r24, 0x014B
     f58:	90 91 4c 01 	lds	r25, 0x014C
     f5c:	01 96       	adiw	r24, 0x01	; 1
     f5e:	90 93 4c 01 	sts	0x014C, r25
     f62:	80 93 4b 01 	sts	0x014B, r24
     f66:	b3 94       	inc	r11
     f68:	ef cf       	rjmp	.-34     	; 0xf48 <_ZL8nextNotev+0x1e6>
     f6a:	80 91 4b 01 	lds	r24, 0x014B
     f6e:	90 91 4c 01 	lds	r25, 0x014C
     f72:	01 96       	adiw	r24, 0x01	; 1
     f74:	90 93 4c 01 	sts	0x014C, r25
     f78:	80 93 4b 01 	sts	0x014B, r24
     f7c:	ba 94       	dec	r11
     f7e:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     f82:	8d 32       	cpi	r24, 0x2D	; 45
     f84:	91 f3       	breq	.-28     	; 0xf6a <_ZL8nextNotev+0x208>
     f86:	c0 91 08 01 	lds	r28, 0x0108
     f8a:	d0 91 09 01 	lds	r29, 0x0109
     f8e:	81 53       	subi	r24, 0x31	; 49
     f90:	88 30       	cpi	r24, 0x08	; 8
     f92:	58 f4       	brcc	.+22     	; 0xfaa <_ZL8nextNotev+0x248>
     f94:	c0 91 06 01 	lds	r28, 0x0106
     f98:	d0 91 07 01 	lds	r29, 0x0107
     f9c:	0e 94 57 05 	call	0xaae	; 0xaae <_ZL9getNumberv>
     fa0:	bc 01       	movw	r22, r24
     fa2:	ce 01       	movw	r24, r28
     fa4:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
     fa8:	eb 01       	movw	r28, r22
     faa:	8e 01       	movw	r16, r28
     fac:	0b c0       	rjmp	.+22     	; 0xfc4 <_ZL8nextNotev+0x262>
     fae:	80 91 4b 01 	lds	r24, 0x014B
     fb2:	90 91 4c 01 	lds	r25, 0x014C
     fb6:	01 96       	adiw	r24, 0x01	; 1
     fb8:	90 93 4c 01 	sts	0x014C, r25
     fbc:	80 93 4b 01 	sts	0x014B, r24
     fc0:	c0 0f       	add	r28, r16
     fc2:	d1 1f       	adc	r29, r17
     fc4:	16 95       	lsr	r17
     fc6:	07 95       	ror	r16
     fc8:	0e 94 35 05 	call	0xa6a	; 0xa6a <_ZL16currentCharacterv>
     fcc:	8e 32       	cpi	r24, 0x2E	; 46
     fce:	79 f3       	breq	.-34     	; 0xfae <_ZL8nextNotev+0x24c>
     fd0:	80 91 4d 01 	lds	r24, 0x014D
     fd4:	88 23       	and	r24, r24
     fd6:	39 f0       	breq	.+14     	; 0xfe6 <_ZL8nextNotev+0x284>
     fd8:	ce 01       	movw	r24, r28
     fda:	96 95       	lsr	r25
     fdc:	87 95       	ror	r24
     fde:	80 93 4e 01 	sts	0x014E, r24
     fe2:	c8 1b       	sub	r28, r24
     fe4:	d1 09       	sbc	r29, r1
     fe6:	ee 20       	and	r14, r14
     fe8:	11 f0       	breq	.+4      	; 0xfee <_ZL8nextNotev+0x28c>
     fea:	bb 24       	eor	r11, r11
     fec:	ba 94       	dec	r11
     fee:	8b 2d       	mov	r24, r11
     ff0:	be 01       	movw	r22, r28
     ff2:	40 91 0a 01 	lds	r20, 0x010A
     ff6:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN15OrangutanBuzzer8playNoteEhjh>
     ffa:	cd b7       	in	r28, 0x3d	; 61
     ffc:	de b7       	in	r29, 0x3e	; 62
     ffe:	ed e0       	ldi	r30, 0x0D	; 13
    1000:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__epilogue_restores__+0xa>

00001004 <__vector_13>:
    1004:	1f 92       	push	r1
    1006:	0f 92       	push	r0
    1008:	0f b6       	in	r0, 0x3f	; 63
    100a:	0f 92       	push	r0
    100c:	11 24       	eor	r1, r1
    100e:	2f 93       	push	r18
    1010:	3f 93       	push	r19
    1012:	4f 93       	push	r20
    1014:	5f 93       	push	r21
    1016:	6f 93       	push	r22
    1018:	7f 93       	push	r23
    101a:	8f 93       	push	r24
    101c:	9f 93       	push	r25
    101e:	af 93       	push	r26
    1020:	bf 93       	push	r27
    1022:	ef 93       	push	r30
    1024:	ff 93       	push	r31
    1026:	80 91 51 01 	lds	r24, 0x0151
    102a:	90 91 52 01 	lds	r25, 0x0152
    102e:	9c 01       	movw	r18, r24
    1030:	21 50       	subi	r18, 0x01	; 1
    1032:	30 40       	sbci	r19, 0x00	; 0
    1034:	30 93 52 01 	sts	0x0152, r19
    1038:	20 93 51 01 	sts	0x0151, r18
    103c:	00 97       	sbiw	r24, 0x00	; 0
    103e:	11 f5       	brne	.+68     	; 0x1084 <__vector_13+0x80>
    1040:	10 92 6f 00 	sts	0x006F, r1
    1044:	78 94       	sei
    1046:	80 91 81 00 	lds	r24, 0x0081
    104a:	88 7f       	andi	r24, 0xF8	; 248
    104c:	81 60       	ori	r24, 0x01	; 1
    104e:	80 93 81 00 	sts	0x0081, r24
    1052:	80 e1       	ldi	r24, 0x10	; 16
    1054:	97 e2       	ldi	r25, 0x27	; 39
    1056:	90 93 89 00 	sts	0x0089, r25
    105a:	80 93 88 00 	sts	0x0088, r24
    105e:	10 92 8b 00 	sts	0x008B, r1
    1062:	10 92 8a 00 	sts	0x008A, r1
    1066:	81 e0       	ldi	r24, 0x01	; 1
    1068:	80 93 02 01 	sts	0x0102, r24
    106c:	80 91 4b 01 	lds	r24, 0x014B
    1070:	90 91 4c 01 	lds	r25, 0x014C
    1074:	00 97       	sbiw	r24, 0x00	; 0
    1076:	31 f0       	breq	.+12     	; 0x1084 <__vector_13+0x80>
    1078:	80 91 50 01 	lds	r24, 0x0150
    107c:	88 23       	and	r24, r24
    107e:	11 f4       	brne	.+4      	; 0x1084 <__vector_13+0x80>
    1080:	0e 94 b1 06 	call	0xd62	; 0xd62 <_ZL8nextNotev>
    1084:	ff 91       	pop	r31
    1086:	ef 91       	pop	r30
    1088:	bf 91       	pop	r27
    108a:	af 91       	pop	r26
    108c:	9f 91       	pop	r25
    108e:	8f 91       	pop	r24
    1090:	7f 91       	pop	r23
    1092:	6f 91       	pop	r22
    1094:	5f 91       	pop	r21
    1096:	4f 91       	pop	r20
    1098:	3f 91       	pop	r19
    109a:	2f 91       	pop	r18
    109c:	0f 90       	pop	r0
    109e:	0f be       	out	0x3f, r0	; 63
    10a0:	0f 90       	pop	r0
    10a2:	1f 90       	pop	r1
    10a4:	18 95       	reti

000010a6 <_ZN15OrangutanBuzzer9isPlayingEv>:
    10a6:	80 91 02 01 	lds	r24, 0x0102
    10aa:	88 23       	and	r24, r24
    10ac:	51 f0       	breq	.+20     	; 0x10c2 <_ZN15OrangutanBuzzer9isPlayingEv+0x1c>
    10ae:	81 e0       	ldi	r24, 0x01	; 1
    10b0:	20 91 4b 01 	lds	r18, 0x014B
    10b4:	30 91 4c 01 	lds	r19, 0x014C
    10b8:	21 15       	cp	r18, r1
    10ba:	31 05       	cpc	r19, r1
    10bc:	19 f4       	brne	.+6      	; 0x10c4 <_ZN15OrangutanBuzzer9isPlayingEv+0x1e>
    10be:	80 e0       	ldi	r24, 0x00	; 0
    10c0:	08 95       	ret
    10c2:	81 e0       	ldi	r24, 0x01	; 1
    10c4:	08 95       	ret

000010c6 <is_playing>:
    10c6:	0e 94 53 08 	call	0x10a6	; 0x10a6 <_ZN15OrangutanBuzzer9isPlayingEv>
    10ca:	08 95       	ret

000010cc <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    10cc:	10 92 6f 00 	sts	0x006F, r1
    10d0:	90 93 4c 01 	sts	0x014C, r25
    10d4:	80 93 4b 01 	sts	0x014B, r24
    10d8:	81 e0       	ldi	r24, 0x01	; 1
    10da:	80 93 4f 01 	sts	0x014F, r24
    10de:	10 92 4e 01 	sts	0x014E, r1
    10e2:	0e 94 b1 06 	call	0xd62	; 0xd62 <_ZL8nextNotev>
    10e6:	08 95       	ret

000010e8 <play_from_program_space>:
    10e8:	0e 94 66 08 	call	0x10cc	; 0x10cc <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    10ec:	08 95       	ret

000010ee <delayMicroseconds.clone.0>:
    10ee:	81 e0       	ldi	r24, 0x01	; 1
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	6f 93       	push	r22
    10f4:	64 e0       	ldi	r22, 0x04	; 4
    10f6:	6a 95       	dec	r22
    10f8:	f1 f7       	brne	.-4      	; 0x10f6 <delayMicroseconds.clone.0+0x8>
    10fa:	6f 91       	pop	r22
    10fc:	01 97       	sbiw	r24, 0x01	; 1
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <delayMicroseconds.clone.0+0x4>
    1100:	08 95       	ret

00001102 <_ZN12OrangutanLCD8busyWaitEv>:
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	1a b1       	in	r17, 0x0a	; 10
    110c:	57 98       	cbi	0x0a, 7	; 10
    110e:	5a 98       	cbi	0x0b, 2	; 11
    1110:	28 9a       	sbi	0x05, 0	; 5
    1112:	c0 e0       	ldi	r28, 0x00	; 0
    1114:	d0 e0       	ldi	r29, 0x00	; 0
    1116:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    111a:	5c 9a       	sbi	0x0b, 4	; 11
    111c:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    1120:	09 b1       	in	r16, 0x09	; 9
    1122:	5c 98       	cbi	0x0b, 4	; 11
    1124:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    1128:	5c 9a       	sbi	0x0b, 4	; 11
    112a:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    112e:	5c 98       	cbi	0x0b, 4	; 11
    1130:	07 ff       	sbrs	r16, 7
    1132:	11 c0       	rjmp	.+34     	; 0x1156 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    1134:	24 96       	adiw	r28, 0x04	; 4
    1136:	9e 01       	movw	r18, r28
    1138:	40 e0       	ldi	r20, 0x00	; 0
    113a:	50 e0       	ldi	r21, 0x00	; 0
    113c:	80 91 57 01 	lds	r24, 0x0157
    1140:	90 91 58 01 	lds	r25, 0x0158
    1144:	a0 91 59 01 	lds	r26, 0x0159
    1148:	b0 91 5a 01 	lds	r27, 0x015A
    114c:	28 17       	cp	r18, r24
    114e:	39 07       	cpc	r19, r25
    1150:	4a 07       	cpc	r20, r26
    1152:	5b 07       	cpc	r21, r27
    1154:	00 f3       	brcs	.-64     	; 0x1116 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    1156:	1a b9       	out	0x0a, r17	; 10
    1158:	df 91       	pop	r29
    115a:	cf 91       	pop	r28
    115c:	1f 91       	pop	r17
    115e:	0f 91       	pop	r16
    1160:	08 95       	ret

00001162 <_ZN12OrangutanLCD8sendDataEh>:
    1162:	65 b1       	in	r22, 0x05	; 5
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	ac 01       	movw	r20, r24
    1168:	41 70       	andi	r20, 0x01	; 1
    116a:	50 70       	andi	r21, 0x00	; 0
    116c:	44 0f       	add	r20, r20
    116e:	55 1f       	adc	r21, r21
    1170:	9c 01       	movw	r18, r24
    1172:	26 70       	andi	r18, 0x06	; 6
    1174:	30 70       	andi	r19, 0x00	; 0
    1176:	53 e0       	ldi	r21, 0x03	; 3
    1178:	22 0f       	add	r18, r18
    117a:	33 1f       	adc	r19, r19
    117c:	5a 95       	dec	r21
    117e:	e1 f7       	brne	.-8      	; 0x1178 <_ZN12OrangutanLCD8sendDataEh+0x16>
    1180:	24 2b       	or	r18, r20
    1182:	6d 7c       	andi	r22, 0xCD	; 205
    1184:	26 2b       	or	r18, r22
    1186:	25 b9       	out	0x05, r18	; 5
    1188:	2b b1       	in	r18, 0x0b	; 11
    118a:	88 70       	andi	r24, 0x08	; 8
    118c:	90 70       	andi	r25, 0x00	; 0
    118e:	34 e0       	ldi	r19, 0x04	; 4
    1190:	88 0f       	add	r24, r24
    1192:	99 1f       	adc	r25, r25
    1194:	3a 95       	dec	r19
    1196:	e1 f7       	brne	.-8      	; 0x1190 <_ZN12OrangutanLCD8sendDataEh+0x2e>
    1198:	2f 77       	andi	r18, 0x7F	; 127
    119a:	28 2b       	or	r18, r24
    119c:	2b b9       	out	0x0b, r18	; 11
    119e:	5c 9a       	sbi	0x0b, 4	; 11
    11a0:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    11a4:	5c 98       	cbi	0x0b, 4	; 11
    11a6:	0e 94 77 08 	call	0x10ee	; 0x10ee <delayMicroseconds.clone.0>
    11aa:	08 95       	ret

000011ac <_ZN12OrangutanLCD4sendEhhh>:
    11ac:	a2 e0       	ldi	r26, 0x02	; 2
    11ae:	b0 e0       	ldi	r27, 0x00	; 0
    11b0:	ec ed       	ldi	r30, 0xDC	; 220
    11b2:	f8 e0       	ldi	r31, 0x08	; 8
    11b4:	0c 94 48 12 	jmp	0x2490	; 0x2490 <__prologue_saves__+0x16>
    11b8:	18 2f       	mov	r17, r24
    11ba:	4a 83       	std	Y+2, r20	; 0x02
    11bc:	69 83       	std	Y+1, r22	; 0x01
    11be:	0e 94 81 09 	call	0x1302	; 0x1302 <_ZN12OrangutanLCD4initEv>
    11c2:	0e 94 81 08 	call	0x1102	; 0x1102 <_ZN12OrangutanLCD8busyWaitEv>
    11c6:	f4 b0       	in	r15, 0x04	; 4
    11c8:	05 b1       	in	r16, 0x05	; 5
    11ca:	da b0       	in	r13, 0x0a	; 10
    11cc:	eb b0       	in	r14, 0x0b	; 11
    11ce:	28 98       	cbi	0x05, 0	; 5
    11d0:	69 81       	ldd	r22, Y+1	; 0x01
    11d2:	4a 81       	ldd	r20, Y+2	; 0x02
    11d4:	66 23       	and	r22, r22
    11d6:	11 f0       	breq	.+4      	; 0x11dc <_ZN12OrangutanLCD4sendEhhh+0x30>
    11d8:	5a 9a       	sbi	0x0b, 2	; 11
    11da:	01 c0       	rjmp	.+2      	; 0x11de <_ZN12OrangutanLCD4sendEhhh+0x32>
    11dc:	5a 98       	cbi	0x0b, 2	; 11
    11de:	84 b1       	in	r24, 0x04	; 4
    11e0:	82 63       	ori	r24, 0x32	; 50
    11e2:	84 b9       	out	0x04, r24	; 4
    11e4:	57 9a       	sbi	0x0a, 7	; 10
    11e6:	41 30       	cpi	r20, 0x01	; 1
    11e8:	29 f0       	breq	.+10     	; 0x11f4 <_ZN12OrangutanLCD4sendEhhh+0x48>
    11ea:	81 2f       	mov	r24, r17
    11ec:	82 95       	swap	r24
    11ee:	8f 70       	andi	r24, 0x0F	; 15
    11f0:	0e 94 b1 08 	call	0x1162	; 0x1162 <_ZN12OrangutanLCD8sendDataEh>
    11f4:	81 2f       	mov	r24, r17
    11f6:	8f 70       	andi	r24, 0x0F	; 15
    11f8:	0e 94 b1 08 	call	0x1162	; 0x1162 <_ZN12OrangutanLCD8sendDataEh>
    11fc:	da b8       	out	0x0a, r13	; 10
    11fe:	eb b8       	out	0x0b, r14	; 11
    1200:	f4 b8       	out	0x04, r15	; 4
    1202:	05 b9       	out	0x05, r16	; 5
    1204:	22 96       	adiw	r28, 0x02	; 2
    1206:	e7 e0       	ldi	r30, 0x07	; 7
    1208:	0c 94 64 12 	jmp	0x24c8	; 0x24c8 <__epilogue_restores__+0x16>

0000120c <_ZN12OrangutanLCD8send_cmdEh>:
    120c:	60 e0       	ldi	r22, 0x00	; 0
    120e:	42 e0       	ldi	r20, 0x02	; 2
    1210:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_ZN12OrangutanLCD4sendEhhh>
    1214:	08 95       	ret

00001216 <_ZN12OrangutanLCD9send_dataEh>:
    1216:	61 e0       	ldi	r22, 0x01	; 1
    1218:	42 e0       	ldi	r20, 0x02	; 2
    121a:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_ZN12OrangutanLCD4sendEhhh>
    121e:	08 95       	ret

00001220 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    1220:	ef 92       	push	r14
    1222:	ff 92       	push	r15
    1224:	1f 93       	push	r17
    1226:	df 93       	push	r29
    1228:	cf 93       	push	r28
    122a:	0f 92       	push	r0
    122c:	cd b7       	in	r28, 0x3d	; 61
    122e:	de b7       	in	r29, 0x3e	; 62
    1230:	66 0f       	add	r22, r22
    1232:	66 0f       	add	r22, r22
    1234:	66 0f       	add	r22, r22
    1236:	48 2f       	mov	r20, r24
    1238:	59 2f       	mov	r21, r25
    123a:	7a 01       	movw	r14, r20
    123c:	10 e0       	ldi	r17, 0x00	; 0
    123e:	81 2f       	mov	r24, r17
    1240:	86 0f       	add	r24, r22
    1242:	80 64       	ori	r24, 0x40	; 64
    1244:	69 83       	std	Y+1, r22	; 0x01
    1246:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    124a:	f7 01       	movw	r30, r14
    124c:	84 91       	lpm	r24, Z
    124e:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    1252:	1f 5f       	subi	r17, 0xFF	; 255
    1254:	08 94       	sec
    1256:	e1 1c       	adc	r14, r1
    1258:	f1 1c       	adc	r15, r1
    125a:	69 81       	ldd	r22, Y+1	; 0x01
    125c:	18 30       	cpi	r17, 0x08	; 8
    125e:	79 f7       	brne	.-34     	; 0x123e <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    1260:	0f 90       	pop	r0
    1262:	cf 91       	pop	r28
    1264:	df 91       	pop	r29
    1266:	1f 91       	pop	r17
    1268:	ff 90       	pop	r15
    126a:	ef 90       	pop	r14
    126c:	08 95       	ret

0000126e <lcd_load_custom_character>:
    126e:	0e 94 10 09 	call	0x1220	; 0x1220 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    1272:	08 95       	ret

00001274 <print_character>:
    1274:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    1278:	08 95       	ret

0000127a <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    127a:	60 e0       	ldi	r22, 0x00	; 0
    127c:	41 e0       	ldi	r20, 0x01	; 1
    127e:	0e 94 d6 08 	call	0x11ac	; 0x11ac <_ZN12OrangutanLCD4sendEhhh>
    1282:	08 95       	ret

00001284 <_ZN12OrangutanLCD5init2Ev>:
    1284:	80 e1       	ldi	r24, 0x10	; 16
    1286:	97 e2       	ldi	r25, 0x27	; 39
    1288:	a0 e0       	ldi	r26, 0x00	; 0
    128a:	b0 e0       	ldi	r27, 0x00	; 0
    128c:	80 93 57 01 	sts	0x0157, r24
    1290:	90 93 58 01 	sts	0x0158, r25
    1294:	a0 93 59 01 	sts	0x0159, r26
    1298:	b0 93 5a 01 	sts	0x015A, r27
    129c:	52 9a       	sbi	0x0a, 2	; 10
    129e:	20 9a       	sbi	0x04, 0	; 4
    12a0:	54 9a       	sbi	0x0a, 4	; 10
    12a2:	8e e1       	ldi	r24, 0x1E	; 30
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    12aa:	83 e0       	ldi	r24, 0x03	; 3
    12ac:	0e 94 3d 09 	call	0x127a	; 0x127a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12b0:	86 e0       	ldi	r24, 0x06	; 6
    12b2:	90 e0       	ldi	r25, 0x00	; 0
    12b4:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    12b8:	83 e0       	ldi	r24, 0x03	; 3
    12ba:	0e 94 3d 09 	call	0x127a	; 0x127a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12be:	82 e0       	ldi	r24, 0x02	; 2
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    12c6:	83 e0       	ldi	r24, 0x03	; 3
    12c8:	0e 94 3d 09 	call	0x127a	; 0x127a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12cc:	82 e0       	ldi	r24, 0x02	; 2
    12ce:	90 e0       	ldi	r25, 0x00	; 0
    12d0:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    12d4:	82 e0       	ldi	r24, 0x02	; 2
    12d6:	0e 94 3d 09 	call	0x127a	; 0x127a <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12da:	82 e0       	ldi	r24, 0x02	; 2
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    12e2:	88 e2       	ldi	r24, 0x28	; 40
    12e4:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    12e8:	88 e0       	ldi	r24, 0x08	; 8
    12ea:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    12f4:	86 e0       	ldi	r24, 0x06	; 6
    12f6:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    12fa:	8c e0       	ldi	r24, 0x0C	; 12
    12fc:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    1300:	08 95       	ret

00001302 <_ZN12OrangutanLCD4initEv>:
    1302:	80 91 5b 01 	lds	r24, 0x015B
    1306:	88 23       	and	r24, r24
    1308:	29 f4       	brne	.+10     	; 0x1314 <_ZN12OrangutanLCD4initEv+0x12>
    130a:	81 e0       	ldi	r24, 0x01	; 1
    130c:	80 93 5b 01 	sts	0x015B, r24
    1310:	0e 94 42 09 	call	0x1284	; 0x1284 <_ZN12OrangutanLCD5init2Ev>
    1314:	08 95       	ret

00001316 <_ZN12OrangutanLCD5clearEv>:
    1316:	81 e0       	ldi	r24, 0x01	; 1
    1318:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    131c:	80 91 53 01 	lds	r24, 0x0153
    1320:	90 91 54 01 	lds	r25, 0x0154
    1324:	00 97       	sbiw	r24, 0x00	; 0
    1326:	11 f1       	breq	.+68     	; 0x136c <_ZN12OrangutanLCD5clearEv+0x56>
    1328:	a0 e0       	ldi	r26, 0x00	; 0
    132a:	b0 e2       	ldi	r27, 0x20	; 32
    132c:	08 c0       	rjmp	.+16     	; 0x133e <_ZN12OrangutanLCD5clearEv+0x28>
    132e:	e0 91 53 01 	lds	r30, 0x0153
    1332:	f0 91 54 01 	lds	r31, 0x0154
    1336:	e2 0f       	add	r30, r18
    1338:	f3 1f       	adc	r31, r19
    133a:	b0 83       	st	Z, r27
    133c:	af 5f       	subi	r26, 0xFF	; 255
    133e:	2a 2f       	mov	r18, r26
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	80 91 24 01 	lds	r24, 0x0124
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	01 97       	sbiw	r24, 0x01	; 1
    134a:	60 91 25 01 	lds	r22, 0x0125
    134e:	70 e0       	ldi	r23, 0x00	; 0
    1350:	86 9f       	mul	r24, r22
    1352:	a0 01       	movw	r20, r0
    1354:	87 9f       	mul	r24, r23
    1356:	50 0d       	add	r21, r0
    1358:	96 9f       	mul	r25, r22
    135a:	50 0d       	add	r21, r0
    135c:	11 24       	eor	r1, r1
    135e:	24 17       	cp	r18, r20
    1360:	35 07       	cpc	r19, r21
    1362:	2c f3       	brlt	.-54     	; 0x132e <_ZN12OrangutanLCD5clearEv+0x18>
    1364:	10 92 56 01 	sts	0x0156, r1
    1368:	10 92 55 01 	sts	0x0155, r1
    136c:	08 95       	ret

0000136e <clear>:
    136e:	0e 94 8b 09 	call	0x1316	; 0x1316 <_ZN12OrangutanLCD5clearEv>
    1372:	08 95       	ret

00001374 <_ZN12OrangutanLCD5printEPKc>:
    1374:	ef 92       	push	r14
    1376:	ff 92       	push	r15
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	e8 2e       	mov	r14, r24
    137e:	e7 01       	movw	r28, r14
    1380:	7e 01       	movw	r14, r28
    1382:	f9 2e       	mov	r15, r25
    1384:	e7 01       	movw	r28, r14
    1386:	02 c0       	rjmp	.+4      	; 0x138c <_ZN12OrangutanLCD5printEPKc+0x18>
    1388:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    138c:	89 91       	ld	r24, Y+
    138e:	88 23       	and	r24, r24
    1390:	d9 f7       	brne	.-10     	; 0x1388 <_ZN12OrangutanLCD5printEPKc+0x14>
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	ff 90       	pop	r15
    1398:	ef 90       	pop	r14
    139a:	08 95       	ret

0000139c <print>:
    139c:	0e 94 ba 09 	call	0x1374	; 0x1374 <_ZN12OrangutanLCD5printEPKc>
    13a0:	08 95       	ret

000013a2 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    13a2:	cf 93       	push	r28
    13a4:	df 93       	push	r29
    13a6:	ec 01       	movw	r28, r24
    13a8:	03 c0       	rjmp	.+6      	; 0x13b0 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    13aa:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    13ae:	21 96       	adiw	r28, 0x01	; 1
    13b0:	fe 01       	movw	r30, r28
    13b2:	84 91       	lpm	r24, Z
    13b4:	88 23       	and	r24, r24
    13b6:	c9 f7       	brne	.-14     	; 0x13aa <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    13b8:	df 91       	pop	r29
    13ba:	cf 91       	pop	r28
    13bc:	08 95       	ret

000013be <print_from_program_space>:
    13be:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    13c2:	08 95       	ret

000013c4 <_ZN12OrangutanLCD5printEm>:
    13c4:	aa e0       	ldi	r26, 0x0A	; 10
    13c6:	b0 e0       	ldi	r27, 0x00	; 0
    13c8:	e8 ee       	ldi	r30, 0xE8	; 232
    13ca:	f9 e0       	ldi	r31, 0x09	; 9
    13cc:	0c 94 45 12 	jmp	0x248a	; 0x248a <__prologue_saves__+0x10>
    13d0:	9b 01       	movw	r18, r22
    13d2:	ac 01       	movw	r20, r24
    13d4:	1a e0       	ldi	r17, 0x0A	; 10
    13d6:	ea e0       	ldi	r30, 0x0A	; 10
    13d8:	ce 2e       	mov	r12, r30
    13da:	d1 2c       	mov	r13, r1
    13dc:	e1 2c       	mov	r14, r1
    13de:	f1 2c       	mov	r15, r1
    13e0:	5e 01       	movw	r10, r28
    13e2:	08 94       	sec
    13e4:	a1 1c       	adc	r10, r1
    13e6:	b1 1c       	adc	r11, r1
    13e8:	02 2f       	mov	r16, r18
    13ea:	ca 01       	movw	r24, r20
    13ec:	b9 01       	movw	r22, r18
    13ee:	a7 01       	movw	r20, r14
    13f0:	96 01       	movw	r18, r12
    13f2:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
    13f6:	11 50       	subi	r17, 0x01	; 1
    13f8:	f5 01       	movw	r30, r10
    13fa:	e1 0f       	add	r30, r17
    13fc:	f1 1d       	adc	r31, r1
    13fe:	00 5d       	subi	r16, 0xD0	; 208
    1400:	92 2f       	mov	r25, r18
    1402:	99 0f       	add	r25, r25
    1404:	89 2f       	mov	r24, r25
    1406:	88 0f       	add	r24, r24
    1408:	88 0f       	add	r24, r24
    140a:	89 0f       	add	r24, r25
    140c:	08 1b       	sub	r16, r24
    140e:	00 83       	st	Z, r16
    1410:	21 15       	cp	r18, r1
    1412:	31 05       	cpc	r19, r1
    1414:	41 05       	cpc	r20, r1
    1416:	51 05       	cpc	r21, r1
    1418:	39 f7       	brne	.-50     	; 0x13e8 <_ZN12OrangutanLCD5printEm+0x24>
    141a:	08 c0       	rjmp	.+16     	; 0x142c <_ZN12OrangutanLCD5printEm+0x68>
    141c:	f6 01       	movw	r30, r12
    141e:	e1 0f       	add	r30, r17
    1420:	f1 1d       	adc	r31, r1
    1422:	80 81       	ld	r24, Z
    1424:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    1428:	1f 5f       	subi	r17, 0xFF	; 255
    142a:	04 c0       	rjmp	.+8      	; 0x1434 <_ZN12OrangutanLCD5printEm+0x70>
    142c:	6e 01       	movw	r12, r28
    142e:	08 94       	sec
    1430:	c1 1c       	adc	r12, r1
    1432:	d1 1c       	adc	r13, r1
    1434:	1a 30       	cpi	r17, 0x0A	; 10
    1436:	90 f3       	brcs	.-28     	; 0x141c <_ZN12OrangutanLCD5printEm+0x58>
    1438:	2a 96       	adiw	r28, 0x0a	; 10
    143a:	ea e0       	ldi	r30, 0x0A	; 10
    143c:	0c 94 61 12 	jmp	0x24c2	; 0x24c2 <__epilogue_restores__+0x10>

00001440 <_ZN12OrangutanLCD5printEl>:
    1440:	ef 92       	push	r14
    1442:	ff 92       	push	r15
    1444:	0f 93       	push	r16
    1446:	1f 93       	push	r17
    1448:	7b 01       	movw	r14, r22
    144a:	8c 01       	movw	r16, r24
    144c:	97 ff       	sbrs	r25, 7
    144e:	0b c0       	rjmp	.+22     	; 0x1466 <_ZN12OrangutanLCD5printEl+0x26>
    1450:	10 95       	com	r17
    1452:	00 95       	com	r16
    1454:	f0 94       	com	r15
    1456:	e0 94       	com	r14
    1458:	e1 1c       	adc	r14, r1
    145a:	f1 1c       	adc	r15, r1
    145c:	01 1d       	adc	r16, r1
    145e:	11 1d       	adc	r17, r1
    1460:	8d e2       	ldi	r24, 0x2D	; 45
    1462:	0e 94 0b 09 	call	0x1216	; 0x1216 <_ZN12OrangutanLCD9send_dataEh>
    1466:	c8 01       	movw	r24, r16
    1468:	b7 01       	movw	r22, r14
    146a:	0e 94 e2 09 	call	0x13c4	; 0x13c4 <_ZN12OrangutanLCD5printEm>
    146e:	1f 91       	pop	r17
    1470:	0f 91       	pop	r16
    1472:	ff 90       	pop	r15
    1474:	ef 90       	pop	r14
    1476:	08 95       	ret

00001478 <print_long>:
    1478:	0e 94 20 0a 	call	0x1440	; 0x1440 <_ZN12OrangutanLCD5printEl>
    147c:	08 95       	ret

0000147e <_ZN12OrangutanLCD6gotoXYEhh>:
    147e:	a5 e0       	ldi	r26, 0x05	; 5
    1480:	b0 e0       	ldi	r27, 0x00	; 0
    1482:	e5 e4       	ldi	r30, 0x45	; 69
    1484:	fa e0       	ldi	r31, 0x0A	; 10
    1486:	0c 94 4c 12 	jmp	0x2498	; 0x2498 <__prologue_saves__+0x1e>
    148a:	18 2f       	mov	r17, r24
    148c:	80 e8       	ldi	r24, 0x80	; 128
    148e:	89 83       	std	Y+1, r24	; 0x01
    1490:	80 ec       	ldi	r24, 0xC0	; 192
    1492:	8a 83       	std	Y+2, r24	; 0x02
    1494:	84 e9       	ldi	r24, 0x94	; 148
    1496:	8b 83       	std	Y+3, r24	; 0x03
    1498:	84 ed       	ldi	r24, 0xD4	; 212
    149a:	8c 83       	std	Y+4, r24	; 0x04
    149c:	fe 01       	movw	r30, r28
    149e:	e6 0f       	add	r30, r22
    14a0:	f1 1d       	adc	r31, r1
    14a2:	81 81       	ldd	r24, Z+1	; 0x01
    14a4:	81 0f       	add	r24, r17
    14a6:	6d 83       	std	Y+5, r22	; 0x05
    14a8:	0e 94 06 09 	call	0x120c	; 0x120c <_ZN12OrangutanLCD8send_cmdEh>
    14ac:	10 93 56 01 	sts	0x0156, r17
    14b0:	6d 81       	ldd	r22, Y+5	; 0x05
    14b2:	60 93 55 01 	sts	0x0155, r22
    14b6:	25 96       	adiw	r28, 0x05	; 5
    14b8:	e3 e0       	ldi	r30, 0x03	; 3
    14ba:	0c 94 68 12 	jmp	0x24d0	; 0x24d0 <__epilogue_restores__+0x1e>

000014be <lcd_goto_xy>:
    14be:	0e 94 3f 0a 	call	0x147e	; 0x147e <_ZN12OrangutanLCD6gotoXYEhh>
    14c2:	08 95       	ret

000014c4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    14c4:	fc 01       	movw	r30, r24
    14c6:	11 82       	std	Z+1, r1	; 0x01
    14c8:	10 82       	st	Z, r1
    14ca:	13 82       	std	Z+3, r1	; 0x03
    14cc:	12 82       	std	Z+2, r1	; 0x02
    14ce:	15 82       	std	Z+5, r1	; 0x05
    14d0:	14 82       	std	Z+4, r1	; 0x04
    14d2:	16 82       	std	Z+6, r1	; 0x06
    14d4:	68 30       	cpi	r22, 0x08	; 8
    14d6:	68 f4       	brcc	.+26     	; 0x14f2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    14d8:	89 e2       	ldi	r24, 0x29	; 41
    14da:	90 e0       	ldi	r25, 0x00	; 0
    14dc:	91 83       	std	Z+1, r25	; 0x01
    14de:	80 83       	st	Z, r24
    14e0:	8b e2       	ldi	r24, 0x2B	; 43
    14e2:	90 e0       	ldi	r25, 0x00	; 0
    14e4:	93 83       	std	Z+3, r25	; 0x03
    14e6:	82 83       	std	Z+2, r24	; 0x02
    14e8:	8a e2       	ldi	r24, 0x2A	; 42
    14ea:	90 e0       	ldi	r25, 0x00	; 0
    14ec:	95 83       	std	Z+5, r25	; 0x05
    14ee:	84 83       	std	Z+4, r24	; 0x04
    14f0:	11 c0       	rjmp	.+34     	; 0x1514 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    14f2:	6e 30       	cpi	r22, 0x0E	; 14
    14f4:	c0 f4       	brcc	.+48     	; 0x1526 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    14f6:	83 e2       	ldi	r24, 0x23	; 35
    14f8:	90 e0       	ldi	r25, 0x00	; 0
    14fa:	91 83       	std	Z+1, r25	; 0x01
    14fc:	80 83       	st	Z, r24
    14fe:	85 e2       	ldi	r24, 0x25	; 37
    1500:	90 e0       	ldi	r25, 0x00	; 0
    1502:	93 83       	std	Z+3, r25	; 0x03
    1504:	82 83       	std	Z+2, r24	; 0x02
    1506:	84 e2       	ldi	r24, 0x24	; 36
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	95 83       	std	Z+5, r25	; 0x05
    150c:	84 83       	std	Z+4, r24	; 0x04
    150e:	70 e0       	ldi	r23, 0x00	; 0
    1510:	68 50       	subi	r22, 0x08	; 8
    1512:	70 40       	sbci	r23, 0x00	; 0
    1514:	81 e0       	ldi	r24, 0x01	; 1
    1516:	90 e0       	ldi	r25, 0x00	; 0
    1518:	02 c0       	rjmp	.+4      	; 0x151e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    151a:	88 0f       	add	r24, r24
    151c:	99 1f       	adc	r25, r25
    151e:	6a 95       	dec	r22
    1520:	e2 f7       	brpl	.-8      	; 0x151a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    1522:	86 83       	std	Z+6, r24	; 0x06
    1524:	08 95       	ret
    1526:	65 31       	cpi	r22, 0x15	; 21
    1528:	b8 f4       	brcc	.+46     	; 0x1558 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    152a:	86 e2       	ldi	r24, 0x26	; 38
    152c:	90 e0       	ldi	r25, 0x00	; 0
    152e:	91 83       	std	Z+1, r25	; 0x01
    1530:	80 83       	st	Z, r24
    1532:	88 e2       	ldi	r24, 0x28	; 40
    1534:	90 e0       	ldi	r25, 0x00	; 0
    1536:	93 83       	std	Z+3, r25	; 0x03
    1538:	82 83       	std	Z+2, r24	; 0x02
    153a:	87 e2       	ldi	r24, 0x27	; 39
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	95 83       	std	Z+5, r25	; 0x05
    1540:	84 83       	std	Z+4, r24	; 0x04
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	6e 50       	subi	r22, 0x0E	; 14
    1546:	70 40       	sbci	r23, 0x00	; 0
    1548:	81 e0       	ldi	r24, 0x01	; 1
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	02 c0       	rjmp	.+4      	; 0x1552 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    154e:	88 0f       	add	r24, r24
    1550:	99 1f       	adc	r25, r25
    1552:	6a 95       	dec	r22
    1554:	e2 f7       	brpl	.-8      	; 0x154e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    1556:	86 83       	std	Z+6, r24	; 0x06
    1558:	08 95       	ret

0000155a <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    155a:	fc 01       	movw	r30, r24
    155c:	a4 81       	ldd	r26, Z+4	; 0x04
    155e:	b5 81       	ldd	r27, Z+5	; 0x05
    1560:	86 81       	ldd	r24, Z+6	; 0x06
    1562:	66 23       	and	r22, r22
    1564:	21 f0       	breq	.+8      	; 0x156e <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    1566:	9c 91       	ld	r25, X
    1568:	98 2b       	or	r25, r24
    156a:	9c 93       	st	X, r25
    156c:	08 95       	ret
    156e:	9c 91       	ld	r25, X
    1570:	80 95       	com	r24
    1572:	89 23       	and	r24, r25
    1574:	8c 93       	st	X, r24
    1576:	08 95       	ret

00001578 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    1578:	fc 01       	movw	r30, r24
    157a:	6f 3f       	cpi	r22, 0xFF	; 255
    157c:	31 f4       	brne	.+12     	; 0x158a <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    157e:	a2 81       	ldd	r26, Z+2	; 0x02
    1580:	b3 81       	ldd	r27, Z+3	; 0x03
    1582:	8c 91       	ld	r24, X
    1584:	96 81       	ldd	r25, Z+6	; 0x06
    1586:	89 27       	eor	r24, r25
    1588:	0c c0       	rjmp	.+24     	; 0x15a2 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    158a:	a2 81       	ldd	r26, Z+2	; 0x02
    158c:	b3 81       	ldd	r27, Z+3	; 0x03
    158e:	86 81       	ldd	r24, Z+6	; 0x06
    1590:	66 23       	and	r22, r22
    1592:	21 f0       	breq	.+8      	; 0x159c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    1594:	9c 91       	ld	r25, X
    1596:	98 2b       	or	r25, r24
    1598:	9c 93       	st	X, r25
    159a:	08 95       	ret
    159c:	9c 91       	ld	r25, X
    159e:	80 95       	com	r24
    15a0:	89 23       	and	r24, r25
    15a2:	8c 93       	st	X, r24
    15a4:	08 95       	ret

000015a6 <_ZN16OrangutanDigital9setOutputEhh>:
    15a6:	a7 e0       	ldi	r26, 0x07	; 7
    15a8:	b0 e0       	ldi	r27, 0x00	; 0
    15aa:	e9 ed       	ldi	r30, 0xD9	; 217
    15ac:	fa e0       	ldi	r31, 0x0A	; 10
    15ae:	0c 94 4a 12 	jmp	0x2494	; 0x2494 <__prologue_saves__+0x1a>
    15b2:	28 2f       	mov	r18, r24
    15b4:	f6 2e       	mov	r15, r22
    15b6:	8e 01       	movw	r16, r28
    15b8:	0f 5f       	subi	r16, 0xFF	; 255
    15ba:	1f 4f       	sbci	r17, 0xFF	; 255
    15bc:	c8 01       	movw	r24, r16
    15be:	62 2f       	mov	r22, r18
    15c0:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    15c4:	c8 01       	movw	r24, r16
    15c6:	6f 2d       	mov	r22, r15
    15c8:	0e 94 bc 0a 	call	0x1578	; 0x1578 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    15cc:	c8 01       	movw	r24, r16
    15ce:	61 e0       	ldi	r22, 0x01	; 1
    15d0:	0e 94 ad 0a 	call	0x155a	; 0x155a <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    15d4:	27 96       	adiw	r28, 0x07	; 7
    15d6:	e5 e0       	ldi	r30, 0x05	; 5
    15d8:	0c 94 66 12 	jmp	0x24cc	; 0x24cc <__epilogue_restores__+0x1a>

000015dc <_ZN15OrangutanMotors5init2Ev>:
    15dc:	e0 eb       	ldi	r30, 0xB0	; 176
    15de:	f0 e0       	ldi	r31, 0x00	; 0
    15e0:	83 ef       	ldi	r24, 0xF3	; 243
    15e2:	80 83       	st	Z, r24
    15e4:	80 81       	ld	r24, Z
    15e6:	84 bd       	out	0x24, r24	; 36
    15e8:	e1 eb       	ldi	r30, 0xB1	; 177
    15ea:	f0 e0       	ldi	r31, 0x00	; 0
    15ec:	82 e0       	ldi	r24, 0x02	; 2
    15ee:	80 83       	st	Z, r24
    15f0:	80 81       	ld	r24, Z
    15f2:	85 bd       	out	0x25, r24	; 37
    15f4:	e4 eb       	ldi	r30, 0xB4	; 180
    15f6:	f0 e0       	ldi	r31, 0x00	; 0
    15f8:	10 82       	st	Z, r1
    15fa:	80 81       	ld	r24, Z
    15fc:	e3 eb       	ldi	r30, 0xB3	; 179
    15fe:	f0 e0       	ldi	r31, 0x00	; 0
    1600:	80 83       	st	Z, r24
    1602:	80 81       	ld	r24, Z
    1604:	88 bd       	out	0x28, r24	; 40
    1606:	88 b5       	in	r24, 0x28	; 40
    1608:	87 bd       	out	0x27, r24	; 39
    160a:	86 e0       	ldi	r24, 0x06	; 6
    160c:	60 e0       	ldi	r22, 0x00	; 0
    160e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN16OrangutanDigital9setOutputEhh>
    1612:	85 e0       	ldi	r24, 0x05	; 5
    1614:	60 e0       	ldi	r22, 0x00	; 0
    1616:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN16OrangutanDigital9setOutputEhh>
    161a:	8b e0       	ldi	r24, 0x0B	; 11
    161c:	60 e0       	ldi	r22, 0x00	; 0
    161e:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN16OrangutanDigital9setOutputEhh>
    1622:	83 e0       	ldi	r24, 0x03	; 3
    1624:	60 e0       	ldi	r22, 0x00	; 0
    1626:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <_ZN16OrangutanDigital9setOutputEhh>
    162a:	08 95       	ret

0000162c <_ZN15OrangutanMotors4initEv>:
    162c:	80 91 5c 01 	lds	r24, 0x015C
    1630:	88 23       	and	r24, r24
    1632:	29 f4       	brne	.+10     	; 0x163e <_ZN15OrangutanMotors4initEv+0x12>
    1634:	81 e0       	ldi	r24, 0x01	; 1
    1636:	80 93 5c 01 	sts	0x015C, r24
    163a:	0e 94 ee 0a 	call	0x15dc	; 0x15dc <_ZN15OrangutanMotors5init2Ev>
    163e:	08 95       	ret

00001640 <_ZN15OrangutanMotors10setM1SpeedEi>:
    1640:	cf 93       	push	r28
    1642:	df 93       	push	r29
    1644:	ec 01       	movw	r28, r24
    1646:	0e 94 16 0b 	call	0x162c	; 0x162c <_ZN15OrangutanMotors4initEv>
    164a:	d7 ff       	sbrs	r29, 7
    164c:	05 c0       	rjmp	.+10     	; 0x1658 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    164e:	d0 95       	com	r29
    1650:	c1 95       	neg	r28
    1652:	df 4f       	sbci	r29, 0xFF	; 255
    1654:	81 e0       	ldi	r24, 0x01	; 1
    1656:	01 c0       	rjmp	.+2      	; 0x165a <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1658:	80 e0       	ldi	r24, 0x00	; 0
    165a:	cf 3f       	cpi	r28, 0xFF	; 255
    165c:	d1 05       	cpc	r29, r1
    165e:	19 f0       	breq	.+6      	; 0x1666 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1660:	14 f0       	brlt	.+4      	; 0x1666 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1662:	cf ef       	ldi	r28, 0xFF	; 255
    1664:	d0 e0       	ldi	r29, 0x00	; 0
    1666:	88 23       	and	r24, r24
    1668:	19 f0       	breq	.+6      	; 0x1670 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    166a:	18 bc       	out	0x28, r1	; 40
    166c:	c7 bd       	out	0x27, r28	; 39
    166e:	02 c0       	rjmp	.+4      	; 0x1674 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1670:	c8 bd       	out	0x28, r28	; 40
    1672:	17 bc       	out	0x27, r1	; 39
    1674:	df 91       	pop	r29
    1676:	cf 91       	pop	r28
    1678:	08 95       	ret

0000167a <_ZN15OrangutanMotors10setM2SpeedEi>:
    167a:	cf 93       	push	r28
    167c:	df 93       	push	r29
    167e:	ec 01       	movw	r28, r24
    1680:	0e 94 16 0b 	call	0x162c	; 0x162c <_ZN15OrangutanMotors4initEv>
    1684:	d7 ff       	sbrs	r29, 7
    1686:	05 c0       	rjmp	.+10     	; 0x1692 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1688:	d0 95       	com	r29
    168a:	c1 95       	neg	r28
    168c:	df 4f       	sbci	r29, 0xFF	; 255
    168e:	81 e0       	ldi	r24, 0x01	; 1
    1690:	01 c0       	rjmp	.+2      	; 0x1694 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1692:	80 e0       	ldi	r24, 0x00	; 0
    1694:	cf 3f       	cpi	r28, 0xFF	; 255
    1696:	d1 05       	cpc	r29, r1
    1698:	19 f0       	breq	.+6      	; 0x16a0 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    169a:	14 f0       	brlt	.+4      	; 0x16a0 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    169c:	cf ef       	ldi	r28, 0xFF	; 255
    169e:	d0 e0       	ldi	r29, 0x00	; 0
    16a0:	88 23       	and	r24, r24
    16a2:	29 f0       	breq	.+10     	; 0x16ae <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    16a4:	10 92 b4 00 	sts	0x00B4, r1
    16a8:	c0 93 b3 00 	sts	0x00B3, r28
    16ac:	04 c0       	rjmp	.+8      	; 0x16b6 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    16ae:	c0 93 b4 00 	sts	0x00B4, r28
    16b2:	10 92 b3 00 	sts	0x00B3, r1
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	08 95       	ret

000016bc <_ZN15OrangutanMotors9setSpeedsEii>:
    16bc:	cf 93       	push	r28
    16be:	df 93       	push	r29
    16c0:	eb 01       	movw	r28, r22
    16c2:	0e 94 20 0b 	call	0x1640	; 0x1640 <_ZN15OrangutanMotors10setM1SpeedEi>
    16c6:	ce 01       	movw	r24, r28
    16c8:	0e 94 3d 0b 	call	0x167a	; 0x167a <_ZN15OrangutanMotors10setM2SpeedEi>
    16cc:	df 91       	pop	r29
    16ce:	cf 91       	pop	r28
    16d0:	08 95       	ret

000016d2 <set_motors>:
    16d2:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <_ZN15OrangutanMotors9setSpeedsEii>
    16d6:	08 95       	ret

000016d8 <_ZN20OrangutanPushbuttons5init2Ev>:
    16d8:	84 b1       	in	r24, 0x04	; 4
    16da:	8d 7c       	andi	r24, 0xCD	; 205
    16dc:	84 b9       	out	0x04, r24	; 4
    16de:	85 b1       	in	r24, 0x05	; 5
    16e0:	82 63       	ori	r24, 0x32	; 50
    16e2:	85 b9       	out	0x05, r24	; 5
    16e4:	85 e0       	ldi	r24, 0x05	; 5
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	6f 93       	push	r22
    16ea:	64 e0       	ldi	r22, 0x04	; 4
    16ec:	6a 95       	dec	r22
    16ee:	f1 f7       	brne	.-4      	; 0x16ec <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    16f0:	6f 91       	pop	r22
    16f2:	01 97       	sbiw	r24, 0x01	; 1
    16f4:	c9 f7       	brne	.-14     	; 0x16e8 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    16f6:	08 95       	ret

000016f8 <_ZN20OrangutanPushbuttons4initEv>:
    16f8:	80 91 5d 01 	lds	r24, 0x015D
    16fc:	88 23       	and	r24, r24
    16fe:	29 f4       	brne	.+10     	; 0x170a <_ZN20OrangutanPushbuttons4initEv+0x12>
    1700:	81 e0       	ldi	r24, 0x01	; 1
    1702:	80 93 5d 01 	sts	0x015D, r24
    1706:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <_ZN20OrangutanPushbuttons5init2Ev>
    170a:	08 95       	ret

0000170c <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    170c:	1f 93       	push	r17
    170e:	18 2f       	mov	r17, r24
    1710:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN20OrangutanPushbuttons4initEv>
    1714:	83 b1       	in	r24, 0x03	; 3
    1716:	81 23       	and	r24, r17
    1718:	e9 f3       	breq	.-6      	; 0x1714 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    171a:	8a e0       	ldi	r24, 0x0A	; 10
    171c:	90 e0       	ldi	r25, 0x00	; 0
    171e:	0e 94 ff 0b 	call	0x17fe	; 0x17fe <delay_ms>
    1722:	83 b1       	in	r24, 0x03	; 3
    1724:	81 23       	and	r24, r17
    1726:	b1 f3       	breq	.-20     	; 0x1714 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1728:	83 b1       	in	r24, 0x03	; 3
    172a:	81 23       	and	r24, r17
    172c:	1f 91       	pop	r17
    172e:	08 95       	ret

00001730 <wait_for_button_release>:
    1730:	0e 94 86 0b 	call	0x170c	; 0x170c <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1734:	08 95       	ret

00001736 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1736:	a1 e0       	ldi	r26, 0x01	; 1
    1738:	b0 e0       	ldi	r27, 0x00	; 0
    173a:	e1 ea       	ldi	r30, 0xA1	; 161
    173c:	fb e0       	ldi	r31, 0x0B	; 11
    173e:	0c 94 4d 12 	jmp	0x249a	; 0x249a <__prologue_saves__+0x20>
    1742:	89 83       	std	Y+1, r24	; 0x01
    1744:	0e 94 7c 0b 	call	0x16f8	; 0x16f8 <_ZN20OrangutanPushbuttons4initEv>
    1748:	93 b1       	in	r25, 0x03	; 3
    174a:	90 95       	com	r25
    174c:	89 81       	ldd	r24, Y+1	; 0x01
    174e:	89 23       	and	r24, r25
    1750:	21 96       	adiw	r28, 0x01	; 1
    1752:	e2 e0       	ldi	r30, 0x02	; 2
    1754:	0c 94 69 12 	jmp	0x24d2	; 0x24d2 <__epilogue_restores__+0x20>

00001758 <button_is_pressed>:
    1758:	0e 94 9b 0b 	call	0x1736	; 0x1736 <_ZN20OrangutanPushbuttons9isPressedEh>
    175c:	08 95       	ret

0000175e <_ZN13OrangutanTime17delayMicrosecondsEj>:
    175e:	6f 93       	push	r22
    1760:	64 e0       	ldi	r22, 0x04	; 4
    1762:	6a 95       	dec	r22
    1764:	f1 f7       	brne	.-4      	; 0x1762 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    1766:	6f 91       	pop	r22
    1768:	01 97       	sbiw	r24, 0x01	; 1
    176a:	c9 f7       	brne	.-14     	; 0x175e <_ZN13OrangutanTime17delayMicrosecondsEj>
    176c:	08 95       	ret

0000176e <__vector_9>:
    176e:	2f 92       	push	r2
    1770:	8f 93       	push	r24
    1772:	9f 93       	push	r25
    1774:	2f b6       	in	r2, 0x3f	; 63
    1776:	80 91 6b 01 	lds	r24, 0x016B
    177a:	90 91 6c 01 	lds	r25, 0x016C
    177e:	01 96       	adiw	r24, 0x01	; 1
    1780:	80 93 6b 01 	sts	0x016B, r24
    1784:	90 93 6c 01 	sts	0x016C, r25
    1788:	90 e0       	ldi	r25, 0x00	; 0
    178a:	80 91 6d 01 	lds	r24, 0x016D
    178e:	89 1f       	adc	r24, r25
    1790:	80 93 6d 01 	sts	0x016D, r24
    1794:	90 91 73 01 	lds	r25, 0x0173
    1798:	9c 5f       	subi	r25, 0xFC	; 252
    179a:	90 93 73 01 	sts	0x0173, r25
    179e:	80 91 72 01 	lds	r24, 0x0172
    17a2:	80 51       	subi	r24, 0x10	; 16
    17a4:	97 42       	sbci	r25, 0x27	; 39
    17a6:	c0 f0       	brcs	.+48     	; 0x17d8 <end>
    17a8:	90 93 73 01 	sts	0x0173, r25
    17ac:	80 93 72 01 	sts	0x0172, r24
    17b0:	80 91 6e 01 	lds	r24, 0x016E
    17b4:	90 91 6f 01 	lds	r25, 0x016F
    17b8:	01 96       	adiw	r24, 0x01	; 1
    17ba:	80 93 6e 01 	sts	0x016E, r24
    17be:	90 93 6f 01 	sts	0x016F, r25
    17c2:	90 e0       	ldi	r25, 0x00	; 0
    17c4:	80 91 70 01 	lds	r24, 0x0170
    17c8:	89 1f       	adc	r24, r25
    17ca:	80 93 70 01 	sts	0x0170, r24
    17ce:	80 91 71 01 	lds	r24, 0x0171
    17d2:	89 1f       	adc	r24, r25
    17d4:	80 93 71 01 	sts	0x0171, r24

000017d8 <end>:
    17d8:	2f be       	out	0x3f, r2	; 63
    17da:	9f 91       	pop	r25
    17dc:	8f 91       	pop	r24
    17de:	2f 90       	pop	r2
    17e0:	18 95       	reti

000017e2 <_ZN13OrangutanTime17delayMillisecondsEj>:
    17e2:	cf 93       	push	r28
    17e4:	df 93       	push	r29
    17e6:	ec 01       	movw	r28, r24
    17e8:	05 c0       	rjmp	.+10     	; 0x17f4 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    17ea:	88 ee       	ldi	r24, 0xE8	; 232
    17ec:	93 e0       	ldi	r25, 0x03	; 3
    17ee:	0e 94 af 0b 	call	0x175e	; 0x175e <_ZN13OrangutanTime17delayMicrosecondsEj>
    17f2:	21 97       	sbiw	r28, 0x01	; 1
    17f4:	20 97       	sbiw	r28, 0x00	; 0
    17f6:	c9 f7       	brne	.-14     	; 0x17ea <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    17f8:	df 91       	pop	r29
    17fa:	cf 91       	pop	r28
    17fc:	08 95       	ret

000017fe <delay_ms>:
    17fe:	0e 94 f1 0b 	call	0x17e2	; 0x17e2 <_ZN13OrangutanTime17delayMillisecondsEj>
    1802:	08 95       	ret

00001804 <_ZN13OrangutanTime5init2Ev>:
    1804:	e0 e7       	ldi	r30, 0x70	; 112
    1806:	f0 e0       	ldi	r31, 0x00	; 0
    1808:	80 81       	ld	r24, Z
    180a:	8e 7f       	andi	r24, 0xFE	; 254
    180c:	80 83       	st	Z, r24
    180e:	a0 eb       	ldi	r26, 0xB0	; 176
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	8c 91       	ld	r24, X
    1814:	83 60       	ori	r24, 0x03	; 3
    1816:	8c 93       	st	X, r24
    1818:	a1 eb       	ldi	r26, 0xB1	; 177
    181a:	b0 e0       	ldi	r27, 0x00	; 0
    181c:	8c 91       	ld	r24, X
    181e:	80 7f       	andi	r24, 0xF0	; 240
    1820:	8c 93       	st	X, r24
    1822:	8c 91       	ld	r24, X
    1824:	82 60       	ori	r24, 0x02	; 2
    1826:	8c 93       	st	X, r24
    1828:	b8 9a       	sbi	0x17, 0	; 23
    182a:	80 81       	ld	r24, Z
    182c:	81 60       	ori	r24, 0x01	; 1
    182e:	80 83       	st	Z, r24
    1830:	78 94       	sei
    1832:	08 95       	ret

00001834 <_ZN13OrangutanTime4initEv>:
    1834:	80 91 74 01 	lds	r24, 0x0174
    1838:	88 23       	and	r24, r24
    183a:	29 f4       	brne	.+10     	; 0x1846 <_ZN13OrangutanTime4initEv+0x12>
    183c:	81 e0       	ldi	r24, 0x01	; 1
    183e:	80 93 74 01 	sts	0x0174, r24
    1842:	0e 94 02 0c 	call	0x1804	; 0x1804 <_ZN13OrangutanTime5init2Ev>
    1846:	08 95       	ret

00001848 <_ZN13OrangutanTime5resetEv>:
    1848:	0e 94 1a 0c 	call	0x1834	; 0x1834 <_ZN13OrangutanTime4initEv>
    184c:	e0 e7       	ldi	r30, 0x70	; 112
    184e:	f0 e0       	ldi	r31, 0x00	; 0
    1850:	80 81       	ld	r24, Z
    1852:	8e 7f       	andi	r24, 0xFE	; 254
    1854:	80 83       	st	Z, r24
    1856:	10 92 6e 01 	sts	0x016E, r1
    185a:	10 92 6f 01 	sts	0x016F, r1
    185e:	10 92 70 01 	sts	0x0170, r1
    1862:	10 92 71 01 	sts	0x0171, r1
    1866:	10 92 73 01 	sts	0x0173, r1
    186a:	10 92 72 01 	sts	0x0172, r1
    186e:	80 81       	ld	r24, Z
    1870:	81 60       	ori	r24, 0x01	; 1
    1872:	80 83       	st	Z, r24
    1874:	08 95       	ret

00001876 <calibrate_line_sensors>:
    1876:	68 2f       	mov	r22, r24
    1878:	85 e7       	ldi	r24, 0x75	; 117
    187a:	91 e0       	ldi	r25, 0x01	; 1
    187c:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <_ZN16PololuQTRSensors9calibrateEh>
    1880:	08 95       	ret

00001882 <read_line>:
    1882:	9c 01       	movw	r18, r24
    1884:	46 2f       	mov	r20, r22
    1886:	85 e7       	ldi	r24, 0x75	; 117
    1888:	91 e0       	ldi	r25, 0x01	; 1
    188a:	b9 01       	movw	r22, r18
    188c:	20 e0       	ldi	r18, 0x00	; 0
    188e:	0e 94 c9 0f 	call	0x1f92	; 0x1f92 <_ZN16PololuQTRSensors8readLineEPjhh>
    1892:	08 95       	ret

00001894 <_ZN9Pololu3pi4initEjh>:
    1894:	0f 93       	push	r16
    1896:	df 93       	push	r29
    1898:	cf 93       	push	r28
    189a:	00 d0       	rcall	.+0      	; 0x189c <_ZN9Pololu3pi4initEjh+0x8>
    189c:	00 d0       	rcall	.+0      	; 0x189e <_ZN9Pololu3pi4initEjh+0xa>
    189e:	0f 92       	push	r0
    18a0:	cd b7       	in	r28, 0x3d	; 61
    18a2:	de b7       	in	r29, 0x3e	; 62
    18a4:	9c 01       	movw	r18, r24
    18a6:	96 2f       	mov	r25, r22
    18a8:	de 01       	movw	r26, r28
    18aa:	11 96       	adiw	r26, 0x01	; 1
    18ac:	e6 e2       	ldi	r30, 0x26	; 38
    18ae:	f1 e0       	ldi	r31, 0x01	; 1
    18b0:	85 e0       	ldi	r24, 0x05	; 5
    18b2:	01 90       	ld	r0, Z+
    18b4:	0d 92       	st	X+, r0
    18b6:	81 50       	subi	r24, 0x01	; 1
    18b8:	e1 f7       	brne	.-8      	; 0x18b2 <_ZN9Pololu3pi4initEjh+0x1e>
    18ba:	be 01       	movw	r22, r28
    18bc:	6f 5f       	subi	r22, 0xFF	; 255
    18be:	7f 4f       	sbci	r23, 0xFF	; 255
    18c0:	99 23       	and	r25, r25
    18c2:	29 f0       	breq	.+10     	; 0x18ce <_ZN9Pololu3pi4initEjh+0x3a>
    18c4:	85 e7       	ldi	r24, 0x75	; 117
    18c6:	91 e0       	ldi	r25, 0x01	; 1
    18c8:	45 e0       	ldi	r20, 0x05	; 5
    18ca:	0f ef       	ldi	r16, 0xFF	; 255
    18cc:	04 c0       	rjmp	.+8      	; 0x18d6 <_ZN9Pololu3pi4initEjh+0x42>
    18ce:	85 e7       	ldi	r24, 0x75	; 117
    18d0:	91 e0       	ldi	r25, 0x01	; 1
    18d2:	45 e0       	ldi	r20, 0x05	; 5
    18d4:	03 e1       	ldi	r16, 0x13	; 19
    18d6:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    18da:	85 e7       	ldi	r24, 0x75	; 117
    18dc:	91 e0       	ldi	r25, 0x01	; 1
    18de:	0e 94 bb 0c 	call	0x1976	; 0x1976 <_ZN16PololuQTRSensors11emittersOffEv>
    18e2:	0e 94 24 0c 	call	0x1848	; 0x1848 <_ZN13OrangutanTime5resetEv>
    18e6:	0f 90       	pop	r0
    18e8:	0f 90       	pop	r0
    18ea:	0f 90       	pop	r0
    18ec:	0f 90       	pop	r0
    18ee:	0f 90       	pop	r0
    18f0:	cf 91       	pop	r28
    18f2:	df 91       	pop	r29
    18f4:	0f 91       	pop	r16
    18f6:	08 95       	ret

000018f8 <pololu_3pi_init>:
    18f8:	60 e0       	ldi	r22, 0x00	; 0
    18fa:	0e 94 4a 0c 	call	0x1894	; 0x1894 <_ZN9Pololu3pi4initEjh>
    18fe:	08 95       	ret

00001900 <_GLOBAL__I_pololu_3pi_init>:
    1900:	08 95       	ret

00001902 <_GLOBAL__D_pololu_3pi_init>:
    1902:	85 e7       	ldi	r24, 0x75	; 117
    1904:	91 e0       	ldi	r25, 0x01	; 1
    1906:	0e 94 8f 11 	call	0x231e	; 0x231e <_ZN16PololuQTRSensorsD1Ev>
    190a:	08 95       	ret

0000190c <delayMicroseconds>:
    190c:	6f 93       	push	r22
    190e:	64 e0       	ldi	r22, 0x04	; 4
    1910:	6a 95       	dec	r22
    1912:	f1 f7       	brne	.-4      	; 0x1910 <delayMicroseconds+0x4>
    1914:	6f 91       	pop	r22
    1916:	01 97       	sbiw	r24, 0x01	; 1
    1918:	c9 f7       	brne	.-14     	; 0x190c <delayMicroseconds>
    191a:	08 95       	ret

0000191c <_ZN16PololuQTRSensors4initEhhh>:
    191c:	a7 e0       	ldi	r26, 0x07	; 7
    191e:	b0 e0       	ldi	r27, 0x00	; 0
    1920:	e4 e9       	ldi	r30, 0x94	; 148
    1922:	fc e0       	ldi	r31, 0x0C	; 12
    1924:	0c 94 4b 12 	jmp	0x2496	; 0x2496 <__prologue_saves__+0x1c>
    1928:	8c 01       	movw	r16, r24
    192a:	fc 01       	movw	r30, r24
    192c:	11 82       	std	Z+1, r1	; 0x01
    192e:	10 82       	st	Z, r1
    1930:	13 82       	std	Z+3, r1	; 0x03
    1932:	12 82       	std	Z+2, r1	; 0x02
    1934:	15 82       	std	Z+5, r1	; 0x05
    1936:	14 82       	std	Z+4, r1	; 0x04
    1938:	17 82       	std	Z+7, r1	; 0x07
    193a:	16 82       	std	Z+6, r1	; 0x06
    193c:	61 31       	cpi	r22, 0x11	; 17
    193e:	18 f0       	brcs	.+6      	; 0x1946 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1940:	80 e1       	ldi	r24, 0x10	; 16
    1942:	80 87       	std	Z+8, r24	; 0x08
    1944:	02 c0       	rjmp	.+4      	; 0x194a <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1946:	fc 01       	movw	r30, r24
    1948:	60 87       	std	Z+8, r22	; 0x08
    194a:	f8 01       	movw	r30, r16
    194c:	20 8b       	std	Z+16, r18	; 0x10
    194e:	ce 01       	movw	r24, r28
    1950:	01 96       	adiw	r24, 0x01	; 1
    1952:	64 2f       	mov	r22, r20
    1954:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1958:	8f 81       	ldd	r24, Y+7	; 0x07
    195a:	f8 01       	movw	r30, r16
    195c:	81 87       	std	Z+9, r24	; 0x09
    195e:	8b 81       	ldd	r24, Y+3	; 0x03
    1960:	9c 81       	ldd	r25, Y+4	; 0x04
    1962:	93 87       	std	Z+11, r25	; 0x0b
    1964:	82 87       	std	Z+10, r24	; 0x0a
    1966:	8d 81       	ldd	r24, Y+5	; 0x05
    1968:	9e 81       	ldd	r25, Y+6	; 0x06
    196a:	95 87       	std	Z+13, r25	; 0x0d
    196c:	84 87       	std	Z+12, r24	; 0x0c
    196e:	27 96       	adiw	r28, 0x07	; 7
    1970:	e4 e0       	ldi	r30, 0x04	; 4
    1972:	0c 94 67 12 	jmp	0x24ce	; 0x24ce <__epilogue_restores__+0x1c>

00001976 <_ZN16PololuQTRSensors11emittersOffEv>:
    1976:	fc 01       	movw	r30, r24
    1978:	a4 85       	ldd	r26, Z+12	; 0x0c
    197a:	b5 85       	ldd	r27, Z+13	; 0x0d
    197c:	10 97       	sbiw	r26, 0x00	; 0
    197e:	79 f0       	breq	.+30     	; 0x199e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1980:	8c 91       	ld	r24, X
    1982:	91 85       	ldd	r25, Z+9	; 0x09
    1984:	89 2b       	or	r24, r25
    1986:	8c 93       	st	X, r24
    1988:	a2 85       	ldd	r26, Z+10	; 0x0a
    198a:	b3 85       	ldd	r27, Z+11	; 0x0b
    198c:	9c 91       	ld	r25, X
    198e:	81 85       	ldd	r24, Z+9	; 0x09
    1990:	80 95       	com	r24
    1992:	89 23       	and	r24, r25
    1994:	8c 93       	st	X, r24
    1996:	88 ec       	ldi	r24, 0xC8	; 200
    1998:	90 e0       	ldi	r25, 0x00	; 0
    199a:	0e 94 86 0c 	call	0x190c	; 0x190c <delayMicroseconds>
    199e:	08 95       	ret

000019a0 <_ZN16PololuQTRSensors10emittersOnEv>:
    19a0:	fc 01       	movw	r30, r24
    19a2:	a4 85       	ldd	r26, Z+12	; 0x0c
    19a4:	b5 85       	ldd	r27, Z+13	; 0x0d
    19a6:	10 97       	sbiw	r26, 0x00	; 0
    19a8:	71 f0       	breq	.+28     	; 0x19c6 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    19aa:	8c 91       	ld	r24, X
    19ac:	91 85       	ldd	r25, Z+9	; 0x09
    19ae:	89 2b       	or	r24, r25
    19b0:	8c 93       	st	X, r24
    19b2:	a2 85       	ldd	r26, Z+10	; 0x0a
    19b4:	b3 85       	ldd	r27, Z+11	; 0x0b
    19b6:	8c 91       	ld	r24, X
    19b8:	91 85       	ldd	r25, Z+9	; 0x09
    19ba:	89 2b       	or	r24, r25
    19bc:	8c 93       	st	X, r24
    19be:	88 ec       	ldi	r24, 0xC8	; 200
    19c0:	90 e0       	ldi	r25, 0x00	; 0
    19c2:	0e 94 86 0c 	call	0x190c	; 0x190c <delayMicroseconds>
    19c6:	08 95       	ret

000019c8 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    19c8:	a7 e0       	ldi	r26, 0x07	; 7
    19ca:	b0 e0       	ldi	r27, 0x00	; 0
    19cc:	ea ee       	ldi	r30, 0xEA	; 234
    19ce:	fc e0       	ldi	r31, 0x0C	; 12
    19d0:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__prologue_saves__>
    19d4:	7c 01       	movw	r14, r24
    19d6:	1b 01       	movw	r2, r22
    19d8:	64 2f       	mov	r22, r20
    19da:	39 01       	movw	r6, r18
    19dc:	40 2f       	mov	r20, r16
    19de:	20 e0       	ldi	r18, 0x00	; 0
    19e0:	0e 94 8e 0c 	call	0x191c	; 0x191c <_ZN16PololuQTRSensors4initEhhh>
    19e4:	97 01       	movw	r18, r14
    19e6:	2f 5b       	subi	r18, 0xBF	; 191
    19e8:	3f 4f       	sbci	r19, 0xFF	; 255
    19ea:	f9 01       	movw	r30, r18
    19ec:	10 82       	st	Z, r1
    19ee:	d7 01       	movw	r26, r14
    19f0:	ae 5b       	subi	r26, 0xBE	; 190
    19f2:	bf 4f       	sbci	r27, 0xFF	; 255
    19f4:	1c 92       	st	X, r1
    19f6:	c7 01       	movw	r24, r14
    19f8:	8d 5b       	subi	r24, 0xBD	; 189
    19fa:	9f 4f       	sbci	r25, 0xFF	; 255
    19fc:	fc 01       	movw	r30, r24
    19fe:	10 82       	st	Z, r1
    1a00:	f7 01       	movw	r30, r14
    1a02:	77 86       	std	Z+15, r7	; 0x0f
    1a04:	66 86       	std	Z+14, r6	; 0x0e
    1a06:	66 24       	eor	r6, r6
    1a08:	2e 01       	movw	r4, r28
    1a0a:	08 94       	sec
    1a0c:	41 1c       	adc	r4, r1
    1a0e:	51 1c       	adc	r5, r1
    1a10:	6c 01       	movw	r12, r24
    1a12:	5d 01       	movw	r10, r26
    1a14:	49 01       	movw	r8, r18
    1a16:	29 c0       	rjmp	.+82     	; 0x1a6a <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1a18:	06 2d       	mov	r16, r6
    1a1a:	10 e0       	ldi	r17, 0x00	; 0
    1a1c:	f1 01       	movw	r30, r2
    1a1e:	e0 0f       	add	r30, r16
    1a20:	f1 1f       	adc	r31, r17
    1a22:	c2 01       	movw	r24, r4
    1a24:	60 81       	ld	r22, Z
    1a26:	0e 94 62 0a 	call	0x14c4	; 0x14c4 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1a2a:	2f 81       	ldd	r18, Y+7	; 0x07
    1a2c:	f7 01       	movw	r30, r14
    1a2e:	e0 0f       	add	r30, r16
    1a30:	f1 1f       	adc	r31, r17
    1a32:	21 8b       	std	Z+17, r18	; 0x11
    1a34:	89 81       	ldd	r24, Y+1	; 0x01
    1a36:	9a 81       	ldd	r25, Y+2	; 0x02
    1a38:	f8 01       	movw	r30, r16
    1a3a:	ee 0f       	add	r30, r30
    1a3c:	ff 1f       	adc	r31, r31
    1a3e:	ee 0d       	add	r30, r14
    1a40:	ff 1d       	adc	r31, r15
    1a42:	92 a3       	std	Z+34, r25	; 0x22
    1a44:	81 a3       	std	Z+33, r24	; 0x21
    1a46:	83 32       	cpi	r24, 0x23	; 35
    1a48:	91 05       	cpc	r25, r1
    1a4a:	11 f4       	brne	.+4      	; 0x1a50 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1a4c:	f4 01       	movw	r30, r8
    1a4e:	09 c0       	rjmp	.+18     	; 0x1a62 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1a50:	86 32       	cpi	r24, 0x26	; 38
    1a52:	91 05       	cpc	r25, r1
    1a54:	11 f4       	brne	.+4      	; 0x1a5a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1a56:	f5 01       	movw	r30, r10
    1a58:	04 c0       	rjmp	.+8      	; 0x1a62 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1a5a:	89 32       	cpi	r24, 0x29	; 41
    1a5c:	91 05       	cpc	r25, r1
    1a5e:	21 f4       	brne	.+8      	; 0x1a68 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    1a60:	f6 01       	movw	r30, r12
    1a62:	80 81       	ld	r24, Z
    1a64:	82 2b       	or	r24, r18
    1a66:	80 83       	st	Z, r24
    1a68:	63 94       	inc	r6
    1a6a:	f7 01       	movw	r30, r14
    1a6c:	80 85       	ldd	r24, Z+8	; 0x08
    1a6e:	68 16       	cp	r6, r24
    1a70:	98 f2       	brcs	.-90     	; 0x1a18 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1a72:	27 96       	adiw	r28, 0x07	; 7
    1a74:	e2 e1       	ldi	r30, 0x12	; 18
    1a76:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__epilogue_restores__>

00001a7a <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1a7a:	a0 e0       	ldi	r26, 0x00	; 0
    1a7c:	b0 e0       	ldi	r27, 0x00	; 0
    1a7e:	e3 e4       	ldi	r30, 0x43	; 67
    1a80:	fd e0       	ldi	r31, 0x0D	; 13
    1a82:	0c 94 42 12 	jmp	0x2484	; 0x2484 <__prologue_saves__+0xa>
    1a86:	ec 01       	movw	r28, r24
    1a88:	5b 01       	movw	r10, r22
    1a8a:	fc 01       	movw	r30, r24
    1a8c:	ef 5b       	subi	r30, 0xBF	; 191
    1a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a90:	90 80       	ld	r9, Z
    1a92:	fc 01       	movw	r30, r24
    1a94:	ee 5b       	subi	r30, 0xBE	; 190
    1a96:	ff 4f       	sbci	r31, 0xFF	; 255
    1a98:	80 80       	ld	r8, Z
    1a9a:	fc 01       	movw	r30, r24
    1a9c:	ed 5b       	subi	r30, 0xBD	; 189
    1a9e:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa0:	70 80       	ld	r7, Z
    1aa2:	80 e0       	ldi	r24, 0x00	; 0
    1aa4:	09 c0       	rjmp	.+18     	; 0x1ab8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1aa6:	e8 2f       	mov	r30, r24
    1aa8:	f0 e0       	ldi	r31, 0x00	; 0
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	ea 0d       	add	r30, r10
    1ab0:	fb 1d       	adc	r31, r11
    1ab2:	11 82       	std	Z+1, r1	; 0x01
    1ab4:	10 82       	st	Z, r1
    1ab6:	8f 5f       	subi	r24, 0xFF	; 255
    1ab8:	98 85       	ldd	r25, Y+8	; 0x08
    1aba:	89 17       	cp	r24, r25
    1abc:	a0 f3       	brcs	.-24     	; 0x1aa6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1abe:	84 b1       	in	r24, 0x04	; 4
    1ac0:	21 e4       	ldi	r18, 0x41	; 65
    1ac2:	e2 2e       	mov	r14, r18
    1ac4:	f1 2c       	mov	r15, r1
    1ac6:	ec 0e       	add	r14, r28
    1ac8:	fd 1e       	adc	r15, r29
    1aca:	d7 01       	movw	r26, r14
    1acc:	9c 91       	ld	r25, X
    1ace:	89 2b       	or	r24, r25
    1ad0:	84 b9       	out	0x04, r24	; 4
    1ad2:	87 b1       	in	r24, 0x07	; 7
    1ad4:	8e 01       	movw	r16, r28
    1ad6:	0e 5b       	subi	r16, 0xBE	; 190
    1ad8:	1f 4f       	sbci	r17, 0xFF	; 255
    1ada:	f8 01       	movw	r30, r16
    1adc:	90 81       	ld	r25, Z
    1ade:	89 2b       	or	r24, r25
    1ae0:	87 b9       	out	0x07, r24	; 7
    1ae2:	8a b1       	in	r24, 0x0a	; 10
    1ae4:	93 e4       	ldi	r25, 0x43	; 67
    1ae6:	c9 2e       	mov	r12, r25
    1ae8:	d1 2c       	mov	r13, r1
    1aea:	cc 0e       	add	r12, r28
    1aec:	dd 1e       	adc	r13, r29
    1aee:	d6 01       	movw	r26, r12
    1af0:	9c 91       	ld	r25, X
    1af2:	89 2b       	or	r24, r25
    1af4:	8a b9       	out	0x0a, r24	; 10
    1af6:	85 b1       	in	r24, 0x05	; 5
    1af8:	f7 01       	movw	r30, r14
    1afa:	90 81       	ld	r25, Z
    1afc:	89 2b       	or	r24, r25
    1afe:	85 b9       	out	0x05, r24	; 5
    1b00:	88 b1       	in	r24, 0x08	; 8
    1b02:	d8 01       	movw	r26, r16
    1b04:	9c 91       	ld	r25, X
    1b06:	89 2b       	or	r24, r25
    1b08:	88 b9       	out	0x08, r24	; 8
    1b0a:	8b b1       	in	r24, 0x0b	; 11
    1b0c:	f6 01       	movw	r30, r12
    1b0e:	90 81       	ld	r25, Z
    1b10:	89 2b       	or	r24, r25
    1b12:	8b b9       	out	0x0b, r24	; 11
    1b14:	8a e0       	ldi	r24, 0x0A	; 10
    1b16:	90 e0       	ldi	r25, 0x00	; 0
    1b18:	0e 94 86 0c 	call	0x190c	; 0x190c <delayMicroseconds>
    1b1c:	94 b1       	in	r25, 0x04	; 4
    1b1e:	d7 01       	movw	r26, r14
    1b20:	8c 91       	ld	r24, X
    1b22:	80 95       	com	r24
    1b24:	89 23       	and	r24, r25
    1b26:	84 b9       	out	0x04, r24	; 4
    1b28:	97 b1       	in	r25, 0x07	; 7
    1b2a:	f8 01       	movw	r30, r16
    1b2c:	80 81       	ld	r24, Z
    1b2e:	80 95       	com	r24
    1b30:	89 23       	and	r24, r25
    1b32:	87 b9       	out	0x07, r24	; 7
    1b34:	9a b1       	in	r25, 0x0a	; 10
    1b36:	d6 01       	movw	r26, r12
    1b38:	8c 91       	ld	r24, X
    1b3a:	80 95       	com	r24
    1b3c:	89 23       	and	r24, r25
    1b3e:	8a b9       	out	0x0a, r24	; 10
    1b40:	95 b1       	in	r25, 0x05	; 5
    1b42:	f7 01       	movw	r30, r14
    1b44:	80 81       	ld	r24, Z
    1b46:	80 95       	com	r24
    1b48:	89 23       	and	r24, r25
    1b4a:	85 b9       	out	0x05, r24	; 5
    1b4c:	98 b1       	in	r25, 0x08	; 8
    1b4e:	d8 01       	movw	r26, r16
    1b50:	8c 91       	ld	r24, X
    1b52:	80 95       	com	r24
    1b54:	89 23       	and	r24, r25
    1b56:	88 b9       	out	0x08, r24	; 8
    1b58:	9b b1       	in	r25, 0x0b	; 11
    1b5a:	f6 01       	movw	r30, r12
    1b5c:	80 81       	ld	r24, Z
    1b5e:	80 95       	com	r24
    1b60:	89 23       	and	r24, r25
    1b62:	8b b9       	out	0x0b, r24	; 11
    1b64:	c0 90 b0 00 	lds	r12, 0x00B0
    1b68:	e0 90 b1 00 	lds	r14, 0x00B1
    1b6c:	80 91 b0 00 	lds	r24, 0x00B0
    1b70:	83 60       	ori	r24, 0x03	; 3
    1b72:	80 93 b0 00 	sts	0x00B0, r24
    1b76:	82 e0       	ldi	r24, 0x02	; 2
    1b78:	80 93 b1 00 	sts	0x00B1, r24
    1b7c:	00 91 b2 00 	lds	r16, 0x00B2
    1b80:	80 e0       	ldi	r24, 0x00	; 0
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	39 c0       	rjmp	.+114    	; 0x1bf8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1b86:	20 91 b2 00 	lds	r18, 0x00B2
    1b8a:	20 1b       	sub	r18, r16
    1b8c:	82 0f       	add	r24, r18
    1b8e:	91 1d       	adc	r25, r1
    1b90:	02 0f       	add	r16, r18
    1b92:	f3 b0       	in	r15, 0x03	; 3
    1b94:	f9 14       	cp	r15, r9
    1b96:	09 f0       	breq	.+2      	; 0x1b9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1b98:	4d c0       	rjmp	.+154    	; 0x1c34 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1b9a:	96 b0       	in	r9, 0x06	; 6
    1b9c:	98 14       	cp	r9, r8
    1b9e:	09 f0       	breq	.+2      	; 0x1ba2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1ba0:	49 c0       	rjmp	.+146    	; 0x1c34 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1ba2:	29 b1       	in	r18, 0x09	; 9
    1ba4:	27 15       	cp	r18, r7
    1ba6:	09 f0       	breq	.+2      	; 0x1baa <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1ba8:	45 c0       	rjmp	.+138    	; 0x1c34 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1baa:	24 c0       	rjmp	.+72     	; 0x1bf4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1bac:	21 2f       	mov	r18, r17
    1bae:	30 e0       	ldi	r19, 0x00	; 0
    1bb0:	a9 01       	movw	r20, r18
    1bb2:	44 0f       	add	r20, r20
    1bb4:	55 1f       	adc	r21, r21
    1bb6:	f5 01       	movw	r30, r10
    1bb8:	e4 0f       	add	r30, r20
    1bba:	f5 1f       	adc	r31, r21
    1bbc:	60 81       	ld	r22, Z
    1bbe:	71 81       	ldd	r23, Z+1	; 0x01
    1bc0:	61 15       	cp	r22, r1
    1bc2:	71 05       	cpc	r23, r1
    1bc4:	99 f4       	brne	.+38     	; 0x1bec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1bc6:	4c 0f       	add	r20, r28
    1bc8:	5d 1f       	adc	r21, r29
    1bca:	da 01       	movw	r26, r20
    1bcc:	91 96       	adiw	r26, 0x21	; 33
    1bce:	4d 91       	ld	r20, X+
    1bd0:	5c 91       	ld	r21, X
    1bd2:	92 97       	sbiw	r26, 0x22	; 34
    1bd4:	da 01       	movw	r26, r20
    1bd6:	4c 91       	ld	r20, X
    1bd8:	2c 0f       	add	r18, r28
    1bda:	3d 1f       	adc	r19, r29
    1bdc:	d9 01       	movw	r26, r18
    1bde:	51 96       	adiw	r26, 0x11	; 17
    1be0:	2c 91       	ld	r18, X
    1be2:	51 97       	sbiw	r26, 0x11	; 17
    1be4:	42 23       	and	r20, r18
    1be6:	11 f4       	brne	.+4      	; 0x1bec <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1be8:	91 83       	std	Z+1, r25	; 0x01
    1bea:	80 83       	st	Z, r24
    1bec:	1f 5f       	subi	r17, 0xFF	; 255
    1bee:	28 85       	ldd	r18, Y+8	; 0x08
    1bf0:	12 17       	cp	r17, r18
    1bf2:	e0 f2       	brcs	.-72     	; 0x1bac <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1bf4:	89 2c       	mov	r8, r9
    1bf6:	9f 2c       	mov	r9, r15
    1bf8:	2e 85       	ldd	r18, Y+14	; 0x0e
    1bfa:	3f 85       	ldd	r19, Y+15	; 0x0f
    1bfc:	82 17       	cp	r24, r18
    1bfe:	93 07       	cpc	r25, r19
    1c00:	10 f2       	brcs	.-124    	; 0x1b86 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1c02:	c0 92 b0 00 	sts	0x00B0, r12
    1c06:	e0 92 b1 00 	sts	0x00B1, r14
    1c0a:	20 e0       	ldi	r18, 0x00	; 0
    1c0c:	0f c0       	rjmp	.+30     	; 0x1c2c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1c0e:	e2 2f       	mov	r30, r18
    1c10:	f0 e0       	ldi	r31, 0x00	; 0
    1c12:	ee 0f       	add	r30, r30
    1c14:	ff 1f       	adc	r31, r31
    1c16:	ea 0d       	add	r30, r10
    1c18:	fb 1d       	adc	r31, r11
    1c1a:	80 81       	ld	r24, Z
    1c1c:	91 81       	ldd	r25, Z+1	; 0x01
    1c1e:	00 97       	sbiw	r24, 0x00	; 0
    1c20:	21 f4       	brne	.+8      	; 0x1c2a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1c22:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c24:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c26:	91 83       	std	Z+1, r25	; 0x01
    1c28:	80 83       	st	Z, r24
    1c2a:	2f 5f       	subi	r18, 0xFF	; 255
    1c2c:	88 85       	ldd	r24, Y+8	; 0x08
    1c2e:	28 17       	cp	r18, r24
    1c30:	70 f3       	brcs	.-36     	; 0x1c0e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1c32:	05 c0       	rjmp	.+10     	; 0x1c3e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1c34:	f3 b0       	in	r15, 0x03	; 3
    1c36:	96 b0       	in	r9, 0x06	; 6
    1c38:	79 b0       	in	r7, 0x09	; 9
    1c3a:	10 e0       	ldi	r17, 0x00	; 0
    1c3c:	d8 cf       	rjmp	.-80     	; 0x1bee <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1c3e:	cd b7       	in	r28, 0x3d	; 61
    1c40:	de b7       	in	r29, 0x3e	; 62
    1c42:	ed e0       	ldi	r30, 0x0D	; 13
    1c44:	0c 94 5e 12 	jmp	0x24bc	; 0x24bc <__epilogue_restores__+0xa>

00001c48 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1c48:	ef 92       	push	r14
    1c4a:	ff 92       	push	r15
    1c4c:	0f 93       	push	r16
    1c4e:	1f 93       	push	r17
    1c50:	cf 93       	push	r28
    1c52:	df 93       	push	r29
    1c54:	fc 01       	movw	r30, r24
    1c56:	9b 01       	movw	r18, r22
    1c58:	00 91 7c 00 	lds	r16, 0x007C
    1c5c:	10 91 7a 00 	lds	r17, 0x007A
    1c60:	e7 b0       	in	r14, 0x07	; 7
    1c62:	f8 b0       	in	r15, 0x08	; 8
    1c64:	80 91 7a 00 	lds	r24, 0x007A
    1c68:	86 fd       	sbrc	r24, 6
    1c6a:	fc cf       	rjmp	.-8      	; 0x1c64 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1c6c:	80 e0       	ldi	r24, 0x00	; 0
    1c6e:	0a c0       	rjmp	.+20     	; 0x1c84 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1c70:	a8 2f       	mov	r26, r24
    1c72:	b0 e0       	ldi	r27, 0x00	; 0
    1c74:	aa 0f       	add	r26, r26
    1c76:	bb 1f       	adc	r27, r27
    1c78:	a2 0f       	add	r26, r18
    1c7a:	b3 1f       	adc	r27, r19
    1c7c:	11 96       	adiw	r26, 0x01	; 1
    1c7e:	1c 92       	st	X, r1
    1c80:	1e 92       	st	-X, r1
    1c82:	8f 5f       	subi	r24, 0xFF	; 255
    1c84:	90 85       	ldd	r25, Z+8	; 0x08
    1c86:	89 17       	cp	r24, r25
    1c88:	98 f3       	brcs	.-26     	; 0x1c70 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1c8a:	97 b1       	in	r25, 0x07	; 7
    1c8c:	82 a1       	ldd	r24, Z+34	; 0x22
    1c8e:	80 95       	com	r24
    1c90:	89 23       	and	r24, r25
    1c92:	87 b9       	out	0x07, r24	; 7
    1c94:	98 b1       	in	r25, 0x08	; 8
    1c96:	82 a1       	ldd	r24, Z+34	; 0x22
    1c98:	80 95       	com	r24
    1c9a:	89 23       	and	r24, r25
    1c9c:	88 b9       	out	0x08, r24	; 8
    1c9e:	87 e8       	ldi	r24, 0x87	; 135
    1ca0:	80 93 7a 00 	sts	0x007A, r24
    1ca4:	70 e0       	ldi	r23, 0x00	; 0
    1ca6:	29 c0       	rjmp	.+82     	; 0x1cfa <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1ca8:	df 01       	movw	r26, r30
    1caa:	a6 0f       	add	r26, r22
    1cac:	b1 1d       	adc	r27, r1
    1cae:	51 96       	adiw	r26, 0x11	; 17
    1cb0:	8c 91       	ld	r24, X
    1cb2:	51 97       	sbiw	r26, 0x11	; 17
    1cb4:	80 64       	ori	r24, 0x40	; 64
    1cb6:	80 93 7c 00 	sts	0x007C, r24
    1cba:	80 91 7a 00 	lds	r24, 0x007A
    1cbe:	80 64       	ori	r24, 0x40	; 64
    1cc0:	80 93 7a 00 	sts	0x007A, r24
    1cc4:	80 91 7a 00 	lds	r24, 0x007A
    1cc8:	86 fd       	sbrc	r24, 6
    1cca:	fc cf       	rjmp	.-8      	; 0x1cc4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1ccc:	a6 2f       	mov	r26, r22
    1cce:	b0 e0       	ldi	r27, 0x00	; 0
    1cd0:	aa 0f       	add	r26, r26
    1cd2:	bb 1f       	adc	r27, r27
    1cd4:	a2 0f       	add	r26, r18
    1cd6:	b3 1f       	adc	r27, r19
    1cd8:	40 91 78 00 	lds	r20, 0x0078
    1cdc:	50 91 79 00 	lds	r21, 0x0079
    1ce0:	8d 91       	ld	r24, X+
    1ce2:	9c 91       	ld	r25, X
    1ce4:	11 97       	sbiw	r26, 0x01	; 1
    1ce6:	84 0f       	add	r24, r20
    1ce8:	95 1f       	adc	r25, r21
    1cea:	11 96       	adiw	r26, 0x01	; 1
    1cec:	9c 93       	st	X, r25
    1cee:	8e 93       	st	-X, r24
    1cf0:	6f 5f       	subi	r22, 0xFF	; 255
    1cf2:	80 85       	ldd	r24, Z+8	; 0x08
    1cf4:	68 17       	cp	r22, r24
    1cf6:	c0 f2       	brcs	.-80     	; 0x1ca8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1cf8:	7f 5f       	subi	r23, 0xFF	; 255
    1cfa:	81 a1       	ldd	r24, Z+33	; 0x21
    1cfc:	78 17       	cp	r23, r24
    1cfe:	10 f4       	brcc	.+4      	; 0x1d04 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1d00:	60 e0       	ldi	r22, 0x00	; 0
    1d02:	f7 cf       	rjmp	.-18     	; 0x1cf2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1d04:	40 e0       	ldi	r20, 0x00	; 0
    1d06:	14 c0       	rjmp	.+40     	; 0x1d30 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1d08:	c4 2f       	mov	r28, r20
    1d0a:	d0 e0       	ldi	r29, 0x00	; 0
    1d0c:	cc 0f       	add	r28, r28
    1d0e:	dd 1f       	adc	r29, r29
    1d10:	c2 0f       	add	r28, r18
    1d12:	d3 1f       	adc	r29, r19
    1d14:	61 a1       	ldd	r22, Z+33	; 0x21
    1d16:	70 e0       	ldi	r23, 0x00	; 0
    1d18:	cb 01       	movw	r24, r22
    1d1a:	95 95       	asr	r25
    1d1c:	87 95       	ror	r24
    1d1e:	a8 81       	ld	r26, Y
    1d20:	b9 81       	ldd	r27, Y+1	; 0x01
    1d22:	8a 0f       	add	r24, r26
    1d24:	9b 1f       	adc	r25, r27
    1d26:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
    1d2a:	79 83       	std	Y+1, r23	; 0x01
    1d2c:	68 83       	st	Y, r22
    1d2e:	4f 5f       	subi	r20, 0xFF	; 255
    1d30:	80 85       	ldd	r24, Z+8	; 0x08
    1d32:	48 17       	cp	r20, r24
    1d34:	48 f3       	brcs	.-46     	; 0x1d08 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1d36:	00 93 7c 00 	sts	0x007C, r16
    1d3a:	10 93 7a 00 	sts	0x007A, r17
    1d3e:	f8 b8       	out	0x08, r15	; 8
    1d40:	e7 b8       	out	0x07, r14	; 7
    1d42:	cd b7       	in	r28, 0x3d	; 61
    1d44:	de b7       	in	r29, 0x3e	; 62
    1d46:	e6 e0       	ldi	r30, 0x06	; 6
    1d48:	0c 94 65 12 	jmp	0x24ca	; 0x24ca <__epilogue_restores__+0x18>

00001d4c <_ZN16PololuQTRSensors4readEPjh>:
    1d4c:	a0 e2       	ldi	r26, 0x20	; 32
    1d4e:	b0 e0       	ldi	r27, 0x00	; 0
    1d50:	ec ea       	ldi	r30, 0xAC	; 172
    1d52:	fe e0       	ldi	r31, 0x0E	; 14
    1d54:	0c 94 48 12 	jmp	0x2490	; 0x2490 <__prologue_saves__+0x16>
    1d58:	8c 01       	movw	r16, r24
    1d5a:	7b 01       	movw	r14, r22
    1d5c:	d4 2e       	mov	r13, r20
    1d5e:	84 2f       	mov	r24, r20
    1d60:	81 50       	subi	r24, 0x01	; 1
    1d62:	82 30       	cpi	r24, 0x02	; 2
    1d64:	18 f4       	brcc	.+6      	; 0x1d6c <_ZN16PololuQTRSensors4readEPjh+0x20>
    1d66:	c8 01       	movw	r24, r16
    1d68:	0e 94 d0 0c 	call	0x19a0	; 0x19a0 <_ZN16PololuQTRSensors10emittersOnEv>
    1d6c:	d8 01       	movw	r26, r16
    1d6e:	50 96       	adiw	r26, 0x10	; 16
    1d70:	8c 91       	ld	r24, X
    1d72:	50 97       	sbiw	r26, 0x10	; 16
    1d74:	88 23       	and	r24, r24
    1d76:	89 f4       	brne	.+34     	; 0x1d9a <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1d78:	c8 01       	movw	r24, r16
    1d7a:	b7 01       	movw	r22, r14
    1d7c:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1d80:	c8 01       	movw	r24, r16
    1d82:	0e 94 bb 0c 	call	0x1976	; 0x1976 <_ZN16PololuQTRSensors11emittersOffEv>
    1d86:	bd 2d       	mov	r27, r13
    1d88:	b2 30       	cpi	r27, 0x02	; 2
    1d8a:	d9 f5       	brne	.+118    	; 0x1e02 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1d8c:	c8 01       	movw	r24, r16
    1d8e:	be 01       	movw	r22, r28
    1d90:	6f 5f       	subi	r22, 0xFF	; 255
    1d92:	7f 4f       	sbci	r23, 0xFF	; 255
    1d94:	0e 94 3d 0d 	call	0x1a7a	; 0x1a7a <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1d98:	10 c0       	rjmp	.+32     	; 0x1dba <_ZN16PololuQTRSensors4readEPjh+0x6e>
    1d9a:	c8 01       	movw	r24, r16
    1d9c:	b7 01       	movw	r22, r14
    1d9e:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1da2:	c8 01       	movw	r24, r16
    1da4:	0e 94 bb 0c 	call	0x1976	; 0x1976 <_ZN16PololuQTRSensors11emittersOffEv>
    1da8:	ed 2d       	mov	r30, r13
    1daa:	e2 30       	cpi	r30, 0x02	; 2
    1dac:	51 f5       	brne	.+84     	; 0x1e02 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1dae:	c8 01       	movw	r24, r16
    1db0:	be 01       	movw	r22, r28
    1db2:	6f 5f       	subi	r22, 0xFF	; 255
    1db4:	7f 4f       	sbci	r23, 0xFF	; 255
    1db6:	0e 94 24 0e 	call	0x1c48	; 0x1c48 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1dba:	60 e0       	ldi	r22, 0x00	; 0
    1dbc:	ae 01       	movw	r20, r28
    1dbe:	4f 5f       	subi	r20, 0xFF	; 255
    1dc0:	5f 4f       	sbci	r21, 0xFF	; 255
    1dc2:	1b c0       	rjmp	.+54     	; 0x1dfa <_ZN16PololuQTRSensors4readEPjh+0xae>
    1dc4:	86 2f       	mov	r24, r22
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	88 0f       	add	r24, r24
    1dca:	99 1f       	adc	r25, r25
    1dcc:	f7 01       	movw	r30, r14
    1dce:	e8 0f       	add	r30, r24
    1dd0:	f9 1f       	adc	r31, r25
    1dd2:	84 0f       	add	r24, r20
    1dd4:	95 1f       	adc	r25, r21
    1dd6:	d8 01       	movw	r26, r16
    1dd8:	1e 96       	adiw	r26, 0x0e	; 14
    1dda:	2d 91       	ld	r18, X+
    1ddc:	3c 91       	ld	r19, X
    1dde:	1f 97       	sbiw	r26, 0x0f	; 15
    1de0:	dc 01       	movw	r26, r24
    1de2:	8d 91       	ld	r24, X+
    1de4:	9c 91       	ld	r25, X
    1de6:	11 97       	sbiw	r26, 0x01	; 1
    1de8:	28 1b       	sub	r18, r24
    1dea:	39 0b       	sbc	r19, r25
    1dec:	80 81       	ld	r24, Z
    1dee:	91 81       	ldd	r25, Z+1	; 0x01
    1df0:	82 0f       	add	r24, r18
    1df2:	93 1f       	adc	r25, r19
    1df4:	91 83       	std	Z+1, r25	; 0x01
    1df6:	80 83       	st	Z, r24
    1df8:	6f 5f       	subi	r22, 0xFF	; 255
    1dfa:	f8 01       	movw	r30, r16
    1dfc:	80 85       	ldd	r24, Z+8	; 0x08
    1dfe:	68 17       	cp	r22, r24
    1e00:	08 f3       	brcs	.-62     	; 0x1dc4 <_ZN16PololuQTRSensors4readEPjh+0x78>
    1e02:	a0 96       	adiw	r28, 0x20	; 32
    1e04:	e7 e0       	ldi	r30, 0x07	; 7
    1e06:	0c 94 64 12 	jmp	0x24c8	; 0x24c8 <__epilogue_restores__+0x16>

00001e0a <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1e0a:	8f 92       	push	r8
    1e0c:	9f 92       	push	r9
    1e0e:	af 92       	push	r10
    1e10:	bf 92       	push	r11
    1e12:	cf 92       	push	r12
    1e14:	df 92       	push	r13
    1e16:	ff 92       	push	r15
    1e18:	0f 93       	push	r16
    1e1a:	1f 93       	push	r17
    1e1c:	cf 93       	push	r28
    1e1e:	df 93       	push	r29
    1e20:	ec 01       	movw	r28, r24
    1e22:	c6 2e       	mov	r12, r22
    1e24:	07 2f       	mov	r16, r23
    1e26:	f4 2e       	mov	r15, r20
    1e28:	42 30       	cpi	r20, 0x02	; 2
    1e2a:	11 f0       	breq	.+4      	; 0x1e30 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    1e2c:	ff 20       	and	r15, r15
    1e2e:	51 f4       	brne	.+20     	; 0x1e44 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1e30:	8c 81       	ldd	r24, Y+4	; 0x04
    1e32:	9d 81       	ldd	r25, Y+5	; 0x05
    1e34:	00 97       	sbiw	r24, 0x00	; 0
    1e36:	09 f4       	brne	.+2      	; 0x1e3a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    1e38:	a0 c0       	rjmp	.+320    	; 0x1f7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e3a:	8e 81       	ldd	r24, Y+6	; 0x06
    1e3c:	9f 81       	ldd	r25, Y+7	; 0x07
    1e3e:	00 97       	sbiw	r24, 0x00	; 0
    1e40:	09 f4       	brne	.+2      	; 0x1e44 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1e42:	9b c0       	rjmp	.+310    	; 0x1f7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e44:	8f 2d       	mov	r24, r15
    1e46:	81 50       	subi	r24, 0x01	; 1
    1e48:	82 30       	cpi	r24, 0x02	; 2
    1e4a:	50 f4       	brcc	.+20     	; 0x1e60 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1e4c:	88 81       	ld	r24, Y
    1e4e:	99 81       	ldd	r25, Y+1	; 0x01
    1e50:	00 97       	sbiw	r24, 0x00	; 0
    1e52:	09 f4       	brne	.+2      	; 0x1e56 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    1e54:	92 c0       	rjmp	.+292    	; 0x1f7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e56:	8a 81       	ldd	r24, Y+2	; 0x02
    1e58:	9b 81       	ldd	r25, Y+3	; 0x03
    1e5a:	00 97       	sbiw	r24, 0x00	; 0
    1e5c:	09 f4       	brne	.+2      	; 0x1e60 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1e5e:	8d c0       	rjmp	.+282    	; 0x1f7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e60:	ce 01       	movw	r24, r28
    1e62:	6c 2d       	mov	r22, r12
    1e64:	70 2f       	mov	r23, r16
    1e66:	4f 2d       	mov	r20, r15
    1e68:	0e 94 a6 0e 	call	0x1d4c	; 0x1d4c <_ZN16PololuQTRSensors4readEPjh>
    1e6c:	ac 2c       	mov	r10, r12
    1e6e:	b0 2e       	mov	r11, r16
    1e70:	00 e0       	ldi	r16, 0x00	; 0
    1e72:	10 e0       	ldi	r17, 0x00	; 0
    1e74:	88 24       	eor	r8, r8
    1e76:	99 24       	eor	r9, r9
    1e78:	7a c0       	rjmp	.+244    	; 0x1f6e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1e7a:	8f 2d       	mov	r24, r15
    1e7c:	81 30       	cpi	r24, 0x01	; 1
    1e7e:	59 f4       	brne	.+22     	; 0x1e96 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1e80:	ea 81       	ldd	r30, Y+2	; 0x02
    1e82:	fb 81       	ldd	r31, Y+3	; 0x03
    1e84:	e0 0f       	add	r30, r16
    1e86:	f1 1f       	adc	r31, r17
    1e88:	c0 80       	ld	r12, Z
    1e8a:	d1 80       	ldd	r13, Z+1	; 0x01
    1e8c:	e8 81       	ld	r30, Y
    1e8e:	f9 81       	ldd	r31, Y+1	; 0x01
    1e90:	e0 0f       	add	r30, r16
    1e92:	f1 1f       	adc	r31, r17
    1e94:	0d c0       	rjmp	.+26     	; 0x1eb0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1e96:	8c 81       	ldd	r24, Y+4	; 0x04
    1e98:	9d 81       	ldd	r25, Y+5	; 0x05
    1e9a:	ff 20       	and	r15, r15
    1e9c:	61 f4       	brne	.+24     	; 0x1eb6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    1e9e:	ee 81       	ldd	r30, Y+6	; 0x06
    1ea0:	ff 81       	ldd	r31, Y+7	; 0x07
    1ea2:	e0 0f       	add	r30, r16
    1ea4:	f1 1f       	adc	r31, r17
    1ea6:	c0 80       	ld	r12, Z
    1ea8:	d1 80       	ldd	r13, Z+1	; 0x01
    1eaa:	80 0f       	add	r24, r16
    1eac:	91 1f       	adc	r25, r17
    1eae:	fc 01       	movw	r30, r24
    1eb0:	40 81       	ld	r20, Z
    1eb2:	51 81       	ldd	r21, Z+1	; 0x01
    1eb4:	2b c0       	rjmp	.+86     	; 0x1f0c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1eb6:	80 0f       	add	r24, r16
    1eb8:	91 1f       	adc	r25, r17
    1eba:	fc 01       	movw	r30, r24
    1ebc:	80 81       	ld	r24, Z
    1ebe:	91 81       	ldd	r25, Z+1	; 0x01
    1ec0:	e8 81       	ld	r30, Y
    1ec2:	f9 81       	ldd	r31, Y+1	; 0x01
    1ec4:	e0 0f       	add	r30, r16
    1ec6:	f1 1f       	adc	r31, r17
    1ec8:	40 81       	ld	r20, Z
    1eca:	51 81       	ldd	r21, Z+1	; 0x01
    1ecc:	ce 84       	ldd	r12, Y+14	; 0x0e
    1ece:	df 84       	ldd	r13, Y+15	; 0x0f
    1ed0:	84 17       	cp	r24, r20
    1ed2:	95 07       	cpc	r25, r21
    1ed4:	10 f4       	brcc	.+4      	; 0x1eda <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    1ed6:	a6 01       	movw	r20, r12
    1ed8:	04 c0       	rjmp	.+8      	; 0x1ee2 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    1eda:	4c 0d       	add	r20, r12
    1edc:	5d 1d       	adc	r21, r13
    1ede:	48 1b       	sub	r20, r24
    1ee0:	59 0b       	sbc	r21, r25
    1ee2:	ee 81       	ldd	r30, Y+6	; 0x06
    1ee4:	ff 81       	ldd	r31, Y+7	; 0x07
    1ee6:	e0 0f       	add	r30, r16
    1ee8:	f1 1f       	adc	r31, r17
    1eea:	80 81       	ld	r24, Z
    1eec:	91 81       	ldd	r25, Z+1	; 0x01
    1eee:	ea 81       	ldd	r30, Y+2	; 0x02
    1ef0:	fb 81       	ldd	r31, Y+3	; 0x03
    1ef2:	e0 0f       	add	r30, r16
    1ef4:	f1 1f       	adc	r31, r17
    1ef6:	20 81       	ld	r18, Z
    1ef8:	31 81       	ldd	r19, Z+1	; 0x01
    1efa:	ce 84       	ldd	r12, Y+14	; 0x0e
    1efc:	df 84       	ldd	r13, Y+15	; 0x0f
    1efe:	82 17       	cp	r24, r18
    1f00:	93 07       	cpc	r25, r19
    1f02:	20 f0       	brcs	.+8      	; 0x1f0c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f04:	c2 0e       	add	r12, r18
    1f06:	d3 1e       	adc	r13, r19
    1f08:	c8 1a       	sub	r12, r24
    1f0a:	d9 0a       	sbc	r13, r25
    1f0c:	c4 1a       	sub	r12, r20
    1f0e:	d5 0a       	sbc	r13, r21
    1f10:	d1 f0       	breq	.+52     	; 0x1f46 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1f12:	f5 01       	movw	r30, r10
    1f14:	60 81       	ld	r22, Z
    1f16:	71 81       	ldd	r23, Z+1	; 0x01
    1f18:	80 e0       	ldi	r24, 0x00	; 0
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	9a 01       	movw	r18, r20
    1f1e:	40 e0       	ldi	r20, 0x00	; 0
    1f20:	50 e0       	ldi	r21, 0x00	; 0
    1f22:	62 1b       	sub	r22, r18
    1f24:	73 0b       	sbc	r23, r19
    1f26:	84 0b       	sbc	r24, r20
    1f28:	95 0b       	sbc	r25, r21
    1f2a:	28 ee       	ldi	r18, 0xE8	; 232
    1f2c:	33 e0       	ldi	r19, 0x03	; 3
    1f2e:	40 e0       	ldi	r20, 0x00	; 0
    1f30:	50 e0       	ldi	r21, 0x00	; 0
    1f32:	0e 94 ad 11 	call	0x235a	; 0x235a <__mulsi3>
    1f36:	96 01       	movw	r18, r12
    1f38:	40 e0       	ldi	r20, 0x00	; 0
    1f3a:	50 e0       	ldi	r21, 0x00	; 0
    1f3c:	0e 94 13 12 	call	0x2426	; 0x2426 <__divmodsi4>
    1f40:	37 fd       	sbrc	r19, 7
    1f42:	0a c0       	rjmp	.+20     	; 0x1f58 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1f44:	02 c0       	rjmp	.+4      	; 0x1f4a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    1f46:	20 e0       	ldi	r18, 0x00	; 0
    1f48:	30 e0       	ldi	r19, 0x00	; 0
    1f4a:	f3 e0       	ldi	r31, 0x03	; 3
    1f4c:	29 3e       	cpi	r18, 0xE9	; 233
    1f4e:	3f 07       	cpc	r19, r31
    1f50:	2c f0       	brlt	.+10     	; 0x1f5c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1f52:	28 ee       	ldi	r18, 0xE8	; 232
    1f54:	33 e0       	ldi	r19, 0x03	; 3
    1f56:	02 c0       	rjmp	.+4      	; 0x1f5c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1f58:	20 e0       	ldi	r18, 0x00	; 0
    1f5a:	30 e0       	ldi	r19, 0x00	; 0
    1f5c:	f5 01       	movw	r30, r10
    1f5e:	21 93       	st	Z+, r18
    1f60:	31 93       	st	Z+, r19
    1f62:	5f 01       	movw	r10, r30
    1f64:	08 94       	sec
    1f66:	81 1c       	adc	r8, r1
    1f68:	91 1c       	adc	r9, r1
    1f6a:	0e 5f       	subi	r16, 0xFE	; 254
    1f6c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f6e:	88 85       	ldd	r24, Y+8	; 0x08
    1f70:	90 e0       	ldi	r25, 0x00	; 0
    1f72:	88 16       	cp	r8, r24
    1f74:	99 06       	cpc	r9, r25
    1f76:	0c f4       	brge	.+2      	; 0x1f7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1f78:	80 cf       	rjmp	.-256    	; 0x1e7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    1f7a:	df 91       	pop	r29
    1f7c:	cf 91       	pop	r28
    1f7e:	1f 91       	pop	r17
    1f80:	0f 91       	pop	r16
    1f82:	ff 90       	pop	r15
    1f84:	df 90       	pop	r13
    1f86:	cf 90       	pop	r12
    1f88:	bf 90       	pop	r11
    1f8a:	af 90       	pop	r10
    1f8c:	9f 90       	pop	r9
    1f8e:	8f 90       	pop	r8
    1f90:	08 95       	ret

00001f92 <_ZN16PololuQTRSensors8readLineEPjhh>:
    1f92:	a5 e0       	ldi	r26, 0x05	; 5
    1f94:	b0 e0       	ldi	r27, 0x00	; 0
    1f96:	ef ec       	ldi	r30, 0xCF	; 207
    1f98:	ff e0       	ldi	r31, 0x0F	; 15
    1f9a:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__prologue_saves__>
    1f9e:	4c 01       	movw	r8, r24
    1fa0:	c6 2e       	mov	r12, r22
    1fa2:	e7 2e       	mov	r14, r23
    1fa4:	2d 83       	std	Y+5, r18	; 0x05
    1fa6:	0e 94 05 0f 	call	0x1e0a	; 0x1e0a <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1faa:	d4 01       	movw	r26, r8
    1fac:	18 96       	adiw	r26, 0x08	; 8
    1fae:	4c 90       	ld	r4, X
    1fb0:	18 97       	sbiw	r26, 0x08	; 8
    1fb2:	de 2c       	mov	r13, r14
    1fb4:	64 2d       	mov	r22, r4
    1fb6:	70 e0       	ldi	r23, 0x00	; 0
    1fb8:	80 e0       	ldi	r24, 0x00	; 0
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	28 ee       	ldi	r18, 0xE8	; 232
    1fbe:	33 e0       	ldi	r19, 0x03	; 3
    1fc0:	40 e0       	ldi	r20, 0x00	; 0
    1fc2:	50 e0       	ldi	r21, 0x00	; 0
    1fc4:	0e 94 ad 11 	call	0x235a	; 0x235a <__mulsi3>
    1fc8:	69 83       	std	Y+1, r22	; 0x01
    1fca:	7a 83       	std	Y+2, r23	; 0x02
    1fcc:	8b 83       	std	Y+3, r24	; 0x03
    1fce:	9c 83       	std	Y+4, r25	; 0x04
    1fd0:	ee 24       	eor	r14, r14
    1fd2:	ff 24       	eor	r15, r15
    1fd4:	87 01       	movw	r16, r14
    1fd6:	66 24       	eor	r6, r6
    1fd8:	77 24       	eor	r7, r7
    1fda:	88 24       	eor	r8, r8
    1fdc:	99 24       	eor	r9, r9
    1fde:	54 01       	movw	r10, r8
    1fe0:	55 24       	eor	r5, r5
    1fe2:	36 c0       	rjmp	.+108    	; 0x2050 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    1fe4:	f6 01       	movw	r30, r12
    1fe6:	30 81       	ld	r19, Z
    1fe8:	21 81       	ldd	r18, Z+1	; 0x01
    1fea:	42 e0       	ldi	r20, 0x02	; 2
    1fec:	24 2e       	mov	r2, r20
    1fee:	31 2c       	mov	r3, r1
    1ff0:	c2 0c       	add	r12, r2
    1ff2:	d3 1c       	adc	r13, r3
    1ff4:	c9 01       	movw	r24, r18
    1ff6:	49 2f       	mov	r20, r25
    1ff8:	58 2f       	mov	r21, r24
    1ffa:	1a 01       	movw	r2, r20
    1ffc:	2d 81       	ldd	r18, Y+5	; 0x05
    1ffe:	22 23       	and	r18, r18
    2000:	29 f0       	breq	.+10     	; 0x200c <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    2002:	88 ee       	ldi	r24, 0xE8	; 232
    2004:	93 e0       	ldi	r25, 0x03	; 3
    2006:	82 19       	sub	r24, r2
    2008:	93 09       	sbc	r25, r3
    200a:	1c 01       	movw	r2, r24
    200c:	99 ec       	ldi	r25, 0xC9	; 201
    200e:	29 16       	cp	r2, r25
    2010:	31 04       	cpc	r3, r1
    2012:	2c f4       	brge	.+10     	; 0x201e <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    2014:	a3 e3       	ldi	r26, 0x33	; 51
    2016:	2a 16       	cp	r2, r26
    2018:	31 04       	cpc	r3, r1
    201a:	94 f0       	brlt	.+36     	; 0x2040 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    201c:	02 c0       	rjmp	.+4      	; 0x2022 <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    201e:	55 24       	eor	r5, r5
    2020:	53 94       	inc	r5
    2022:	b1 01       	movw	r22, r2
    2024:	88 27       	eor	r24, r24
    2026:	77 fd       	sbrc	r23, 7
    2028:	80 95       	com	r24
    202a:	98 2f       	mov	r25, r24
    202c:	a8 01       	movw	r20, r16
    202e:	97 01       	movw	r18, r14
    2030:	0e 94 ad 11 	call	0x235a	; 0x235a <__mulsi3>
    2034:	86 0e       	add	r8, r22
    2036:	97 1e       	adc	r9, r23
    2038:	a8 1e       	adc	r10, r24
    203a:	b9 1e       	adc	r11, r25
    203c:	62 0c       	add	r6, r2
    203e:	73 1c       	adc	r7, r3
    2040:	88 ee       	ldi	r24, 0xE8	; 232
    2042:	93 e0       	ldi	r25, 0x03	; 3
    2044:	a0 e0       	ldi	r26, 0x00	; 0
    2046:	b0 e0       	ldi	r27, 0x00	; 0
    2048:	e8 0e       	add	r14, r24
    204a:	f9 1e       	adc	r15, r25
    204c:	0a 1f       	adc	r16, r26
    204e:	1b 1f       	adc	r17, r27
    2050:	89 81       	ldd	r24, Y+1	; 0x01
    2052:	9a 81       	ldd	r25, Y+2	; 0x02
    2054:	ab 81       	ldd	r26, Y+3	; 0x03
    2056:	bc 81       	ldd	r27, Y+4	; 0x04
    2058:	e8 16       	cp	r14, r24
    205a:	f9 06       	cpc	r15, r25
    205c:	0a 07       	cpc	r16, r26
    205e:	1b 07       	cpc	r17, r27
    2060:	09 f6       	brne	.-126    	; 0x1fe4 <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    2062:	55 20       	and	r5, r5
    2064:	f1 f4       	brne	.+60     	; 0x20a2 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    2066:	55 24       	eor	r5, r5
    2068:	08 94       	sec
    206a:	41 08       	sbc	r4, r1
    206c:	51 08       	sbc	r5, r1
    206e:	24 ef       	ldi	r18, 0xF4	; 244
    2070:	31 e0       	ldi	r19, 0x01	; 1
    2072:	42 9e       	mul	r4, r18
    2074:	c0 01       	movw	r24, r0
    2076:	43 9e       	mul	r4, r19
    2078:	90 0d       	add	r25, r0
    207a:	52 9e       	mul	r5, r18
    207c:	90 0d       	add	r25, r0
    207e:	11 24       	eor	r1, r1
    2080:	20 91 b9 01 	lds	r18, 0x01B9
    2084:	30 91 ba 01 	lds	r19, 0x01BA
    2088:	28 17       	cp	r18, r24
    208a:	39 07       	cpc	r19, r25
    208c:	b4 f0       	brlt	.+44     	; 0x20ba <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    208e:	88 ee       	ldi	r24, 0xE8	; 232
    2090:	93 e0       	ldi	r25, 0x03	; 3
    2092:	48 9e       	mul	r4, r24
    2094:	90 01       	movw	r18, r0
    2096:	49 9e       	mul	r4, r25
    2098:	30 0d       	add	r19, r0
    209a:	58 9e       	mul	r5, r24
    209c:	30 0d       	add	r19, r0
    209e:	11 24       	eor	r1, r1
    20a0:	0e c0       	rjmp	.+28     	; 0x20be <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    20a2:	93 01       	movw	r18, r6
    20a4:	40 e0       	ldi	r20, 0x00	; 0
    20a6:	50 e0       	ldi	r21, 0x00	; 0
    20a8:	c5 01       	movw	r24, r10
    20aa:	b4 01       	movw	r22, r8
    20ac:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
    20b0:	20 93 b9 01 	sts	0x01B9, r18
    20b4:	30 93 ba 01 	sts	0x01BA, r19
    20b8:	02 c0       	rjmp	.+4      	; 0x20be <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    20ba:	20 e0       	ldi	r18, 0x00	; 0
    20bc:	30 e0       	ldi	r19, 0x00	; 0
    20be:	c9 01       	movw	r24, r18
    20c0:	25 96       	adiw	r28, 0x05	; 5
    20c2:	e2 e1       	ldi	r30, 0x12	; 18
    20c4:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__epilogue_restores__>

000020c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    20c8:	a7 e6       	ldi	r26, 0x67	; 103
    20ca:	b0 e0       	ldi	r27, 0x00	; 0
    20cc:	ea e6       	ldi	r30, 0x6A	; 106
    20ce:	f0 e1       	ldi	r31, 0x10	; 16
    20d0:	0c 94 3d 12 	jmp	0x247a	; 0x247a <__prologue_saves__>
    20d4:	8c 01       	movw	r16, r24
    20d6:	4b 01       	movw	r8, r22
    20d8:	6a 01       	movw	r12, r20
    20da:	a6 96       	adiw	r28, 0x26	; 38
    20dc:	2f af       	std	Y+63, r18	; 0x3f
    20de:	a6 97       	sbiw	r28, 0x26	; 38
    20e0:	da 01       	movw	r26, r20
    20e2:	8d 91       	ld	r24, X+
    20e4:	9c 91       	ld	r25, X
    20e6:	11 97       	sbiw	r26, 0x01	; 1
    20e8:	00 97       	sbiw	r24, 0x00	; 0
    20ea:	e9 f4       	brne	.+58     	; 0x2126 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    20ec:	f8 01       	movw	r30, r16
    20ee:	80 85       	ldd	r24, Z+8	; 0x08
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	88 0f       	add	r24, r24
    20f4:	99 1f       	adc	r25, r25
    20f6:	0e 94 89 12 	call	0x2512	; 0x2512 <malloc>
    20fa:	d6 01       	movw	r26, r12
    20fc:	11 96       	adiw	r26, 0x01	; 1
    20fe:	9c 93       	st	X, r25
    2100:	8e 93       	st	-X, r24
    2102:	00 97       	sbiw	r24, 0x00	; 0
    2104:	09 f4       	brne	.+2      	; 0x2108 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    2106:	e2 c0       	rjmp	.+452    	; 0x22cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2108:	fc 01       	movw	r30, r24
    210a:	80 e0       	ldi	r24, 0x00	; 0
    210c:	90 e0       	ldi	r25, 0x00	; 0
    210e:	03 c0       	rjmp	.+6      	; 0x2116 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    2110:	11 92       	st	Z+, r1
    2112:	11 92       	st	Z+, r1
    2114:	01 96       	adiw	r24, 0x01	; 1
    2116:	d8 01       	movw	r26, r16
    2118:	18 96       	adiw	r26, 0x08	; 8
    211a:	2c 91       	ld	r18, X
    211c:	18 97       	sbiw	r26, 0x08	; 8
    211e:	30 e0       	ldi	r19, 0x00	; 0
    2120:	82 17       	cp	r24, r18
    2122:	93 07       	cpc	r25, r19
    2124:	ac f3       	brlt	.-22     	; 0x2110 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    2126:	f4 01       	movw	r30, r8
    2128:	80 81       	ld	r24, Z
    212a:	91 81       	ldd	r25, Z+1	; 0x01
    212c:	00 97       	sbiw	r24, 0x00	; 0
    212e:	89 f0       	breq	.+34     	; 0x2152 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    2130:	ee 24       	eor	r14, r14
    2132:	ff 24       	eor	r15, r15
    2134:	5e 01       	movw	r10, r28
    2136:	08 94       	sec
    2138:	a1 1c       	adc	r10, r1
    213a:	b1 1c       	adc	r11, r1
    213c:	b1 e4       	ldi	r27, 0x41	; 65
    213e:	6b 2e       	mov	r6, r27
    2140:	71 2c       	mov	r7, r1
    2142:	6c 0e       	add	r6, r28
    2144:	7d 1e       	adc	r7, r29
    2146:	a1 e2       	ldi	r26, 0x21	; 33
    2148:	4a 2e       	mov	r4, r26
    214a:	51 2c       	mov	r5, r1
    214c:	4c 0e       	add	r4, r28
    214e:	5d 1e       	adc	r5, r29
    2150:	23 c0       	rjmp	.+70     	; 0x2198 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    2152:	d8 01       	movw	r26, r16
    2154:	18 96       	adiw	r26, 0x08	; 8
    2156:	8c 91       	ld	r24, X
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	88 0f       	add	r24, r24
    215c:	99 1f       	adc	r25, r25
    215e:	0e 94 89 12 	call	0x2512	; 0x2512 <malloc>
    2162:	f4 01       	movw	r30, r8
    2164:	91 83       	std	Z+1, r25	; 0x01
    2166:	80 83       	st	Z, r24
    2168:	00 97       	sbiw	r24, 0x00	; 0
    216a:	09 f4       	brne	.+2      	; 0x216e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    216c:	af c0       	rjmp	.+350    	; 0x22cc <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    216e:	fc 01       	movw	r30, r24
    2170:	80 e0       	ldi	r24, 0x00	; 0
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	d8 01       	movw	r26, r16
    2176:	07 c0       	rjmp	.+14     	; 0x2186 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    2178:	1e 96       	adiw	r26, 0x0e	; 14
    217a:	2d 91       	ld	r18, X+
    217c:	3c 91       	ld	r19, X
    217e:	1f 97       	sbiw	r26, 0x0f	; 15
    2180:	21 93       	st	Z+, r18
    2182:	31 93       	st	Z+, r19
    2184:	01 96       	adiw	r24, 0x01	; 1
    2186:	18 96       	adiw	r26, 0x08	; 8
    2188:	2c 91       	ld	r18, X
    218a:	18 97       	sbiw	r26, 0x08	; 8
    218c:	30 e0       	ldi	r19, 0x00	; 0
    218e:	82 17       	cp	r24, r18
    2190:	93 07       	cpc	r25, r19
    2192:	94 f3       	brlt	.-28     	; 0x2178 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    2194:	8d 01       	movw	r16, r26
    2196:	cc cf       	rjmp	.-104    	; 0x2130 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    2198:	c8 01       	movw	r24, r16
    219a:	b5 01       	movw	r22, r10
    219c:	a6 96       	adiw	r28, 0x26	; 38
    219e:	4f ad       	ldd	r20, Y+63	; 0x3f
    21a0:	a6 97       	sbiw	r28, 0x26	; 38
    21a2:	0e 94 a6 0e 	call	0x1d4c	; 0x1d4c <_ZN16PololuQTRSensors4readEPjh>
    21a6:	d8 01       	movw	r26, r16
    21a8:	18 96       	adiw	r26, 0x08	; 8
    21aa:	8c 91       	ld	r24, X
    21ac:	18 97       	sbiw	r26, 0x08	; 8
    21ae:	e8 2f       	mov	r30, r24
    21b0:	f0 e0       	ldi	r31, 0x00	; 0
    21b2:	a5 96       	adiw	r28, 0x25	; 37
    21b4:	ff af       	std	Y+63, r31	; 0x3f
    21b6:	ee af       	std	Y+62, r30	; 0x3e
    21b8:	a5 97       	sbiw	r28, 0x25	; 37
    21ba:	13 01       	movw	r2, r6
    21bc:	f5 01       	movw	r30, r10
    21be:	a3 96       	adiw	r28, 0x23	; 35
    21c0:	5f ae       	std	Y+63, r5	; 0x3f
    21c2:	4e ae       	std	Y+62, r4	; 0x3e
    21c4:	a3 97       	sbiw	r28, 0x23	; 35
    21c6:	93 01       	movw	r18, r6
    21c8:	40 e0       	ldi	r20, 0x00	; 0
    21ca:	50 e0       	ldi	r21, 0x00	; 0
    21cc:	a8 96       	adiw	r28, 0x28	; 40
    21ce:	5f ae       	std	Y+63, r5	; 0x3f
    21d0:	4e ae       	std	Y+62, r4	; 0x3e
    21d2:	a8 97       	sbiw	r28, 0x28	; 40
    21d4:	37 c0       	rjmp	.+110    	; 0x2244 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    21d6:	e1 14       	cp	r14, r1
    21d8:	f1 04       	cpc	r15, r1
    21da:	61 f0       	breq	.+24     	; 0x21f4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    21dc:	a8 96       	adiw	r28, 0x28	; 40
    21de:	ae ad       	ldd	r26, Y+62	; 0x3e
    21e0:	bf ad       	ldd	r27, Y+63	; 0x3f
    21e2:	a8 97       	sbiw	r28, 0x28	; 40
    21e4:	6d 91       	ld	r22, X+
    21e6:	7c 91       	ld	r23, X
    21e8:	11 97       	sbiw	r26, 0x01	; 1
    21ea:	80 81       	ld	r24, Z
    21ec:	91 81       	ldd	r25, Z+1	; 0x01
    21ee:	68 17       	cp	r22, r24
    21f0:	79 07       	cpc	r23, r25
    21f2:	60 f4       	brcc	.+24     	; 0x220c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    21f4:	80 81       	ld	r24, Z
    21f6:	91 81       	ldd	r25, Z+1	; 0x01
    21f8:	a8 96       	adiw	r28, 0x28	; 40
    21fa:	ae ad       	ldd	r26, Y+62	; 0x3e
    21fc:	bf ad       	ldd	r27, Y+63	; 0x3f
    21fe:	a8 97       	sbiw	r28, 0x28	; 40
    2200:	11 96       	adiw	r26, 0x01	; 1
    2202:	9c 93       	st	X, r25
    2204:	8e 93       	st	-X, r24
    2206:	e1 14       	cp	r14, r1
    2208:	f1 04       	cpc	r15, r1
    220a:	49 f0       	breq	.+18     	; 0x221e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    220c:	d9 01       	movw	r26, r18
    220e:	6d 91       	ld	r22, X+
    2210:	7c 91       	ld	r23, X
    2212:	11 97       	sbiw	r26, 0x01	; 1
    2214:	80 81       	ld	r24, Z
    2216:	91 81       	ldd	r25, Z+1	; 0x01
    2218:	86 17       	cp	r24, r22
    221a:	97 07       	cpc	r25, r23
    221c:	28 f4       	brcc	.+10     	; 0x2228 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    221e:	80 81       	ld	r24, Z
    2220:	91 81       	ldd	r25, Z+1	; 0x01
    2222:	d9 01       	movw	r26, r18
    2224:	8d 93       	st	X+, r24
    2226:	9c 93       	st	X, r25
    2228:	4f 5f       	subi	r20, 0xFF	; 255
    222a:	5f 4f       	sbci	r21, 0xFF	; 255
    222c:	2e 5f       	subi	r18, 0xFE	; 254
    222e:	3f 4f       	sbci	r19, 0xFF	; 255
    2230:	32 96       	adiw	r30, 0x02	; 2
    2232:	a8 96       	adiw	r28, 0x28	; 40
    2234:	8e ad       	ldd	r24, Y+62	; 0x3e
    2236:	9f ad       	ldd	r25, Y+63	; 0x3f
    2238:	a8 97       	sbiw	r28, 0x28	; 40
    223a:	02 96       	adiw	r24, 0x02	; 2
    223c:	a8 96       	adiw	r28, 0x28	; 40
    223e:	9f af       	std	Y+63, r25	; 0x3f
    2240:	8e af       	std	Y+62, r24	; 0x3e
    2242:	a8 97       	sbiw	r28, 0x28	; 40
    2244:	a5 96       	adiw	r28, 0x25	; 37
    2246:	ae ad       	ldd	r26, Y+62	; 0x3e
    2248:	bf ad       	ldd	r27, Y+63	; 0x3f
    224a:	a5 97       	sbiw	r28, 0x25	; 37
    224c:	4a 17       	cp	r20, r26
    224e:	5b 07       	cpc	r21, r27
    2250:	14 f2       	brlt	.-124    	; 0x21d6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    2252:	08 94       	sec
    2254:	e1 1c       	adc	r14, r1
    2256:	f1 1c       	adc	r15, r1
    2258:	ba e0       	ldi	r27, 0x0A	; 10
    225a:	eb 16       	cp	r14, r27
    225c:	f1 04       	cpc	r15, r1
    225e:	09 f0       	breq	.+2      	; 0x2262 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    2260:	9b cf       	rjmp	.-202    	; 0x2198 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    2262:	80 e0       	ldi	r24, 0x00	; 0
    2264:	90 e0       	ldi	r25, 0x00	; 0
    2266:	2c c0       	rjmp	.+88     	; 0x22c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    2268:	f1 01       	movw	r30, r2
    226a:	41 91       	ld	r20, Z+
    226c:	51 91       	ld	r21, Z+
    226e:	1f 01       	movw	r2, r30
    2270:	bc 01       	movw	r22, r24
    2272:	66 0f       	add	r22, r22
    2274:	77 1f       	adc	r23, r23
    2276:	d6 01       	movw	r26, r12
    2278:	ed 91       	ld	r30, X+
    227a:	fc 91       	ld	r31, X
    227c:	11 97       	sbiw	r26, 0x01	; 1
    227e:	e6 0f       	add	r30, r22
    2280:	f7 1f       	adc	r31, r23
    2282:	20 81       	ld	r18, Z
    2284:	31 81       	ldd	r19, Z+1	; 0x01
    2286:	24 17       	cp	r18, r20
    2288:	35 07       	cpc	r19, r21
    228a:	10 f4       	brcc	.+4      	; 0x2290 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    228c:	51 83       	std	Z+1, r21	; 0x01
    228e:	40 83       	st	Z, r20
    2290:	a3 96       	adiw	r28, 0x23	; 35
    2292:	ee ad       	ldd	r30, Y+62	; 0x3e
    2294:	ff ad       	ldd	r31, Y+63	; 0x3f
    2296:	a3 97       	sbiw	r28, 0x23	; 35
    2298:	41 91       	ld	r20, Z+
    229a:	51 91       	ld	r21, Z+
    229c:	a3 96       	adiw	r28, 0x23	; 35
    229e:	ff af       	std	Y+63, r31	; 0x3f
    22a0:	ee af       	std	Y+62, r30	; 0x3e
    22a2:	a3 97       	sbiw	r28, 0x23	; 35
    22a4:	d4 01       	movw	r26, r8
    22a6:	ed 91       	ld	r30, X+
    22a8:	fc 91       	ld	r31, X
    22aa:	11 97       	sbiw	r26, 0x01	; 1
    22ac:	e6 0f       	add	r30, r22
    22ae:	f7 1f       	adc	r31, r23
    22b0:	20 81       	ld	r18, Z
    22b2:	31 81       	ldd	r19, Z+1	; 0x01
    22b4:	42 17       	cp	r20, r18
    22b6:	53 07       	cpc	r21, r19
    22b8:	10 f4       	brcc	.+4      	; 0x22be <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    22ba:	51 83       	std	Z+1, r21	; 0x01
    22bc:	40 83       	st	Z, r20
    22be:	01 96       	adiw	r24, 0x01	; 1
    22c0:	f8 01       	movw	r30, r16
    22c2:	20 85       	ldd	r18, Z+8	; 0x08
    22c4:	30 e0       	ldi	r19, 0x00	; 0
    22c6:	82 17       	cp	r24, r18
    22c8:	93 07       	cpc	r25, r19
    22ca:	74 f2       	brlt	.-100    	; 0x2268 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    22cc:	c9 59       	subi	r28, 0x99	; 153
    22ce:	df 4f       	sbci	r29, 0xFF	; 255
    22d0:	e2 e1       	ldi	r30, 0x12	; 18
    22d2:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__epilogue_restores__>

000022d6 <_ZN16PololuQTRSensors9calibrateEh>:
    22d6:	1f 93       	push	r17
    22d8:	cf 93       	push	r28
    22da:	df 93       	push	r29
    22dc:	ec 01       	movw	r28, r24
    22de:	16 2f       	mov	r17, r22
    22e0:	86 2f       	mov	r24, r22
    22e2:	81 50       	subi	r24, 0x01	; 1
    22e4:	82 30       	cpi	r24, 0x02	; 2
    22e6:	58 f4       	brcc	.+22     	; 0x22fe <_ZN16PololuQTRSensors9calibrateEh+0x28>
    22e8:	ae 01       	movw	r20, r28
    22ea:	4e 5f       	subi	r20, 0xFE	; 254
    22ec:	5f 4f       	sbci	r21, 0xFF	; 255
    22ee:	ce 01       	movw	r24, r28
    22f0:	be 01       	movw	r22, r28
    22f2:	21 e0       	ldi	r18, 0x01	; 1
    22f4:	0e 94 64 10 	call	0x20c8	; 0x20c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    22f8:	12 30       	cpi	r17, 0x02	; 2
    22fa:	19 f0       	breq	.+6      	; 0x2302 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    22fc:	0c c0       	rjmp	.+24     	; 0x2316 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    22fe:	66 23       	and	r22, r22
    2300:	51 f4       	brne	.+20     	; 0x2316 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2302:	be 01       	movw	r22, r28
    2304:	6c 5f       	subi	r22, 0xFC	; 252
    2306:	7f 4f       	sbci	r23, 0xFF	; 255
    2308:	ae 01       	movw	r20, r28
    230a:	4a 5f       	subi	r20, 0xFA	; 250
    230c:	5f 4f       	sbci	r21, 0xFF	; 255
    230e:	ce 01       	movw	r24, r28
    2310:	20 e0       	ldi	r18, 0x00	; 0
    2312:	0e 94 64 10 	call	0x20c8	; 0x20c8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2316:	df 91       	pop	r29
    2318:	cf 91       	pop	r28
    231a:	1f 91       	pop	r17
    231c:	08 95       	ret

0000231e <_ZN16PololuQTRSensorsD1Ev>:
    231e:	cf 93       	push	r28
    2320:	df 93       	push	r29
    2322:	ec 01       	movw	r28, r24
    2324:	8a 81       	ldd	r24, Y+2	; 0x02
    2326:	9b 81       	ldd	r25, Y+3	; 0x03
    2328:	00 97       	sbiw	r24, 0x00	; 0
    232a:	11 f0       	breq	.+4      	; 0x2330 <_ZN16PololuQTRSensorsD1Ev+0x12>
    232c:	0e 94 21 13 	call	0x2642	; 0x2642 <free>
    2330:	8e 81       	ldd	r24, Y+6	; 0x06
    2332:	9f 81       	ldd	r25, Y+7	; 0x07
    2334:	00 97       	sbiw	r24, 0x00	; 0
    2336:	11 f0       	breq	.+4      	; 0x233c <_ZN16PololuQTRSensorsD1Ev+0x1e>
    2338:	0e 94 21 13 	call	0x2642	; 0x2642 <free>
    233c:	88 81       	ld	r24, Y
    233e:	99 81       	ldd	r25, Y+1	; 0x01
    2340:	00 97       	sbiw	r24, 0x00	; 0
    2342:	11 f0       	breq	.+4      	; 0x2348 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    2344:	0e 94 21 13 	call	0x2642	; 0x2642 <free>
    2348:	8c 81       	ldd	r24, Y+4	; 0x04
    234a:	9d 81       	ldd	r25, Y+5	; 0x05
    234c:	00 97       	sbiw	r24, 0x00	; 0
    234e:	11 f0       	breq	.+4      	; 0x2354 <_ZN16PololuQTRSensorsD1Ev+0x36>
    2350:	0e 94 21 13 	call	0x2642	; 0x2642 <free>
    2354:	df 91       	pop	r29
    2356:	cf 91       	pop	r28
    2358:	08 95       	ret

0000235a <__mulsi3>:
    235a:	db 01       	movw	r26, r22
    235c:	8f 93       	push	r24
    235e:	9f 93       	push	r25
    2360:	0e 94 32 12 	call	0x2464	; 0x2464 <__muluhisi3>
    2364:	bf 91       	pop	r27
    2366:	af 91       	pop	r26
    2368:	a2 9f       	mul	r26, r18
    236a:	80 0d       	add	r24, r0
    236c:	91 1d       	adc	r25, r1
    236e:	a3 9f       	mul	r26, r19
    2370:	90 0d       	add	r25, r0
    2372:	b2 9f       	mul	r27, r18
    2374:	90 0d       	add	r25, r0
    2376:	11 24       	eor	r1, r1
    2378:	08 95       	ret

0000237a <__udivmodqi4>:
    237a:	99 1b       	sub	r25, r25
    237c:	79 e0       	ldi	r23, 0x09	; 9
    237e:	04 c0       	rjmp	.+8      	; 0x2388 <__udivmodqi4_ep>

00002380 <__udivmodqi4_loop>:
    2380:	99 1f       	adc	r25, r25
    2382:	96 17       	cp	r25, r22
    2384:	08 f0       	brcs	.+2      	; 0x2388 <__udivmodqi4_ep>
    2386:	96 1b       	sub	r25, r22

00002388 <__udivmodqi4_ep>:
    2388:	88 1f       	adc	r24, r24
    238a:	7a 95       	dec	r23
    238c:	c9 f7       	brne	.-14     	; 0x2380 <__udivmodqi4_loop>
    238e:	80 95       	com	r24
    2390:	08 95       	ret

00002392 <__udivmodhi4>:
    2392:	aa 1b       	sub	r26, r26
    2394:	bb 1b       	sub	r27, r27
    2396:	51 e1       	ldi	r21, 0x11	; 17
    2398:	07 c0       	rjmp	.+14     	; 0x23a8 <__udivmodhi4_ep>

0000239a <__udivmodhi4_loop>:
    239a:	aa 1f       	adc	r26, r26
    239c:	bb 1f       	adc	r27, r27
    239e:	a6 17       	cp	r26, r22
    23a0:	b7 07       	cpc	r27, r23
    23a2:	10 f0       	brcs	.+4      	; 0x23a8 <__udivmodhi4_ep>
    23a4:	a6 1b       	sub	r26, r22
    23a6:	b7 0b       	sbc	r27, r23

000023a8 <__udivmodhi4_ep>:
    23a8:	88 1f       	adc	r24, r24
    23aa:	99 1f       	adc	r25, r25
    23ac:	5a 95       	dec	r21
    23ae:	a9 f7       	brne	.-22     	; 0x239a <__udivmodhi4_loop>
    23b0:	80 95       	com	r24
    23b2:	90 95       	com	r25
    23b4:	bc 01       	movw	r22, r24
    23b6:	cd 01       	movw	r24, r26
    23b8:	08 95       	ret

000023ba <__divmodhi4>:
    23ba:	97 fb       	bst	r25, 7
    23bc:	07 2e       	mov	r0, r23
    23be:	16 f4       	brtc	.+4      	; 0x23c4 <__divmodhi4+0xa>
    23c0:	00 94       	com	r0
    23c2:	07 d0       	rcall	.+14     	; 0x23d2 <__divmodhi4_neg1>
    23c4:	77 fd       	sbrc	r23, 7
    23c6:	09 d0       	rcall	.+18     	; 0x23da <__divmodhi4_neg2>
    23c8:	0e 94 c9 11 	call	0x2392	; 0x2392 <__udivmodhi4>
    23cc:	07 fc       	sbrc	r0, 7
    23ce:	05 d0       	rcall	.+10     	; 0x23da <__divmodhi4_neg2>
    23d0:	3e f4       	brtc	.+14     	; 0x23e0 <__divmodhi4_exit>

000023d2 <__divmodhi4_neg1>:
    23d2:	90 95       	com	r25
    23d4:	81 95       	neg	r24
    23d6:	9f 4f       	sbci	r25, 0xFF	; 255
    23d8:	08 95       	ret

000023da <__divmodhi4_neg2>:
    23da:	70 95       	com	r23
    23dc:	61 95       	neg	r22
    23de:	7f 4f       	sbci	r23, 0xFF	; 255

000023e0 <__divmodhi4_exit>:
    23e0:	08 95       	ret

000023e2 <__udivmodsi4>:
    23e2:	a1 e2       	ldi	r26, 0x21	; 33
    23e4:	1a 2e       	mov	r1, r26
    23e6:	aa 1b       	sub	r26, r26
    23e8:	bb 1b       	sub	r27, r27
    23ea:	fd 01       	movw	r30, r26
    23ec:	0d c0       	rjmp	.+26     	; 0x2408 <__udivmodsi4_ep>

000023ee <__udivmodsi4_loop>:
    23ee:	aa 1f       	adc	r26, r26
    23f0:	bb 1f       	adc	r27, r27
    23f2:	ee 1f       	adc	r30, r30
    23f4:	ff 1f       	adc	r31, r31
    23f6:	a2 17       	cp	r26, r18
    23f8:	b3 07       	cpc	r27, r19
    23fa:	e4 07       	cpc	r30, r20
    23fc:	f5 07       	cpc	r31, r21
    23fe:	20 f0       	brcs	.+8      	; 0x2408 <__udivmodsi4_ep>
    2400:	a2 1b       	sub	r26, r18
    2402:	b3 0b       	sbc	r27, r19
    2404:	e4 0b       	sbc	r30, r20
    2406:	f5 0b       	sbc	r31, r21

00002408 <__udivmodsi4_ep>:
    2408:	66 1f       	adc	r22, r22
    240a:	77 1f       	adc	r23, r23
    240c:	88 1f       	adc	r24, r24
    240e:	99 1f       	adc	r25, r25
    2410:	1a 94       	dec	r1
    2412:	69 f7       	brne	.-38     	; 0x23ee <__udivmodsi4_loop>
    2414:	60 95       	com	r22
    2416:	70 95       	com	r23
    2418:	80 95       	com	r24
    241a:	90 95       	com	r25
    241c:	9b 01       	movw	r18, r22
    241e:	ac 01       	movw	r20, r24
    2420:	bd 01       	movw	r22, r26
    2422:	cf 01       	movw	r24, r30
    2424:	08 95       	ret

00002426 <__divmodsi4>:
    2426:	05 2e       	mov	r0, r21
    2428:	97 fb       	bst	r25, 7
    242a:	1e f4       	brtc	.+6      	; 0x2432 <__divmodsi4+0xc>
    242c:	00 94       	com	r0
    242e:	0e 94 2a 12 	call	0x2454	; 0x2454 <__negsi2>
    2432:	57 fd       	sbrc	r21, 7
    2434:	07 d0       	rcall	.+14     	; 0x2444 <__divmodsi4_neg2>
    2436:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__udivmodsi4>
    243a:	07 fc       	sbrc	r0, 7
    243c:	03 d0       	rcall	.+6      	; 0x2444 <__divmodsi4_neg2>
    243e:	4e f4       	brtc	.+18     	; 0x2452 <__divmodsi4_exit>
    2440:	0c 94 2a 12 	jmp	0x2454	; 0x2454 <__negsi2>

00002444 <__divmodsi4_neg2>:
    2444:	50 95       	com	r21
    2446:	40 95       	com	r20
    2448:	30 95       	com	r19
    244a:	21 95       	neg	r18
    244c:	3f 4f       	sbci	r19, 0xFF	; 255
    244e:	4f 4f       	sbci	r20, 0xFF	; 255
    2450:	5f 4f       	sbci	r21, 0xFF	; 255

00002452 <__divmodsi4_exit>:
    2452:	08 95       	ret

00002454 <__negsi2>:
    2454:	90 95       	com	r25
    2456:	80 95       	com	r24
    2458:	70 95       	com	r23
    245a:	61 95       	neg	r22
    245c:	7f 4f       	sbci	r23, 0xFF	; 255
    245e:	8f 4f       	sbci	r24, 0xFF	; 255
    2460:	9f 4f       	sbci	r25, 0xFF	; 255
    2462:	08 95       	ret

00002464 <__muluhisi3>:
    2464:	0e 94 7a 12 	call	0x24f4	; 0x24f4 <__umulhisi3>
    2468:	a5 9f       	mul	r26, r21
    246a:	90 0d       	add	r25, r0
    246c:	b4 9f       	mul	r27, r20
    246e:	90 0d       	add	r25, r0
    2470:	a4 9f       	mul	r26, r20
    2472:	80 0d       	add	r24, r0
    2474:	91 1d       	adc	r25, r1
    2476:	11 24       	eor	r1, r1
    2478:	08 95       	ret

0000247a <__prologue_saves__>:
    247a:	2f 92       	push	r2
    247c:	3f 92       	push	r3
    247e:	4f 92       	push	r4
    2480:	5f 92       	push	r5
    2482:	6f 92       	push	r6
    2484:	7f 92       	push	r7
    2486:	8f 92       	push	r8
    2488:	9f 92       	push	r9
    248a:	af 92       	push	r10
    248c:	bf 92       	push	r11
    248e:	cf 92       	push	r12
    2490:	df 92       	push	r13
    2492:	ef 92       	push	r14
    2494:	ff 92       	push	r15
    2496:	0f 93       	push	r16
    2498:	1f 93       	push	r17
    249a:	cf 93       	push	r28
    249c:	df 93       	push	r29
    249e:	cd b7       	in	r28, 0x3d	; 61
    24a0:	de b7       	in	r29, 0x3e	; 62
    24a2:	ca 1b       	sub	r28, r26
    24a4:	db 0b       	sbc	r29, r27
    24a6:	0f b6       	in	r0, 0x3f	; 63
    24a8:	f8 94       	cli
    24aa:	de bf       	out	0x3e, r29	; 62
    24ac:	0f be       	out	0x3f, r0	; 63
    24ae:	cd bf       	out	0x3d, r28	; 61
    24b0:	09 94       	ijmp

000024b2 <__epilogue_restores__>:
    24b2:	2a 88       	ldd	r2, Y+18	; 0x12
    24b4:	39 88       	ldd	r3, Y+17	; 0x11
    24b6:	48 88       	ldd	r4, Y+16	; 0x10
    24b8:	5f 84       	ldd	r5, Y+15	; 0x0f
    24ba:	6e 84       	ldd	r6, Y+14	; 0x0e
    24bc:	7d 84       	ldd	r7, Y+13	; 0x0d
    24be:	8c 84       	ldd	r8, Y+12	; 0x0c
    24c0:	9b 84       	ldd	r9, Y+11	; 0x0b
    24c2:	aa 84       	ldd	r10, Y+10	; 0x0a
    24c4:	b9 84       	ldd	r11, Y+9	; 0x09
    24c6:	c8 84       	ldd	r12, Y+8	; 0x08
    24c8:	df 80       	ldd	r13, Y+7	; 0x07
    24ca:	ee 80       	ldd	r14, Y+6	; 0x06
    24cc:	fd 80       	ldd	r15, Y+5	; 0x05
    24ce:	0c 81       	ldd	r16, Y+4	; 0x04
    24d0:	1b 81       	ldd	r17, Y+3	; 0x03
    24d2:	aa 81       	ldd	r26, Y+2	; 0x02
    24d4:	b9 81       	ldd	r27, Y+1	; 0x01
    24d6:	ce 0f       	add	r28, r30
    24d8:	d1 1d       	adc	r29, r1
    24da:	0f b6       	in	r0, 0x3f	; 63
    24dc:	f8 94       	cli
    24de:	de bf       	out	0x3e, r29	; 62
    24e0:	0f be       	out	0x3f, r0	; 63
    24e2:	cd bf       	out	0x3d, r28	; 61
    24e4:	ed 01       	movw	r28, r26
    24e6:	08 95       	ret

000024e8 <__tablejump2__>:
    24e8:	ee 0f       	add	r30, r30
    24ea:	ff 1f       	adc	r31, r31

000024ec <__tablejump__>:
    24ec:	05 90       	lpm	r0, Z+
    24ee:	f4 91       	lpm	r31, Z
    24f0:	e0 2d       	mov	r30, r0
    24f2:	09 94       	ijmp

000024f4 <__umulhisi3>:
    24f4:	a2 9f       	mul	r26, r18
    24f6:	b0 01       	movw	r22, r0
    24f8:	b3 9f       	mul	r27, r19
    24fa:	c0 01       	movw	r24, r0
    24fc:	a3 9f       	mul	r26, r19
    24fe:	70 0d       	add	r23, r0
    2500:	81 1d       	adc	r24, r1
    2502:	11 24       	eor	r1, r1
    2504:	91 1d       	adc	r25, r1
    2506:	b2 9f       	mul	r27, r18
    2508:	70 0d       	add	r23, r0
    250a:	81 1d       	adc	r24, r1
    250c:	11 24       	eor	r1, r1
    250e:	91 1d       	adc	r25, r1
    2510:	08 95       	ret

00002512 <malloc>:
    2512:	cf 93       	push	r28
    2514:	df 93       	push	r29
    2516:	82 30       	cpi	r24, 0x02	; 2
    2518:	91 05       	cpc	r25, r1
    251a:	10 f4       	brcc	.+4      	; 0x2520 <malloc+0xe>
    251c:	82 e0       	ldi	r24, 0x02	; 2
    251e:	90 e0       	ldi	r25, 0x00	; 0
    2520:	e0 91 bf 01 	lds	r30, 0x01BF
    2524:	f0 91 c0 01 	lds	r31, 0x01C0
    2528:	20 e0       	ldi	r18, 0x00	; 0
    252a:	30 e0       	ldi	r19, 0x00	; 0
    252c:	a0 e0       	ldi	r26, 0x00	; 0
    252e:	b0 e0       	ldi	r27, 0x00	; 0
    2530:	30 97       	sbiw	r30, 0x00	; 0
    2532:	39 f1       	breq	.+78     	; 0x2582 <malloc+0x70>
    2534:	40 81       	ld	r20, Z
    2536:	51 81       	ldd	r21, Z+1	; 0x01
    2538:	48 17       	cp	r20, r24
    253a:	59 07       	cpc	r21, r25
    253c:	b8 f0       	brcs	.+46     	; 0x256c <malloc+0x5a>
    253e:	48 17       	cp	r20, r24
    2540:	59 07       	cpc	r21, r25
    2542:	71 f4       	brne	.+28     	; 0x2560 <malloc+0x4e>
    2544:	82 81       	ldd	r24, Z+2	; 0x02
    2546:	93 81       	ldd	r25, Z+3	; 0x03
    2548:	10 97       	sbiw	r26, 0x00	; 0
    254a:	29 f0       	breq	.+10     	; 0x2556 <malloc+0x44>
    254c:	13 96       	adiw	r26, 0x03	; 3
    254e:	9c 93       	st	X, r25
    2550:	8e 93       	st	-X, r24
    2552:	12 97       	sbiw	r26, 0x02	; 2
    2554:	2c c0       	rjmp	.+88     	; 0x25ae <malloc+0x9c>
    2556:	90 93 c0 01 	sts	0x01C0, r25
    255a:	80 93 bf 01 	sts	0x01BF, r24
    255e:	27 c0       	rjmp	.+78     	; 0x25ae <malloc+0x9c>
    2560:	21 15       	cp	r18, r1
    2562:	31 05       	cpc	r19, r1
    2564:	31 f0       	breq	.+12     	; 0x2572 <malloc+0x60>
    2566:	42 17       	cp	r20, r18
    2568:	53 07       	cpc	r21, r19
    256a:	18 f0       	brcs	.+6      	; 0x2572 <malloc+0x60>
    256c:	a9 01       	movw	r20, r18
    256e:	db 01       	movw	r26, r22
    2570:	01 c0       	rjmp	.+2      	; 0x2574 <malloc+0x62>
    2572:	ef 01       	movw	r28, r30
    2574:	9a 01       	movw	r18, r20
    2576:	bd 01       	movw	r22, r26
    2578:	df 01       	movw	r26, r30
    257a:	02 80       	ldd	r0, Z+2	; 0x02
    257c:	f3 81       	ldd	r31, Z+3	; 0x03
    257e:	e0 2d       	mov	r30, r0
    2580:	d7 cf       	rjmp	.-82     	; 0x2530 <malloc+0x1e>
    2582:	21 15       	cp	r18, r1
    2584:	31 05       	cpc	r19, r1
    2586:	f9 f0       	breq	.+62     	; 0x25c6 <malloc+0xb4>
    2588:	28 1b       	sub	r18, r24
    258a:	39 0b       	sbc	r19, r25
    258c:	24 30       	cpi	r18, 0x04	; 4
    258e:	31 05       	cpc	r19, r1
    2590:	80 f4       	brcc	.+32     	; 0x25b2 <malloc+0xa0>
    2592:	8a 81       	ldd	r24, Y+2	; 0x02
    2594:	9b 81       	ldd	r25, Y+3	; 0x03
    2596:	61 15       	cp	r22, r1
    2598:	71 05       	cpc	r23, r1
    259a:	21 f0       	breq	.+8      	; 0x25a4 <malloc+0x92>
    259c:	fb 01       	movw	r30, r22
    259e:	93 83       	std	Z+3, r25	; 0x03
    25a0:	82 83       	std	Z+2, r24	; 0x02
    25a2:	04 c0       	rjmp	.+8      	; 0x25ac <malloc+0x9a>
    25a4:	90 93 c0 01 	sts	0x01C0, r25
    25a8:	80 93 bf 01 	sts	0x01BF, r24
    25ac:	fe 01       	movw	r30, r28
    25ae:	32 96       	adiw	r30, 0x02	; 2
    25b0:	44 c0       	rjmp	.+136    	; 0x263a <malloc+0x128>
    25b2:	fe 01       	movw	r30, r28
    25b4:	e2 0f       	add	r30, r18
    25b6:	f3 1f       	adc	r31, r19
    25b8:	81 93       	st	Z+, r24
    25ba:	91 93       	st	Z+, r25
    25bc:	22 50       	subi	r18, 0x02	; 2
    25be:	31 09       	sbc	r19, r1
    25c0:	39 83       	std	Y+1, r19	; 0x01
    25c2:	28 83       	st	Y, r18
    25c4:	3a c0       	rjmp	.+116    	; 0x263a <malloc+0x128>
    25c6:	20 91 bd 01 	lds	r18, 0x01BD
    25ca:	30 91 be 01 	lds	r19, 0x01BE
    25ce:	23 2b       	or	r18, r19
    25d0:	41 f4       	brne	.+16     	; 0x25e2 <malloc+0xd0>
    25d2:	20 91 2d 01 	lds	r18, 0x012D
    25d6:	30 91 2e 01 	lds	r19, 0x012E
    25da:	30 93 be 01 	sts	0x01BE, r19
    25de:	20 93 bd 01 	sts	0x01BD, r18
    25e2:	20 91 2b 01 	lds	r18, 0x012B
    25e6:	30 91 2c 01 	lds	r19, 0x012C
    25ea:	21 15       	cp	r18, r1
    25ec:	31 05       	cpc	r19, r1
    25ee:	41 f4       	brne	.+16     	; 0x2600 <malloc+0xee>
    25f0:	2d b7       	in	r18, 0x3d	; 61
    25f2:	3e b7       	in	r19, 0x3e	; 62
    25f4:	40 91 2f 01 	lds	r20, 0x012F
    25f8:	50 91 30 01 	lds	r21, 0x0130
    25fc:	24 1b       	sub	r18, r20
    25fe:	35 0b       	sbc	r19, r21
    2600:	e0 91 bd 01 	lds	r30, 0x01BD
    2604:	f0 91 be 01 	lds	r31, 0x01BE
    2608:	e2 17       	cp	r30, r18
    260a:	f3 07       	cpc	r31, r19
    260c:	a0 f4       	brcc	.+40     	; 0x2636 <malloc+0x124>
    260e:	2e 1b       	sub	r18, r30
    2610:	3f 0b       	sbc	r19, r31
    2612:	28 17       	cp	r18, r24
    2614:	39 07       	cpc	r19, r25
    2616:	78 f0       	brcs	.+30     	; 0x2636 <malloc+0x124>
    2618:	ac 01       	movw	r20, r24
    261a:	4e 5f       	subi	r20, 0xFE	; 254
    261c:	5f 4f       	sbci	r21, 0xFF	; 255
    261e:	24 17       	cp	r18, r20
    2620:	35 07       	cpc	r19, r21
    2622:	48 f0       	brcs	.+18     	; 0x2636 <malloc+0x124>
    2624:	4e 0f       	add	r20, r30
    2626:	5f 1f       	adc	r21, r31
    2628:	50 93 be 01 	sts	0x01BE, r21
    262c:	40 93 bd 01 	sts	0x01BD, r20
    2630:	81 93       	st	Z+, r24
    2632:	91 93       	st	Z+, r25
    2634:	02 c0       	rjmp	.+4      	; 0x263a <malloc+0x128>
    2636:	e0 e0       	ldi	r30, 0x00	; 0
    2638:	f0 e0       	ldi	r31, 0x00	; 0
    263a:	cf 01       	movw	r24, r30
    263c:	df 91       	pop	r29
    263e:	cf 91       	pop	r28
    2640:	08 95       	ret

00002642 <free>:
    2642:	cf 93       	push	r28
    2644:	df 93       	push	r29
    2646:	00 97       	sbiw	r24, 0x00	; 0
    2648:	09 f4       	brne	.+2      	; 0x264c <free+0xa>
    264a:	87 c0       	rjmp	.+270    	; 0x275a <free+0x118>
    264c:	fc 01       	movw	r30, r24
    264e:	32 97       	sbiw	r30, 0x02	; 2
    2650:	13 82       	std	Z+3, r1	; 0x03
    2652:	12 82       	std	Z+2, r1	; 0x02
    2654:	c0 91 bf 01 	lds	r28, 0x01BF
    2658:	d0 91 c0 01 	lds	r29, 0x01C0
    265c:	20 97       	sbiw	r28, 0x00	; 0
    265e:	81 f4       	brne	.+32     	; 0x2680 <free+0x3e>
    2660:	20 81       	ld	r18, Z
    2662:	31 81       	ldd	r19, Z+1	; 0x01
    2664:	28 0f       	add	r18, r24
    2666:	39 1f       	adc	r19, r25
    2668:	80 91 bd 01 	lds	r24, 0x01BD
    266c:	90 91 be 01 	lds	r25, 0x01BE
    2670:	82 17       	cp	r24, r18
    2672:	93 07       	cpc	r25, r19
    2674:	79 f5       	brne	.+94     	; 0x26d4 <free+0x92>
    2676:	f0 93 be 01 	sts	0x01BE, r31
    267a:	e0 93 bd 01 	sts	0x01BD, r30
    267e:	6d c0       	rjmp	.+218    	; 0x275a <free+0x118>
    2680:	de 01       	movw	r26, r28
    2682:	20 e0       	ldi	r18, 0x00	; 0
    2684:	30 e0       	ldi	r19, 0x00	; 0
    2686:	ae 17       	cp	r26, r30
    2688:	bf 07       	cpc	r27, r31
    268a:	50 f4       	brcc	.+20     	; 0x26a0 <free+0x5e>
    268c:	12 96       	adiw	r26, 0x02	; 2
    268e:	4d 91       	ld	r20, X+
    2690:	5c 91       	ld	r21, X
    2692:	13 97       	sbiw	r26, 0x03	; 3
    2694:	9d 01       	movw	r18, r26
    2696:	41 15       	cp	r20, r1
    2698:	51 05       	cpc	r21, r1
    269a:	09 f1       	breq	.+66     	; 0x26de <free+0x9c>
    269c:	da 01       	movw	r26, r20
    269e:	f3 cf       	rjmp	.-26     	; 0x2686 <free+0x44>
    26a0:	b3 83       	std	Z+3, r27	; 0x03
    26a2:	a2 83       	std	Z+2, r26	; 0x02
    26a4:	40 81       	ld	r20, Z
    26a6:	51 81       	ldd	r21, Z+1	; 0x01
    26a8:	84 0f       	add	r24, r20
    26aa:	95 1f       	adc	r25, r21
    26ac:	8a 17       	cp	r24, r26
    26ae:	9b 07       	cpc	r25, r27
    26b0:	71 f4       	brne	.+28     	; 0x26ce <free+0x8c>
    26b2:	8d 91       	ld	r24, X+
    26b4:	9c 91       	ld	r25, X
    26b6:	11 97       	sbiw	r26, 0x01	; 1
    26b8:	84 0f       	add	r24, r20
    26ba:	95 1f       	adc	r25, r21
    26bc:	02 96       	adiw	r24, 0x02	; 2
    26be:	91 83       	std	Z+1, r25	; 0x01
    26c0:	80 83       	st	Z, r24
    26c2:	12 96       	adiw	r26, 0x02	; 2
    26c4:	8d 91       	ld	r24, X+
    26c6:	9c 91       	ld	r25, X
    26c8:	13 97       	sbiw	r26, 0x03	; 3
    26ca:	93 83       	std	Z+3, r25	; 0x03
    26cc:	82 83       	std	Z+2, r24	; 0x02
    26ce:	21 15       	cp	r18, r1
    26d0:	31 05       	cpc	r19, r1
    26d2:	29 f4       	brne	.+10     	; 0x26de <free+0x9c>
    26d4:	f0 93 c0 01 	sts	0x01C0, r31
    26d8:	e0 93 bf 01 	sts	0x01BF, r30
    26dc:	3e c0       	rjmp	.+124    	; 0x275a <free+0x118>
    26de:	d9 01       	movw	r26, r18
    26e0:	13 96       	adiw	r26, 0x03	; 3
    26e2:	fc 93       	st	X, r31
    26e4:	ee 93       	st	-X, r30
    26e6:	12 97       	sbiw	r26, 0x02	; 2
    26e8:	4d 91       	ld	r20, X+
    26ea:	5d 91       	ld	r21, X+
    26ec:	a4 0f       	add	r26, r20
    26ee:	b5 1f       	adc	r27, r21
    26f0:	ea 17       	cp	r30, r26
    26f2:	fb 07       	cpc	r31, r27
    26f4:	79 f4       	brne	.+30     	; 0x2714 <free+0xd2>
    26f6:	80 81       	ld	r24, Z
    26f8:	91 81       	ldd	r25, Z+1	; 0x01
    26fa:	84 0f       	add	r24, r20
    26fc:	95 1f       	adc	r25, r21
    26fe:	02 96       	adiw	r24, 0x02	; 2
    2700:	d9 01       	movw	r26, r18
    2702:	11 96       	adiw	r26, 0x01	; 1
    2704:	9c 93       	st	X, r25
    2706:	8e 93       	st	-X, r24
    2708:	82 81       	ldd	r24, Z+2	; 0x02
    270a:	93 81       	ldd	r25, Z+3	; 0x03
    270c:	13 96       	adiw	r26, 0x03	; 3
    270e:	9c 93       	st	X, r25
    2710:	8e 93       	st	-X, r24
    2712:	12 97       	sbiw	r26, 0x02	; 2
    2714:	e0 e0       	ldi	r30, 0x00	; 0
    2716:	f0 e0       	ldi	r31, 0x00	; 0
    2718:	8a 81       	ldd	r24, Y+2	; 0x02
    271a:	9b 81       	ldd	r25, Y+3	; 0x03
    271c:	00 97       	sbiw	r24, 0x00	; 0
    271e:	19 f0       	breq	.+6      	; 0x2726 <free+0xe4>
    2720:	fe 01       	movw	r30, r28
    2722:	ec 01       	movw	r28, r24
    2724:	f9 cf       	rjmp	.-14     	; 0x2718 <free+0xd6>
    2726:	ce 01       	movw	r24, r28
    2728:	02 96       	adiw	r24, 0x02	; 2
    272a:	28 81       	ld	r18, Y
    272c:	39 81       	ldd	r19, Y+1	; 0x01
    272e:	82 0f       	add	r24, r18
    2730:	93 1f       	adc	r25, r19
    2732:	20 91 bd 01 	lds	r18, 0x01BD
    2736:	30 91 be 01 	lds	r19, 0x01BE
    273a:	28 17       	cp	r18, r24
    273c:	39 07       	cpc	r19, r25
    273e:	69 f4       	brne	.+26     	; 0x275a <free+0x118>
    2740:	30 97       	sbiw	r30, 0x00	; 0
    2742:	29 f4       	brne	.+10     	; 0x274e <free+0x10c>
    2744:	10 92 c0 01 	sts	0x01C0, r1
    2748:	10 92 bf 01 	sts	0x01BF, r1
    274c:	02 c0       	rjmp	.+4      	; 0x2752 <free+0x110>
    274e:	13 82       	std	Z+3, r1	; 0x03
    2750:	12 82       	std	Z+2, r1	; 0x02
    2752:	d0 93 be 01 	sts	0x01BE, r29
    2756:	c0 93 bd 01 	sts	0x01BD, r28
    275a:	df 91       	pop	r29
    275c:	cf 91       	pop	r28
    275e:	08 95       	ret

00002760 <__do_global_dtors>:
    2760:	10 e0       	ldi	r17, 0x00	; 0
    2762:	cc ea       	ldi	r28, 0xAC	; 172
    2764:	d0 e0       	ldi	r29, 0x00	; 0
    2766:	04 c0       	rjmp	.+8      	; 0x2770 <__do_global_dtors+0x10>
    2768:	fe 01       	movw	r30, r28
    276a:	0e 94 76 12 	call	0x24ec	; 0x24ec <__tablejump__>
    276e:	22 96       	adiw	r28, 0x02	; 2
    2770:	ce 3a       	cpi	r28, 0xAE	; 174
    2772:	d1 07       	cpc	r29, r17
    2774:	c9 f7       	brne	.-14     	; 0x2768 <__do_global_dtors+0x8>
    2776:	f8 94       	cli

00002778 <__stop_program>:
    2778:	ff cf       	rjmp	.-2      	; 0x2778 <__stop_program>
