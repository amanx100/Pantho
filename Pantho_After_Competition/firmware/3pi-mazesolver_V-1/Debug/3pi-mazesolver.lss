
3pi-mazesolver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  000027ea  0000287e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000077  0080014a  0080014a  000028c8  2**0
                  ALLOC
  3 .stab         00006624  00000000  00000000  000028c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008bbc  00000000  00000000  00008eec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00011aa8  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e0  00000000  00000000  00011ad8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001322  00000000  00000000  00011bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000765  00000000  00000000  00012eda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f85  00000000  00000000  0001363f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000020c  00000000  00000000  000145c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000041c  00000000  00000000  000147d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    0000085a  00000000  00000000  00014bec  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000c0  00000000  00000000  00015446  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 00 	jmp	0xae	; 0xae <__dtors_end>
       4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      24:	0c 94 ef 0b 	jmp	0x17de	; 0x17de <__vector_9>
      28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      34:	0c 94 3a 08 	jmp	0x1074	; 0x1074 <__vector_13>
      38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <go>:
      76:	4c 31 36 20 63 64 65 67 72 65 67 34 00              L16 cdegreg4.

00000083 <welcome>:
      83:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000008d <demo_name_line2>:
      8d:	73 6f 6c 76 65 72 00                                solver.

00000094 <demo_name_line1>:
      94:	4d 61 7a 65 00                                      Maze.

00000099 <welcome_line2>:
      99:	33 f7 20 52 6f 62 6f 74 00                          3. Robot.

000000a2 <welcome_line1>:
      a2:	20 50 6f 6c 6f 6c 75 00                              Pololu.

000000aa <__ctors_start>:
      aa:	b8 0c       	add	r11, r8

000000ac <__ctors_end>:
      ac:	b9 0c       	add	r11, r9

000000ae <__dtors_end>:
      ae:	11 24       	eor	r1, r1
      b0:	1f be       	out	0x3f, r1	; 63
      b2:	cf ef       	ldi	r28, 0xFF	; 255
      b4:	d8 e0       	ldi	r29, 0x08	; 8
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_copy_data>:
      ba:	11 e0       	ldi	r17, 0x01	; 1
      bc:	a0 e0       	ldi	r26, 0x00	; 0
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	ea ee       	ldi	r30, 0xEA	; 234
      c2:	f7 e2       	ldi	r31, 0x27	; 39
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x10>
      c6:	05 90       	lpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	aa 34       	cpi	r26, 0x4A	; 74
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0xc>

000000d0 <__do_clear_bss>:
      d0:	21 e0       	ldi	r18, 0x01	; 1
      d2:	aa e4       	ldi	r26, 0x4A	; 74
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a1 3c       	cpi	r26, 0xC1	; 193
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>

000000e0 <__do_global_ctors>:
      e0:	10 e0       	ldi	r17, 0x00	; 0
      e2:	cc ea       	ldi	r28, 0xAC	; 172
      e4:	d0 e0       	ldi	r29, 0x00	; 0
      e6:	04 c0       	rjmp	.+8      	; 0xf0 <__do_global_ctors+0x10>
      e8:	22 97       	sbiw	r28, 0x02	; 2
      ea:	fe 01       	movw	r30, r28
      ec:	0e 94 ae 12 	call	0x255c	; 0x255c <__tablejump__>
      f0:	ca 3a       	cpi	r28, 0xAA	; 170
      f2:	d1 07       	cpc	r29, r17
      f4:	c9 f7       	brne	.-14     	; 0xe8 <__do_global_ctors+0x8>
      f6:	0e 94 44 02 	call	0x488	; 0x488 <main>
      fa:	0c 94 e8 13 	jmp	0x27d0	; 0x27d0 <__do_global_dtors>

000000fe <__bad_interrupt>:
      fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <load_custom_characters>:

// This function loads custom characters into the LCD.  Up to 8
// characters can be loaded; we use them for 7 levels of a bar graph.
void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     102:	60 e0       	ldi	r22, 0x00	; 0
     104:	88 e6       	ldi	r24, 0x68	; 104
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     10c:	61 e0       	ldi	r22, 0x01	; 1
     10e:	89 e6       	ldi	r24, 0x69	; 105
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     116:	62 e0       	ldi	r22, 0x02	; 2
     118:	8a e6       	ldi	r24, 0x6A	; 106
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     120:	63 e0       	ldi	r22, 0x03	; 3
     122:	8b e6       	ldi	r24, 0x6B	; 107
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     12a:	64 e0       	ldi	r22, 0x04	; 4
     12c:	8c e6       	ldi	r24, 0x6C	; 108
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     134:	65 e0       	ldi	r22, 0x05	; 5
     136:	8d e6       	ldi	r24, 0x6D	; 109
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     13e:	66 e0       	ldi	r22, 0x06	; 6
     140:	8e e6       	ldi	r24, 0x6E	; 110
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	0e 94 6f 09 	call	0x12de	; 0x12de <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     148:	0c 94 ef 09 	jmp	0x13de	; 0x13de <clear>

0000014c <display_readings>:
}

// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
     14c:	cf 92       	push	r12
     14e:	df 92       	push	r13
     150:	ef 92       	push	r14
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	cd b7       	in	r28, 0x3d	; 61
     15e:	de b7       	in	r29, 0x3e	; 62
     160:	2a 97       	sbiw	r28, 0x0a	; 10
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	de bf       	out	0x3e, r29	; 62
     168:	0f be       	out	0x3f, r0	; 63
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	8c 01       	movw	r16, r24
	unsigned char i;

	for(i=0;i<5;i++) {
     16e:	d1 2c       	mov	r13, r1
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     170:	8a e0       	ldi	r24, 0x0A	; 10
     172:	c8 2e       	mov	r12, r24

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     174:	95 e6       	ldi	r25, 0x65	; 101
     176:	e9 2e       	mov	r14, r25
     178:	f1 2c       	mov	r15, r1
	for(i=0;i<5;i++) {
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     17a:	e1 e3       	ldi	r30, 0x31	; 49
     17c:	f1 e0       	ldi	r31, 0x01	; 1
     17e:	de 01       	movw	r26, r28
     180:	11 96       	adiw	r26, 0x01	; 1
     182:	8c 2d       	mov	r24, r12
     184:	01 90       	ld	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	8a 95       	dec	r24
     18a:	e1 f7       	brne	.-8      	; 0x184 <display_readings+0x38>

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     18c:	f8 01       	movw	r30, r16
     18e:	81 91       	ld	r24, Z+
     190:	91 91       	ld	r25, Z+
     192:	8f 01       	movw	r16, r30
     194:	b7 01       	movw	r22, r14
     196:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	8c 0f       	add	r24, r28
     1a0:	9d 1f       	adc	r25, r29
     1a2:	68 0f       	add	r22, r24
     1a4:	79 1f       	adc	r23, r25

		// Display the bar graph character.
		print_character(c);
     1a6:	fb 01       	movw	r30, r22
     1a8:	80 81       	ld	r24, Z
     1aa:	0e 94 72 09 	call	0x12e4	; 0x12e4 <print_character>
// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;

	for(i=0;i<5;i++) {
     1ae:	d3 94       	inc	r13
     1b0:	f5 e0       	ldi	r31, 0x05	; 5
     1b2:	df 12       	cpse	r13, r31
     1b4:	e2 cf       	rjmp	.-60     	; 0x17a <display_readings+0x2e>
		char c = display_characters[calibrated_values[i]/101];

		// Display the bar graph character.
		print_character(c);
	}
}
     1b6:	2a 96       	adiw	r28, 0x0a	; 10
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	08 95       	ret

000001d4 <follow_segment>:
#include <pololu/3pi.h>

void follow_segment(int max)
{
     1d4:	2f 92       	push	r2
     1d6:	3f 92       	push	r3
     1d8:	4f 92       	push	r4
     1da:	5f 92       	push	r5
     1dc:	6f 92       	push	r6
     1de:	7f 92       	push	r7
     1e0:	8f 92       	push	r8
     1e2:	9f 92       	push	r9
     1e4:	af 92       	push	r10
     1e6:	bf 92       	push	r11
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	2a 97       	sbiw	r28, 0x0a	; 10
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
     208:	8c 01       	movw	r16, r24
	int last_proportional = 0;
	long integral=0;
     20a:	c1 2c       	mov	r12, r1
     20c:	d1 2c       	mov	r13, r1
     20e:	76 01       	movw	r14, r12
#include <pololu/3pi.h>

void follow_segment(int max)
{
	int last_proportional = 0;
     210:	21 2c       	mov	r2, r1
     212:	31 2c       	mov	r3, r1
		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     214:	50 e1       	ldi	r21, 0x10	; 16
     216:	45 2e       	mov	r4, r21
     218:	57 e2       	ldi	r21, 0x27	; 39
     21a:	55 2e       	mov	r5, r21
     21c:	61 2c       	mov	r6, r1
     21e:	71 2c       	mov	r7, r1

		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
     220:	88 24       	eor	r8, r8
     222:	99 24       	eor	r9, r9
     224:	88 1a       	sub	r8, r24
     226:	99 0a       	sbc	r9, r25
	long integral=0;

	while(1)
	{
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     228:	61 e0       	ldi	r22, 0x01	; 1
     22a:	ce 01       	movw	r24, r28
     22c:	01 96       	adiw	r24, 0x01	; 1
     22e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>

		int proportional = ((int)position) - 2000;
     232:	80 5d       	subi	r24, 0xD0	; 208
     234:	97 40       	sbci	r25, 0x07	; 7
     236:	5c 01       	movw	r10, r24

		int derivative = proportional - last_proportional;
		integral += proportional;
     238:	aa 27       	eor	r26, r26
     23a:	97 fd       	sbrc	r25, 7
     23c:	a0 95       	com	r26
     23e:	ba 2f       	mov	r27, r26
     240:	c8 0e       	add	r12, r24
     242:	d9 1e       	adc	r13, r25
     244:	ea 1e       	adc	r14, r26
     246:	fb 1e       	adc	r15, r27

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     248:	c7 01       	movw	r24, r14
     24a:	b6 01       	movw	r22, r12
     24c:	a3 01       	movw	r20, r6
     24e:	92 01       	movw	r18, r4
     250:	0e 94 4b 12 	call	0x2496	; 0x2496 <__divmodsi4>
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);

		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
     254:	b5 01       	movw	r22, r10
     256:	62 19       	sub	r22, r2
     258:	73 09       	sbc	r23, r3
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     25a:	cb 01       	movw	r24, r22
     25c:	88 0f       	add	r24, r24
     25e:	99 1f       	adc	r25, r25
     260:	86 0f       	add	r24, r22
     262:	97 1f       	adc	r25, r23
     264:	97 fd       	sbrc	r25, 7
     266:	01 96       	adiw	r24, 0x01	; 1
     268:	fc 01       	movw	r30, r24
     26a:	f5 95       	asr	r31
     26c:	e7 95       	ror	r30
     26e:	e2 0f       	add	r30, r18
     270:	f3 1f       	adc	r31, r19
     272:	c5 01       	movw	r24, r10
     274:	64 e1       	ldi	r22, 0x14	; 20
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	0e 94 15 12 	call	0x242a	; 0x242a <__divmodhi4>
     27c:	e6 0f       	add	r30, r22
     27e:	f7 1f       	adc	r31, r23
     280:	0e 17       	cp	r16, r30
     282:	1f 07       	cpc	r17, r31
     284:	0c f4       	brge	.+2      	; 0x288 <follow_segment+0xb4>
     286:	f8 01       	movw	r30, r16
     288:	cf 01       	movw	r24, r30
     28a:	e8 15       	cp	r30, r8
     28c:	f9 05       	cpc	r31, r9
     28e:	0c f4       	brge	.+2      	; 0x292 <follow_segment+0xbe>
     290:	c4 01       	movw	r24, r8
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
			set_motors(max+power_difference,max);
     292:	b8 01       	movw	r22, r16
		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
     294:	97 ff       	sbrs	r25, 7
     296:	03 c0       	rjmp	.+6      	; 0x29e <follow_segment+0xca>
			set_motors(max+power_difference,max);
     298:	80 0f       	add	r24, r16
     29a:	91 1f       	adc	r25, r17
     29c:	03 c0       	rjmp	.+6      	; 0x2a4 <follow_segment+0xd0>
		else
			set_motors(max,max-power_difference);
     29e:	68 1b       	sub	r22, r24
     2a0:	79 0b       	sbc	r23, r25
     2a2:	c8 01       	movw	r24, r16
     2a4:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>

		if(sensors[1] < 100 && sensors[2] < 100 && sensors[3] < 100)
     2a8:	8b 81       	ldd	r24, Y+3	; 0x03
     2aa:	9c 81       	ldd	r25, Y+4	; 0x04
     2ac:	84 36       	cpi	r24, 0x64	; 100
     2ae:	91 05       	cpc	r25, r1
     2b0:	50 f4       	brcc	.+20     	; 0x2c6 <follow_segment+0xf2>
     2b2:	8d 81       	ldd	r24, Y+5	; 0x05
     2b4:	9e 81       	ldd	r25, Y+6	; 0x06
     2b6:	84 36       	cpi	r24, 0x64	; 100
     2b8:	91 05       	cpc	r25, r1
     2ba:	28 f4       	brcc	.+10     	; 0x2c6 <follow_segment+0xf2>
     2bc:	8f 81       	ldd	r24, Y+7	; 0x07
     2be:	98 85       	ldd	r25, Y+8	; 0x08
     2c0:	84 36       	cpi	r24, 0x64	; 100
     2c2:	91 05       	cpc	r25, r1
     2c4:	60 f0       	brcs	.+24     	; 0x2de <follow_segment+0x10a>
		{
			return;
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	89 3c       	cpi	r24, 0xC9	; 201
     2cc:	91 05       	cpc	r25, r1
     2ce:	38 f4       	brcc	.+14     	; 0x2de <follow_segment+0x10a>
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	89 3c       	cpi	r24, 0xC9	; 201
     2d6:	91 05       	cpc	r25, r1
     2d8:	10 f4       	brcc	.+4      	; 0x2de <follow_segment+0x10a>
		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
     2da:	15 01       	movw	r2, r10
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
		{
			return;
		}
	}
     2dc:	a5 cf       	rjmp	.-182    	; 0x228 <follow_segment+0x54>
     2de:	2a 96       	adiw	r28, 0x0a	; 10
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	0f 91       	pop	r16
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	df 90       	pop	r13
     2f8:	cf 90       	pop	r12
     2fa:	bf 90       	pop	r11
     2fc:	af 90       	pop	r10
     2fe:	9f 90       	pop	r9
     300:	8f 90       	pop	r8
     302:	7f 90       	pop	r7
     304:	6f 90       	pop	r6
     306:	5f 90       	pop	r5
     308:	4f 90       	pop	r4
     30a:	3f 90       	pop	r3
     30c:	2f 90       	pop	r2
     30e:	08 95       	ret

00000310 <initialize>:

const char welcome[] PROGMEM = ">g32>>c32";
const char go[] PROGMEM = "L16 cdegreg4";

void initialize()
{
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	2a 97       	sbiw	r28, 0x0a	; 10
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; 
	unsigned int sensors[5]; 
	
	pololu_3pi_init(2000);
     328:	80 ed       	ldi	r24, 0xD0	; 208
     32a:	97 e0       	ldi	r25, 0x07	; 7
     32c:	0e 94 b4 0c 	call	0x1968	; 0x1968 <pololu_3pi_init>
	load_custom_characters();
     330:	0e 94 81 00 	call	0x102	; 0x102 <load_custom_characters>
	
	print_from_program_space(welcome_line1);
     334:	82 ea       	ldi	r24, 0xA2	; 162
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 17 0a 	call	0x142e	; 0x142e <print_from_program_space>
	lcd_goto_xy(0,1);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 97 0a 	call	0x152e	; 0x152e <lcd_goto_xy>
	print_from_program_space(welcome_line2);
     344:	89 e9       	ldi	r24, 0x99	; 153
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 17 0a 	call	0x142e	; 0x142e <print_from_program_space>
	play_from_program_space(welcome);
     34c:	83 e8       	ldi	r24, 0x83	; 131
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 ac 08 	call	0x1158	; 0x1158 <play_from_program_space>
	delay_ms(1000);
     354:	88 ee       	ldi	r24, 0xE8	; 232
     356:	93 e0       	ldi	r25, 0x03	; 3
     358:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>

	clear();
     35c:	0e 94 ef 09 	call	0x13de	; 0x13de <clear>
	print_from_program_space(demo_name_line1);
     360:	84 e9       	ldi	r24, 0x94	; 148
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 17 0a 	call	0x142e	; 0x142e <print_from_program_space>
	lcd_goto_xy(0,1);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	0e 94 97 0a 	call	0x152e	; 0x152e <lcd_goto_xy>
	print_from_program_space(demo_name_line2);
     370:	8d e8       	ldi	r24, 0x8D	; 141
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 17 0a 	call	0x142e	; 0x142e <print_from_program_space>
	delay_ms(1000);
     378:	88 ee       	ldi	r24, 0xE8	; 232
     37a:	93 e0       	ldi	r25, 0x03	; 3
		print_long(bat);
		print("mV");
		lcd_goto_xy(0,1);
		print("Press B");

		delay_ms(100);
     37c:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
	print_from_program_space(demo_name_line1);
	lcd_goto_xy(0,1);
	print_from_program_space(demo_name_line2);
	delay_ms(1000);

	while(!button_is_pressed(BUTTON_B))
     380:	80 e1       	ldi	r24, 0x10	; 16
     382:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <button_is_pressed>
     386:	81 11       	cpse	r24, r1
     388:	1b c0       	rjmp	.+54     	; 0x3c0 <initialize+0xb0>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     38a:	0e 94 6a 05 	call	0xad4	; 0xad4 <read_battery_millivolts_3pi>
     38e:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();

		clear();
     390:	0e 94 ef 09 	call	0x13de	; 0x13de <clear>
		print_long(bat);
     394:	b8 01       	movw	r22, r16
     396:	88 27       	eor	r24, r24
     398:	77 fd       	sbrc	r23, 7
     39a:	80 95       	com	r24
     39c:	98 2f       	mov	r25, r24
     39e:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <print_long>
		print("mV");
     3a2:	8b e3       	ldi	r24, 0x3B	; 59
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 06 0a 	call	0x140c	; 0x140c <print>
		lcd_goto_xy(0,1);
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	0e 94 97 0a 	call	0x152e	; 0x152e <lcd_goto_xy>
		print("Press B");
     3b2:	8e e3       	ldi	r24, 0x3E	; 62
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	0e 94 06 0a 	call	0x140c	; 0x140c <print>

		delay_ms(100);
     3ba:	84 e6       	ldi	r24, 0x64	; 100
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	de cf       	rjmp	.-68     	; 0x37c <initialize+0x6c>
	}

	wait_for_button_release(BUTTON_B);
     3c0:	80 e1       	ldi	r24, 0x10	; 16
     3c2:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <wait_for_button_release>
	delay_ms(1000);
     3c6:	88 ee       	ldi	r24, 0xE8	; 232
     3c8:	93 e0       	ldi	r25, 0x03	; 3
     3ca:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
     3ce:	0c ee       	ldi	r16, 0xEC	; 236
     3d0:	1f ef       	ldi	r17, 0xFF	; 255

	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     3d2:	08 32       	cpi	r16, 0x28	; 40
     3d4:	11 05       	cpc	r17, r1
     3d6:	28 f0       	brcs	.+10     	; 0x3e2 <initialize+0xd2>
			set_motors(40,-40);
     3d8:	68 ed       	ldi	r22, 0xD8	; 216
     3da:	7f ef       	ldi	r23, 0xFF	; 255
     3dc:	88 e2       	ldi	r24, 0x28	; 40
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <initialize+0xda>
		else
			set_motors(-40,40);
     3e2:	68 e2       	ldi	r22, 0x28	; 40
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	88 ed       	ldi	r24, 0xD8	; 216
     3e8:	9f ef       	ldi	r25, 0xFF	; 255
     3ea:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	0e 94 73 0c 	call	0x18e6	; 0x18e6 <calibrate_line_sensors>
		delay_ms(20);
     3f4:	84 e1       	ldi	r24, 0x14	; 20
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     400:	0c 33       	cpi	r16, 0x3C	; 60
     402:	11 05       	cpc	r17, r1
     404:	31 f7       	brne	.-52     	; 0x3d2 <initialize+0xc2>
		else
			set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	set_motors(0,0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>

	while(!button_is_pressed(BUTTON_B))
     412:	80 e1       	ldi	r24, 0x10	; 16
     414:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <button_is_pressed>
     418:	81 11       	cpse	r24, r1
     41a:	1a c0       	rjmp	.+52     	; 0x450 <initialize+0x140>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
     426:	8c 01       	movw	r16, r24

		clear();
     428:	0e 94 ef 09 	call	0x13de	; 0x13de <clear>
		print_long(position);
     42c:	b8 01       	movw	r22, r16
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 74 0a 	call	0x14e8	; 0x14e8 <print_long>
		lcd_goto_xy(0,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 97 0a 	call	0x152e	; 0x152e <lcd_goto_xy>
		display_readings(sensors);
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	0e 94 a6 00 	call	0x14c	; 0x14c <display_readings>

		delay_ms(100);
     446:	84 e6       	ldi	r24, 0x64	; 100
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
     44e:	e1 cf       	rjmp	.-62     	; 0x412 <initialize+0x102>
	}
	wait_for_button_release(BUTTON_B);
     450:	80 e1       	ldi	r24, 0x10	; 16
     452:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <wait_for_button_release>

	clear();
     456:	0e 94 ef 09 	call	0x13de	; 0x13de <clear>

	print("Go!");		
     45a:	86 e4       	ldi	r24, 0x46	; 70
     45c:	91 e0       	ldi	r25, 0x01	; 1
     45e:	0e 94 06 0a 	call	0x140c	; 0x140c <print>

	play_from_program_space(go);
     462:	86 e7       	ldi	r24, 0x76	; 118
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 ac 08 	call	0x1158	; 0x1158 <play_from_program_space>
	while(is_playing());
     46a:	0e 94 9b 08 	call	0x1136	; 0x1136 <is_playing>
     46e:	81 11       	cpse	r24, r1
     470:	fc cf       	rjmp	.-8      	; 0x46a <initialize+0x15a>
}
     472:	2a 96       	adiw	r28, 0x0a	; 10
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <main>:


int main()
{
	initialize();//3pi initialization
     488:	0e 94 88 01 	call	0x310	; 0x310 <initialize>
	
	maze_solve(80);
     48c:	80 e5       	ldi	r24, 0x50	; 80
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 4b 02 	call	0x496	; 0x496 <maze_solve>
     494:	ff cf       	rjmp	.-2      	; 0x494 <main+0xc>

00000496 <maze_solve>:
#include "follow-segment.h"
#include "turn.h"


void maze_solve(int speed)
{
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	2a 97       	sbiw	r28, 0x0a	; 10
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	8c 01       	movw	r16, r24
	unsigned int sensors[5];
	uint16_t destination = 0;
	const int line_th = 400; //minimum 200
	char Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
     4ac:	b1 2c       	mov	r11, r1
     4ae:	a1 2c       	mov	r10, r1
     4b0:	91 2c       	mov	r9, r1
void time_reset(void);

// This is inline for efficiency:
static inline void delay_us(unsigned int microseconds)
{
  __asm__ volatile (
     4b2:	82 e3       	ldi	r24, 0x32	; 50
     4b4:	c8 2e       	mov	r12, r24
     4b6:	d1 2c       	mov	r13, r1
	
	while(1)
	{
		follow_segment(speed);
     4b8:	c8 01       	movw	r24, r16
     4ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
		//delay_ms(10);
		
		read_line(sensors,IR_EMITTERS_ON);
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	ce 01       	movw	r24, r28
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
	
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		if(sensors[0] > line_th)  //left trigging 
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	81 39       	cpi	r24, 0x91	; 145
     4ce:	91 40       	sbci	r25, 0x01	; 1
     4d0:	08 f4       	brcc	.+2      	; 0x4d4 <maze_solve+0x3e>
     4d2:	7a c0       	rjmp	.+244    	; 0x5c8 <maze_solve+0x132>
		{
			set_motors(speed,speed);  //can be divide by a factor
     4d4:	b8 01       	movw	r22, r16
     4d6:	c8 01       	movw	r24, r16
     4d8:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
			destination = 0;
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     4dc:	89 2c       	mov	r8, r9
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		if(sensors[0] > line_th)  //left trigging 
		{
			set_motors(speed,speed);  //can be divide by a factor
			destination = 0;
     4de:	e1 2c       	mov	r14, r1
     4e0:	f1 2c       	mov	r15, r1
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     4e2:	89 81       	ldd	r24, Y+1	; 0x01
     4e4:	9a 81       	ldd	r25, Y+2	; 0x02
     4e6:	81 39       	cpi	r24, 0x91	; 145
     4e8:	91 40       	sbci	r25, 0x01	; 1
     4ea:	70 f1       	brcs	.+92     	; 0x548 <maze_solve+0xb2>
			{
				read_line(sensors,IR_EMITTERS_ON);
     4ec:	61 e0       	ldi	r22, 0x01	; 1
     4ee:	ce 01       	movw	r24, r28
     4f0:	01 96       	adiw	r24, 0x01	; 1
     4f2:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
     4f6:	c6 01       	movw	r24, r12
     4f8:	6f 93       	push	r22
     4fa:	64 e0       	ldi	r22, 0x04	; 4
     4fc:	6a 95       	dec	r22
     4fe:	f1 f7       	brne	.-4      	; 0x4fc <maze_solve+0x66>
     500:	6f 91       	pop	r22
     502:	01 97       	sbiw	r24, 0x01	; 1
     504:	c9 f7       	brne	.-14     	; 0x4f8 <maze_solve+0x62>
				delay_us(50);
				if ((sensors[4] > line_th) && (Right_trigged == 0))
     506:	89 85       	ldd	r24, Y+9	; 0x09
     508:	9a 85       	ldd	r25, Y+10	; 0x0a
     50a:	81 39       	cpi	r24, 0x91	; 145
     50c:	41 e0       	ldi	r20, 0x01	; 1
     50e:	94 07       	cpc	r25, r20
     510:	20 f0       	brcs	.+8      	; 0x51a <maze_solve+0x84>
     512:	81 10       	cpse	r8, r1
     514:	02 c0       	rjmp	.+4      	; 0x51a <maze_solve+0x84>
				{
					Right_trigged=1;
     516:	88 24       	eor	r8, r8
     518:	83 94       	inc	r8
				}
				if ((sensors[0] > line_th) && (sensors[4] > line_th))
     51a:	29 81       	ldd	r18, Y+1	; 0x01
     51c:	3a 81       	ldd	r19, Y+2	; 0x02
     51e:	21 39       	cpi	r18, 0x91	; 145
     520:	31 40       	sbci	r19, 0x01	; 1
     522:	f8 f2       	brcs	.-66     	; 0x4e2 <maze_solve+0x4c>
     524:	81 39       	cpi	r24, 0x91	; 145
     526:	91 40       	sbci	r25, 0x01	; 1
     528:	e0 f2       	brcs	.-72     	; 0x4e2 <maze_solve+0x4c>
				{
					destination = destination + 1;
     52a:	4f ef       	ldi	r20, 0xFF	; 255
     52c:	e4 1a       	sub	r14, r20
     52e:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     530:	89 e8       	ldi	r24, 0x89	; 137
     532:	e8 16       	cp	r14, r24
     534:	83 e1       	ldi	r24, 0x13	; 19
     536:	f8 06       	cpc	r15, r24
     538:	a0 f2       	brcs	.-88     	; 0x4e2 <maze_solve+0x4c>
					{
						destination = 0x00;
						set_motors(0,0);
     53a:	60 e0       	ldi	r22, 0x00	; 0
     53c:	70 e0       	ldi	r23, 0x00	; 0
     53e:	80 e0       	ldi	r24, 0x00	; 0
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
     546:	ff cf       	rjmp	.-2      	; 0x546 <maze_solve+0xb0>
		
		if(sensors[0] > line_th)  //left trigging 
		{
			set_motors(speed,speed);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     548:	89 85       	ldd	r24, Y+9	; 0x09
     54a:	9a 85       	ldd	r25, Y+10	; 0x0a
     54c:	81 39       	cpi	r24, 0x91	; 145
     54e:	91 40       	sbci	r25, 0x01	; 1
     550:	68 f6       	brcc	.-102    	; 0x4ec <maze_solve+0x56>
     552:	98 2c       	mov	r9, r8
						//while (PINA & (1<<PA0));
						//goto solv_maze;
					}
				}
			}
			delay_ms(20);  //delay can be changed  //******************************************************
     554:	84 e1       	ldi	r24, 0x14	; 20
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
			read_line(sensors,IR_EMITTERS_ON);
     55c:	61 e0       	ldi	r22, 0x01	; 1
     55e:	ce 01       	movw	r24, r28
     560:	01 96       	adiw	r24, 0x01	; 1
     562:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			if ((sensors[1] > line_th) || (sensors[2] > line_th) || (sensors[3] > line_th))
     566:	8b 81       	ldd	r24, Y+3	; 0x03
     568:	9c 81       	ldd	r25, Y+4	; 0x04
     56a:	81 39       	cpi	r24, 0x91	; 145
     56c:	91 40       	sbci	r25, 0x01	; 1
     56e:	08 f0       	brcs	.+2      	; 0x572 <maze_solve+0xdc>
     570:	c7 c0       	rjmp	.+398    	; 0x700 <maze_solve+0x26a>
     572:	8d 81       	ldd	r24, Y+5	; 0x05
     574:	9e 81       	ldd	r25, Y+6	; 0x06
     576:	81 39       	cpi	r24, 0x91	; 145
     578:	91 40       	sbci	r25, 0x01	; 1
     57a:	08 f0       	brcs	.+2      	; 0x57e <maze_solve+0xe8>
     57c:	c1 c0       	rjmp	.+386    	; 0x700 <maze_solve+0x26a>
     57e:	8f 81       	ldd	r24, Y+7	; 0x07
     580:	98 85       	ldd	r25, Y+8	; 0x08
     582:	81 39       	cpi	r24, 0x91	; 145
     584:	91 40       	sbci	r25, 0x01	; 1
     586:	08 f0       	brcs	.+2      	; 0x58a <maze_solve+0xf4>
     588:	bb c0       	rjmp	.+374    	; 0x700 <maze_solve+0x26a>
			{
				Forward_trigged = 1;
			}
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     58a:	81 10       	cpse	r8, r1
     58c:	09 c0       	rjmp	.+18     	; 0x5a0 <maze_solve+0x10a>
     58e:	b1 10       	cpse	r11, r1
     590:	03 c0       	rjmp	.+6      	; 0x598 <maze_solve+0x102>
			{
				//left_operation(speed);
				turn('L',speed);
     592:	b8 01       	movw	r22, r16
     594:	8c e4       	ldi	r24, 0x4C	; 76
     596:	9b c0       	rjmp	.+310    	; 0x6ce <maze_solve+0x238>
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 0) && (Forward_trigged == 1))
     598:	41 e0       	ldi	r20, 0x01	; 1
     59a:	b4 12       	cpse	r11, r20
     59c:	8d cf       	rjmp	.-230    	; 0x4b8 <maze_solve+0x22>
     59e:	0e c0       	rjmp	.+28     	; 0x5bc <maze_solve+0x126>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     5a0:	81 e0       	ldi	r24, 0x01	; 1
     5a2:	88 12       	cpse	r8, r24
     5a4:	89 cf       	rjmp	.-238    	; 0x4b8 <maze_solve+0x22>
     5a6:	b1 10       	cpse	r11, r1
     5a8:	06 c0       	rjmp	.+12     	; 0x5b6 <maze_solve+0x120>
			{
				//left_right_operation(speed);
				turn('L',speed);
     5aa:	b8 01       	movw	r22, r16
     5ac:	8c e4       	ldi	r24, 0x4C	; 76
     5ae:	0e 94 a0 03 	call	0x740	; 0x740 <turn>
				Right_trigged = 0;
     5b2:	91 2c       	mov	r9, r1
				Forward_trigged = 0;
     5b4:	81 cf       	rjmp	.-254    	; 0x4b8 <maze_solve+0x22>
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 1))
     5b6:	21 e0       	ldi	r18, 0x01	; 1
     5b8:	b2 12       	cpse	r11, r18
     5ba:	7e cf       	rjmp	.-260    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     5bc:	b8 01       	movw	r22, r16
     5be:	8c e4       	ldi	r24, 0x4C	; 76
     5c0:	0e 94 a0 03 	call	0x740	; 0x740 <turn>
				Right_trigged = 0;
				Forward_trigged = 0;
     5c4:	b1 2c       	mov	r11, r1
     5c6:	f5 cf       	rjmp	.-22     	; 0x5b2 <maze_solve+0x11c>
			}
		}
		else if (sensors[4] > line_th) //right trigging
     5c8:	89 85       	ldd	r24, Y+9	; 0x09
     5ca:	9a 85       	ldd	r25, Y+10	; 0x0a
     5cc:	81 39       	cpi	r24, 0x91	; 145
     5ce:	91 40       	sbci	r25, 0x01	; 1
     5d0:	08 f4       	brcc	.+2      	; 0x5d4 <maze_solve+0x13e>
     5d2:	65 c0       	rjmp	.+202    	; 0x69e <maze_solve+0x208>
		{
			set_motors(speed,speed);  //can be divide by a factor
     5d4:	b8 01       	movw	r22, r16
     5d6:	c8 01       	movw	r24, r16
     5d8:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
			destination = 0;
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     5dc:	8a 2c       	mov	r8, r10
			}
		}
		else if (sensors[4] > line_th) //right trigging
		{
			set_motors(speed,speed);  //can be divide by a factor
			destination = 0;
     5de:	e1 2c       	mov	r14, r1
     5e0:	f1 2c       	mov	r15, r1
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     5e2:	89 81       	ldd	r24, Y+1	; 0x01
     5e4:	9a 81       	ldd	r25, Y+2	; 0x02
     5e6:	81 39       	cpi	r24, 0x91	; 145
     5e8:	91 40       	sbci	r25, 0x01	; 1
     5ea:	b8 f0       	brcs	.+46     	; 0x61a <maze_solve+0x184>
			{
				read_line(sensors,IR_EMITTERS_ON);
     5ec:	61 e0       	ldi	r22, 0x01	; 1
     5ee:	ce 01       	movw	r24, r28
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
     5f6:	c6 01       	movw	r24, r12
     5f8:	6f 93       	push	r22
     5fa:	64 e0       	ldi	r22, 0x04	; 4
     5fc:	6a 95       	dec	r22
     5fe:	f1 f7       	brne	.-4      	; 0x5fc <maze_solve+0x166>
     600:	6f 91       	pop	r22
     602:	01 97       	sbiw	r24, 0x01	; 1
     604:	c9 f7       	brne	.-14     	; 0x5f8 <maze_solve+0x162>
				delay_us(50);
				if ((sensors[0] > line_th) && (Left_trigged == 0))
     606:	89 81       	ldd	r24, Y+1	; 0x01
     608:	9a 81       	ldd	r25, Y+2	; 0x02
     60a:	81 39       	cpi	r24, 0x91	; 145
     60c:	91 40       	sbci	r25, 0x01	; 1
     60e:	48 f3       	brcs	.-46     	; 0x5e2 <maze_solve+0x14c>
     610:	81 10       	cpse	r8, r1
     612:	60 c0       	rjmp	.+192    	; 0x6d4 <maze_solve+0x23e>
				{
					Left_trigged=1;
     614:	88 24       	eor	r8, r8
     616:	83 94       	inc	r8
     618:	5d c0       	rjmp	.+186    	; 0x6d4 <maze_solve+0x23e>
		}
		else if (sensors[4] > line_th) //right trigging
		{
			set_motors(speed,speed);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > line_th) || (sensors[4] > line_th))
     61a:	89 85       	ldd	r24, Y+9	; 0x09
     61c:	9a 85       	ldd	r25, Y+10	; 0x0a
     61e:	81 39       	cpi	r24, 0x91	; 145
     620:	91 40       	sbci	r25, 0x01	; 1
     622:	20 f7       	brcc	.-56     	; 0x5ec <maze_solve+0x156>
     624:	a8 2c       	mov	r10, r8
						//while (PINA & (1<<PA0));
						//goto solv_maze;
					}
				}
			}
			delay_ms(20);  //delay can be changed  //******************************************************
     626:	84 e1       	ldi	r24, 0x14	; 20
     628:	90 e0       	ldi	r25, 0x00	; 0
     62a:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
			read_line(sensors,IR_EMITTERS_ON);
     62e:	61 e0       	ldi	r22, 0x01	; 1
     630:	ce 01       	movw	r24, r28
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			if ((sensors[1] > line_th) || (sensors[2] > line_th) || (sensors[3] > line_th))
     638:	8b 81       	ldd	r24, Y+3	; 0x03
     63a:	9c 81       	ldd	r25, Y+4	; 0x04
     63c:	81 39       	cpi	r24, 0x91	; 145
     63e:	91 40       	sbci	r25, 0x01	; 1
     640:	08 f0       	brcs	.+2      	; 0x644 <maze_solve+0x1ae>
     642:	62 c0       	rjmp	.+196    	; 0x708 <maze_solve+0x272>
     644:	8d 81       	ldd	r24, Y+5	; 0x05
     646:	9e 81       	ldd	r25, Y+6	; 0x06
     648:	81 39       	cpi	r24, 0x91	; 145
     64a:	91 40       	sbci	r25, 0x01	; 1
     64c:	08 f0       	brcs	.+2      	; 0x650 <maze_solve+0x1ba>
     64e:	5c c0       	rjmp	.+184    	; 0x708 <maze_solve+0x272>
     650:	8f 81       	ldd	r24, Y+7	; 0x07
     652:	98 85       	ldd	r25, Y+8	; 0x08
     654:	81 39       	cpi	r24, 0x91	; 145
     656:	91 40       	sbci	r25, 0x01	; 1
     658:	08 f0       	brcs	.+2      	; 0x65c <maze_solve+0x1c6>
     65a:	56 c0       	rjmp	.+172    	; 0x708 <maze_solve+0x272>
			{
				Forward_trigged = 1;
			}
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     65c:	81 10       	cpse	r8, r1
     65e:	0b c0       	rjmp	.+22     	; 0x676 <maze_solve+0x1e0>
     660:	b1 10       	cpse	r11, r1
     662:	03 c0       	rjmp	.+6      	; 0x66a <maze_solve+0x1d4>
			{
				//right_operation(speed);
				turn('R',speed);
     664:	b8 01       	movw	r22, r16
     666:	82 e5       	ldi	r24, 0x52	; 82
     668:	32 c0       	rjmp	.+100    	; 0x6ce <maze_solve+0x238>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 0) && (Forward_trigged == 1))
     66a:	41 e0       	ldi	r20, 0x01	; 1
     66c:	b4 12       	cpse	r11, r20
     66e:	24 cf       	rjmp	.-440    	; 0x4b8 <maze_solve+0x22>
			{
				//right_forward_operation(speed);
				turn('S',speed);
     670:	b8 01       	movw	r22, r16
     672:	83 e5       	ldi	r24, 0x53	; 83
     674:	0f c0       	rjmp	.+30     	; 0x694 <maze_solve+0x1fe>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     676:	81 e0       	ldi	r24, 0x01	; 1
     678:	88 12       	cpse	r8, r24
     67a:	1e cf       	rjmp	.-452    	; 0x4b8 <maze_solve+0x22>
     67c:	b1 10       	cpse	r11, r1
     67e:	05 c0       	rjmp	.+10     	; 0x68a <maze_solve+0x1f4>
			{
				//left_right_operation(speed);
				turn('L',speed);
     680:	b8 01       	movw	r22, r16
     682:	8c e4       	ldi	r24, 0x4C	; 76
     684:	0e 94 a0 03 	call	0x740	; 0x740 <turn>
     688:	08 c0       	rjmp	.+16     	; 0x69a <maze_solve+0x204>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
     68a:	21 e0       	ldi	r18, 0x01	; 1
     68c:	b2 12       	cpse	r11, r18
     68e:	14 cf       	rjmp	.-472    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     690:	b8 01       	movw	r22, r16
     692:	8c e4       	ldi	r24, 0x4C	; 76
     694:	0e 94 a0 03 	call	0x740	; 0x740 <turn>
				Left_trigged = 0;
				Forward_trigged = 0;
     698:	b1 2c       	mov	r11, r1
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
				Left_trigged = 0;
     69a:	a1 2c       	mov	r10, r1
     69c:	0d cf       	rjmp	.-486    	; 0x4b8 <maze_solve+0x22>
				Forward_trigged = 0;
			}
		}
		else if ((sensors[1] < (line_th)) && (sensors[2] < (line_th)) && (sensors[3] < (line_th)))//-100
     69e:	8b 81       	ldd	r24, Y+3	; 0x03
     6a0:	9c 81       	ldd	r25, Y+4	; 0x04
     6a2:	80 39       	cpi	r24, 0x90	; 144
     6a4:	91 40       	sbci	r25, 0x01	; 1
     6a6:	08 f0       	brcs	.+2      	; 0x6aa <maze_solve+0x214>
     6a8:	07 cf       	rjmp	.-498    	; 0x4b8 <maze_solve+0x22>
     6aa:	8d 81       	ldd	r24, Y+5	; 0x05
     6ac:	9e 81       	ldd	r25, Y+6	; 0x06
     6ae:	80 39       	cpi	r24, 0x90	; 144
     6b0:	91 40       	sbci	r25, 0x01	; 1
     6b2:	08 f0       	brcs	.+2      	; 0x6b6 <maze_solve+0x220>
     6b4:	01 cf       	rjmp	.-510    	; 0x4b8 <maze_solve+0x22>
     6b6:	8f 81       	ldd	r24, Y+7	; 0x07
     6b8:	98 85       	ldd	r25, Y+8	; 0x08
     6ba:	80 39       	cpi	r24, 0x90	; 144
     6bc:	91 40       	sbci	r25, 0x01	; 1
     6be:	08 f0       	brcs	.+2      	; 0x6c2 <maze_solve+0x22c>
     6c0:	fb ce       	rjmp	.-522    	; 0x4b8 <maze_solve+0x22>
		{
			set_motors(speed,speed);
     6c2:	b8 01       	movw	r22, r16
     6c4:	c8 01       	movw	r24, r16
     6c6:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
			//reverse_operation(speed);
			turn('U',speed);
     6ca:	b8 01       	movw	r22, r16
     6cc:	85 e5       	ldi	r24, 0x55	; 85
     6ce:	0e 94 a0 03 	call	0x740	; 0x740 <turn>
     6d2:	f2 ce       	rjmp	.-540    	; 0x4b8 <maze_solve+0x22>
				delay_us(50);
				if ((sensors[0] > line_th) && (Left_trigged == 0))
				{
					Left_trigged=1;
				}
				if ((sensors[0] > line_th) && (sensors[4] > line_th))
     6d4:	89 85       	ldd	r24, Y+9	; 0x09
     6d6:	9a 85       	ldd	r25, Y+10	; 0x0a
     6d8:	81 39       	cpi	r24, 0x91	; 145
     6da:	91 40       	sbci	r25, 0x01	; 1
     6dc:	08 f4       	brcc	.+2      	; 0x6e0 <maze_solve+0x24a>
     6de:	81 cf       	rjmp	.-254    	; 0x5e2 <maze_solve+0x14c>
				{
					destination = destination + 1;
     6e0:	4f ef       	ldi	r20, 0xFF	; 255
     6e2:	e4 1a       	sub	r14, r20
     6e4:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     6e6:	89 e8       	ldi	r24, 0x89	; 137
     6e8:	e8 16       	cp	r14, r24
     6ea:	83 e1       	ldi	r24, 0x13	; 19
     6ec:	f8 06       	cpc	r15, r24
     6ee:	08 f4       	brcc	.+2      	; 0x6f2 <maze_solve+0x25c>
     6f0:	78 cf       	rjmp	.-272    	; 0x5e2 <maze_solve+0x14c>
					{
						destination = 0x00;
						set_motors(0,0);
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
     6fe:	ff cf       	rjmp	.-2      	; 0x6fe <maze_solve+0x268>
			if ((sensors[1] > line_th) || (sensors[2] > line_th) || (sensors[3] > line_th))
			{
				Forward_trigged = 1;
			}
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     700:	88 20       	and	r8, r8
     702:	09 f4       	brne	.+2      	; 0x706 <maze_solve+0x270>
     704:	5b cf       	rjmp	.-330    	; 0x5bc <maze_solve+0x126>
     706:	04 c0       	rjmp	.+8      	; 0x710 <maze_solve+0x27a>
			if ((sensors[1] > line_th) || (sensors[2] > line_th) || (sensors[3] > line_th))
			{
				Forward_trigged = 1;
			}
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     708:	88 20       	and	r8, r8
     70a:	09 f4       	brne	.+2      	; 0x70e <maze_solve+0x278>
     70c:	b1 cf       	rjmp	.-158    	; 0x670 <maze_solve+0x1da>
     70e:	06 c0       	rjmp	.+12     	; 0x71c <maze_solve+0x286>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     710:	41 e0       	ldi	r20, 0x01	; 1
     712:	84 16       	cp	r8, r20
     714:	09 f4       	brne	.+2      	; 0x718 <maze_solve+0x282>
     716:	52 cf       	rjmp	.-348    	; 0x5bc <maze_solve+0x126>
     718:	98 2c       	mov	r9, r8
     71a:	05 c0       	rjmp	.+10     	; 0x726 <maze_solve+0x290>
				//right_forward_operation(speed);
				turn('S',speed);
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     71c:	81 e0       	ldi	r24, 0x01	; 1
     71e:	88 16       	cp	r8, r24
     720:	09 f4       	brne	.+2      	; 0x724 <maze_solve+0x28e>
     722:	b6 cf       	rjmp	.-148    	; 0x690 <maze_solve+0x1fa>
     724:	a8 2c       	mov	r10, r8
     726:	bb 24       	eor	r11, r11
     728:	b3 94       	inc	r11
     72a:	c6 ce       	rjmp	.-628    	; 0x4b8 <maze_solve+0x22>

0000072c <delay_us.constprop.0>:
     72c:	8a e0       	ldi	r24, 0x0A	; 10
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	6f 93       	push	r22
     732:	64 e0       	ldi	r22, 0x04	; 4
     734:	6a 95       	dec	r22
     736:	f1 f7       	brne	.-4      	; 0x734 <delay_us.constprop.0+0x8>
     738:	6f 91       	pop	r22
     73a:	01 97       	sbiw	r24, 0x01	; 1
     73c:	c9 f7       	brne	.-14     	; 0x730 <delay_us.constprop.0+0x4>
     73e:	08 95       	ret

00000740 <turn>:

#include <pololu/3pi.h>
#include "follow-segment.h"

void turn(char dir, int speed)
{
     740:	0f 93       	push	r16
     742:	1f 93       	push	r17
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	cd b7       	in	r28, 0x3d	; 61
     74a:	de b7       	in	r29, 0x3e	; 62
     74c:	2a 97       	sbiw	r28, 0x0a	; 10
     74e:	0f b6       	in	r0, 0x3f	; 63
     750:	f8 94       	cli
     752:	de bf       	out	0x3e, r29	; 62
     754:	0f be       	out	0x3f, r0	; 63
     756:	cd bf       	out	0x3d, r28	; 61
     758:	8b 01       	movw	r16, r22
	unsigned int sensors[5];
	
	if (dir == 'L')
     75a:	8c 34       	cpi	r24, 0x4C	; 76
     75c:	f1 f5       	brne	.+124    	; 0x7da <turn+0x9a>
	{
		set_motors(-80,80);
     75e:	60 e5       	ldi	r22, 0x50	; 80
     760:	70 e0       	ldi	r23, 0x00	; 0
     762:	80 eb       	ldi	r24, 0xB0	; 176
     764:	9f ef       	ldi	r25, 0xFF	; 255
     766:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
		while(sensors[0] < 100)
     76a:	89 81       	ldd	r24, Y+1	; 0x01
     76c:	9a 81       	ldd	r25, Y+2	; 0x02
     76e:	84 36       	cpi	r24, 0x64	; 100
     770:	91 05       	cpc	r25, r1
     772:	40 f4       	brcc	.+16     	; 0x784 <turn+0x44>
		{
			read_line(sensors,IR_EMITTERS_ON);
     774:	61 e0       	ldi	r22, 0x01	; 1
     776:	ce 01       	movw	r24, r28
     778:	01 96       	adiw	r24, 0x01	; 1
     77a:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     77e:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     782:	f3 cf       	rjmp	.-26     	; 0x76a <turn+0x2a>
		}
		while(sensors[1] < 100)
     784:	8b 81       	ldd	r24, Y+3	; 0x03
     786:	9c 81       	ldd	r25, Y+4	; 0x04
     788:	84 36       	cpi	r24, 0x64	; 100
     78a:	91 05       	cpc	r25, r1
     78c:	40 f4       	brcc	.+16     	; 0x79e <turn+0x5e>
		{
			read_line(sensors,IR_EMITTERS_ON);
     78e:	61 e0       	ldi	r22, 0x01	; 1
     790:	ce 01       	movw	r24, r28
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     798:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     79c:	f3 cf       	rjmp	.-26     	; 0x784 <turn+0x44>
		}
		while(sensors[2] < 100)
     79e:	8d 81       	ldd	r24, Y+5	; 0x05
     7a0:	9e 81       	ldd	r25, Y+6	; 0x06
     7a2:	84 36       	cpi	r24, 0x64	; 100
     7a4:	91 05       	cpc	r25, r1
     7a6:	40 f4       	brcc	.+16     	; 0x7b8 <turn+0x78>
		{
			read_line(sensors,IR_EMITTERS_ON);
     7a8:	61 e0       	ldi	r22, 0x01	; 1
     7aa:	ce 01       	movw	r24, r28
     7ac:	01 96       	adiw	r24, 0x01	; 1
     7ae:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     7b2:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     7b6:	f3 cf       	rjmp	.-26     	; 0x79e <turn+0x5e>
		}
		while(sensors[3] < 100)
     7b8:	8f 81       	ldd	r24, Y+7	; 0x07
     7ba:	98 85       	ldd	r25, Y+8	; 0x08
     7bc:	84 36       	cpi	r24, 0x64	; 100
     7be:	91 05       	cpc	r25, r1
     7c0:	40 f4       	brcc	.+16     	; 0x7d2 <turn+0x92>
		{
			read_line(sensors,IR_EMITTERS_ON);
     7c2:	61 e0       	ldi	r22, 0x01	; 1
     7c4:	ce 01       	movw	r24, r28
     7c6:	01 96       	adiw	r24, 0x01	; 1
     7c8:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     7cc:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     7d0:	f3 cf       	rjmp	.-26     	; 0x7b8 <turn+0x78>
		}
		
		follow_segment(speed);
     7d2:	c8 01       	movw	r24, r16
     7d4:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
     7d8:	82 c0       	rjmp	.+260    	; 0x8de <turn+0x19e>
	}
	else if (dir == 'R')
     7da:	82 35       	cpi	r24, 0x52	; 82
     7dc:	d1 f5       	brne	.+116    	; 0x852 <turn+0x112>
	{
		set_motors(80,-80);
     7de:	60 eb       	ldi	r22, 0xB0	; 176
     7e0:	7f ef       	ldi	r23, 0xFF	; 255
     7e2:	80 e5       	ldi	r24, 0x50	; 80
     7e4:	90 e0       	ldi	r25, 0x00	; 0
     7e6:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
		while(sensors[4] < 100)
     7ea:	89 85       	ldd	r24, Y+9	; 0x09
     7ec:	9a 85       	ldd	r25, Y+10	; 0x0a
     7ee:	84 36       	cpi	r24, 0x64	; 100
     7f0:	91 05       	cpc	r25, r1
     7f2:	40 f4       	brcc	.+16     	; 0x804 <turn+0xc4>
		{
			read_line(sensors,IR_EMITTERS_ON);
     7f4:	61 e0       	ldi	r22, 0x01	; 1
     7f6:	ce 01       	movw	r24, r28
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     7fe:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     802:	f3 cf       	rjmp	.-26     	; 0x7ea <turn+0xaa>
		}
		while(sensors[3] < 100)
     804:	8f 81       	ldd	r24, Y+7	; 0x07
     806:	98 85       	ldd	r25, Y+8	; 0x08
     808:	84 36       	cpi	r24, 0x64	; 100
     80a:	91 05       	cpc	r25, r1
     80c:	40 f4       	brcc	.+16     	; 0x81e <turn+0xde>
		{
			read_line(sensors,IR_EMITTERS_ON);
     80e:	61 e0       	ldi	r22, 0x01	; 1
     810:	ce 01       	movw	r24, r28
     812:	01 96       	adiw	r24, 0x01	; 1
     814:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     818:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     81c:	f3 cf       	rjmp	.-26     	; 0x804 <turn+0xc4>
		}
		while(sensors[2] < 100)
     81e:	8d 81       	ldd	r24, Y+5	; 0x05
     820:	9e 81       	ldd	r25, Y+6	; 0x06
     822:	84 36       	cpi	r24, 0x64	; 100
     824:	91 05       	cpc	r25, r1
     826:	40 f4       	brcc	.+16     	; 0x838 <turn+0xf8>
		{
			read_line(sensors,IR_EMITTERS_ON);
     828:	61 e0       	ldi	r22, 0x01	; 1
     82a:	ce 01       	movw	r24, r28
     82c:	01 96       	adiw	r24, 0x01	; 1
     82e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     832:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     836:	f3 cf       	rjmp	.-26     	; 0x81e <turn+0xde>
		}
		while(sensors[1] < 100)
     838:	8b 81       	ldd	r24, Y+3	; 0x03
     83a:	9c 81       	ldd	r25, Y+4	; 0x04
     83c:	84 36       	cpi	r24, 0x64	; 100
     83e:	91 05       	cpc	r25, r1
     840:	40 f6       	brcc	.-112    	; 0x7d2 <turn+0x92>
		{
			read_line(sensors,IR_EMITTERS_ON);
     842:	61 e0       	ldi	r22, 0x01	; 1
     844:	ce 01       	movw	r24, r28
     846:	01 96       	adiw	r24, 0x01	; 1
     848:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     84c:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     850:	f3 cf       	rjmp	.-26     	; 0x838 <turn+0xf8>
		}
		follow_segment(speed);
	}
	else if (dir == 'S')
     852:	83 35       	cpi	r24, 0x53	; 83
     854:	39 f4       	brne	.+14     	; 0x864 <turn+0x124>
	{
		set_motors(80,80);
     856:	60 e5       	ldi	r22, 0x50	; 80
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	80 e5       	ldi	r24, 0x50	; 80
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
     862:	3d c0       	rjmp	.+122    	; 0x8de <turn+0x19e>
	}
	else if (dir == 'U')
     864:	85 35       	cpi	r24, 0x55	; 85
     866:	d9 f5       	brne	.+118    	; 0x8de <turn+0x19e>
	{
		set_motors(80,-80);
     868:	60 eb       	ldi	r22, 0xB0	; 176
     86a:	7f ef       	ldi	r23, 0xFF	; 255
     86c:	80 e5       	ldi	r24, 0x50	; 80
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	0e 94 a1 0b 	call	0x1742	; 0x1742 <set_motors>
		while(sensors[4] < 100)
     874:	89 85       	ldd	r24, Y+9	; 0x09
     876:	9a 85       	ldd	r25, Y+10	; 0x0a
     878:	84 36       	cpi	r24, 0x64	; 100
     87a:	91 05       	cpc	r25, r1
     87c:	40 f4       	brcc	.+16     	; 0x88e <turn+0x14e>
		{
			read_line(sensors,IR_EMITTERS_ON);
     87e:	61 e0       	ldi	r22, 0x01	; 1
     880:	ce 01       	movw	r24, r28
     882:	01 96       	adiw	r24, 0x01	; 1
     884:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     888:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     88c:	f3 cf       	rjmp	.-26     	; 0x874 <turn+0x134>
		}
		while(sensors[3] < 100)
     88e:	8f 81       	ldd	r24, Y+7	; 0x07
     890:	98 85       	ldd	r25, Y+8	; 0x08
     892:	84 36       	cpi	r24, 0x64	; 100
     894:	91 05       	cpc	r25, r1
     896:	40 f4       	brcc	.+16     	; 0x8a8 <turn+0x168>
		{
			read_line(sensors,IR_EMITTERS_ON);
     898:	61 e0       	ldi	r22, 0x01	; 1
     89a:	ce 01       	movw	r24, r28
     89c:	01 96       	adiw	r24, 0x01	; 1
     89e:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     8a2:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     8a6:	f3 cf       	rjmp	.-26     	; 0x88e <turn+0x14e>
		}
		while(sensors[2] < 100)
     8a8:	8d 81       	ldd	r24, Y+5	; 0x05
     8aa:	9e 81       	ldd	r25, Y+6	; 0x06
     8ac:	84 36       	cpi	r24, 0x64	; 100
     8ae:	91 05       	cpc	r25, r1
     8b0:	40 f4       	brcc	.+16     	; 0x8c2 <turn+0x182>
		{
			read_line(sensors,IR_EMITTERS_ON);
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	ce 01       	movw	r24, r28
     8b6:	01 96       	adiw	r24, 0x01	; 1
     8b8:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     8bc:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     8c0:	f3 cf       	rjmp	.-26     	; 0x8a8 <turn+0x168>
		}
		while(sensors[3] < 100)
     8c2:	8f 81       	ldd	r24, Y+7	; 0x07
     8c4:	98 85       	ldd	r25, Y+8	; 0x08
     8c6:	84 36       	cpi	r24, 0x64	; 100
     8c8:	91 05       	cpc	r25, r1
     8ca:	08 f0       	brcs	.+2      	; 0x8ce <turn+0x18e>
     8cc:	82 cf       	rjmp	.-252    	; 0x7d2 <turn+0x92>
		{
			read_line(sensors,IR_EMITTERS_ON);
     8ce:	61 e0       	ldi	r22, 0x01	; 1
     8d0:	ce 01       	movw	r24, r28
     8d2:	01 96       	adiw	r24, 0x01	; 1
     8d4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <read_line>
			delay_us(10);
     8d8:	0e 94 96 03 	call	0x72c	; 0x72c <delay_us.constprop.0>
     8dc:	f2 cf       	rjmp	.-28     	; 0x8c2 <turn+0x182>
	{
		
	}
	

     8de:	2a 96       	adiw	r28, 0x0a	; 10
     8e0:	0f b6       	in	r0, 0x3f	; 63
     8e2:	f8 94       	cli
     8e4:	de bf       	out	0x3e, r29	; 62
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	cd bf       	out	0x3d, r28	; 61
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	1f 91       	pop	r17
     8f0:	0f 91       	pop	r16
     8f2:	08 95       	ret

000008f4 <_ZN15OrangutanAnalog7setModeEh>:
     8f4:	88 23       	and	r24, r24
     8f6:	21 f4       	brne	.+8      	; 0x900 <__stack+0x1>
     8f8:	80 91 7c 00 	lds	r24, 0x007C
     8fc:	8f 7d       	andi	r24, 0xDF	; 223
     8fe:	03 c0       	rjmp	.+6      	; 0x906 <__stack+0x7>
     900:	80 91 7c 00 	lds	r24, 0x007C
     904:	80 62       	ori	r24, 0x20	; 32
     906:	80 93 7c 00 	sts	0x007C, r24
     90a:	08 95       	ret

0000090c <_ZN15OrangutanAnalog7getModeEv>:
     90c:	80 91 7c 00 	lds	r24, 0x007C
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	25 e0       	ldi	r18, 0x05	; 5
     914:	95 95       	asr	r25
     916:	87 95       	ror	r24
     918:	2a 95       	dec	r18
     91a:	e1 f7       	brne	.-8      	; 0x914 <_ZN15OrangutanAnalog7getModeEv+0x8>
     91c:	81 70       	andi	r24, 0x01	; 1
     91e:	08 95       	ret

00000920 <_ZN15OrangutanAnalog12isConvertingEv>:
     920:	80 91 7a 00 	lds	r24, 0x007A
     924:	90 e0       	ldi	r25, 0x00	; 0
     926:	36 e0       	ldi	r19, 0x06	; 6
     928:	95 95       	asr	r25
     92a:	87 95       	ror	r24
     92c:	3a 95       	dec	r19
     92e:	e1 f7       	brne	.-8      	; 0x928 <_ZN15OrangutanAnalog12isConvertingEv+0x8>
     930:	81 70       	andi	r24, 0x01	; 1
     932:	08 95       	ret

00000934 <_ZN15OrangutanAnalog16conversionResultEv>:
     934:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanAnalog7getModeEv>
     938:	88 23       	and	r24, r24
     93a:	21 f0       	breq	.+8      	; 0x944 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     93c:	20 91 79 00 	lds	r18, 0x0079
     940:	30 e0       	ldi	r19, 0x00	; 0
     942:	04 c0       	rjmp	.+8      	; 0x94c <_ZN15OrangutanAnalog16conversionResultEv+0x18>
     944:	20 91 78 00 	lds	r18, 0x0078
     948:	30 91 79 00 	lds	r19, 0x0079
     94c:	c9 01       	movw	r24, r18
     94e:	08 95       	ret

00000950 <_ZN15OrangutanAnalog15startConversionEhh>:
     950:	80 32       	cpi	r24, 0x20	; 32
     952:	b0 f4       	brcc	.+44     	; 0x980 <_ZN15OrangutanAnalog15startConversionEhh+0x30>
     954:	97 e8       	ldi	r25, 0x87	; 135
     956:	90 93 7a 00 	sts	0x007A, r25
     95a:	90 91 7c 00 	lds	r25, 0x007C
     95e:	29 2f       	mov	r18, r25
     960:	20 64       	ori	r18, 0x40	; 64
     962:	66 23       	and	r22, r22
     964:	11 f0       	breq	.+4      	; 0x96a <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     966:	90 6c       	ori	r25, 0xC0	; 192
     968:	02 c0       	rjmp	.+4      	; 0x96e <_ZN15OrangutanAnalog15startConversionEhh+0x1e>
     96a:	92 2f       	mov	r25, r18
     96c:	9f 77       	andi	r25, 0x7F	; 127
     96e:	90 7e       	andi	r25, 0xE0	; 224
     970:	98 2b       	or	r25, r24
     972:	90 93 7c 00 	sts	0x007C, r25
     976:	80 91 7a 00 	lds	r24, 0x007A
     97a:	80 64       	ori	r24, 0x40	; 64
     97c:	80 93 7a 00 	sts	0x007A, r24
     980:	08 95       	ret

00000982 <_ZN15OrangutanAnalog11readAverageEhj>:
     982:	a0 e0       	ldi	r26, 0x00	; 0
     984:	b0 e0       	ldi	r27, 0x00	; 0
     986:	e7 ec       	ldi	r30, 0xC7	; 199
     988:	f4 e0       	ldi	r31, 0x04	; 4
     98a:	0c 94 7f 12 	jmp	0x24fe	; 0x24fe <__prologue_saves__+0x14>
     98e:	6b 01       	movw	r12, r22
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	0e 94 a8 04 	call	0x950	; 0x950 <_ZN15OrangutanAnalog15startConversionEhh>
     996:	0e 94 90 04 	call	0x920	; 0x920 <_ZN15OrangutanAnalog12isConvertingEv>
     99a:	88 23       	and	r24, r24
     99c:	e1 f7       	brne	.-8      	; 0x996 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     99e:	e6 01       	movw	r28, r12
     9a0:	ee 24       	eor	r14, r14
     9a2:	ff 24       	eor	r15, r15
     9a4:	87 01       	movw	r16, r14
     9a6:	80 91 7a 00 	lds	r24, 0x007A
     9aa:	80 64       	ori	r24, 0x40	; 64
     9ac:	80 93 7a 00 	sts	0x007A, r24
     9b0:	0e 94 90 04 	call	0x920	; 0x920 <_ZN15OrangutanAnalog12isConvertingEv>
     9b4:	88 23       	and	r24, r24
     9b6:	e1 f7       	brne	.-8      	; 0x9b0 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     9b8:	0e 94 9a 04 	call	0x934	; 0x934 <_ZN15OrangutanAnalog16conversionResultEv>
     9bc:	a0 e0       	ldi	r26, 0x00	; 0
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	e8 0e       	add	r14, r24
     9c2:	f9 1e       	adc	r15, r25
     9c4:	0a 1f       	adc	r16, r26
     9c6:	1b 1f       	adc	r17, r27
     9c8:	21 97       	sbiw	r28, 0x01	; 1
     9ca:	69 f7       	brne	.-38     	; 0x9a6 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     9cc:	c6 01       	movw	r24, r12
     9ce:	96 95       	lsr	r25
     9d0:	87 95       	ror	r24
     9d2:	20 e4       	ldi	r18, 0x40	; 64
     9d4:	c2 16       	cp	r12, r18
     9d6:	d1 04       	cpc	r13, r1
     9d8:	40 f4       	brcc	.+16     	; 0x9ea <_ZN15OrangutanAnalog11readAverageEhj+0x68>
     9da:	8e 0d       	add	r24, r14
     9dc:	9f 1d       	adc	r25, r15
     9de:	6c 2d       	mov	r22, r12
     9e0:	70 e0       	ldi	r23, 0x00	; 0
     9e2:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     9e6:	cb 01       	movw	r24, r22
     9e8:	0d c0       	rjmp	.+26     	; 0xa04 <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     9ea:	bc 01       	movw	r22, r24
     9ec:	80 e0       	ldi	r24, 0x00	; 0
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	6e 0d       	add	r22, r14
     9f2:	7f 1d       	adc	r23, r15
     9f4:	80 1f       	adc	r24, r16
     9f6:	91 1f       	adc	r25, r17
     9f8:	96 01       	movw	r18, r12
     9fa:	40 e0       	ldi	r20, 0x00	; 0
     9fc:	50 e0       	ldi	r21, 0x00	; 0
     9fe:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
     a02:	c9 01       	movw	r24, r18
     a04:	cd b7       	in	r28, 0x3d	; 61
     a06:	de b7       	in	r29, 0x3e	; 62
     a08:	e8 e0       	ldi	r30, 0x08	; 8
     a0a:	0c 94 9b 12 	jmp	0x2536	; 0x2536 <__epilogue_restores__+0x14>

00000a0e <_ZN15OrangutanAnalog12toMillivoltsEj>:
     a0e:	a3 e0       	ldi	r26, 0x03	; 3
     a10:	b0 e0       	ldi	r27, 0x00	; 0
     a12:	ed e0       	ldi	r30, 0x0D	; 13
     a14:	f5 e0       	ldi	r31, 0x05	; 5
     a16:	0c 94 84 12 	jmp	0x2508	; 0x2508 <__prologue_saves__+0x1e>
     a1a:	bc 01       	movw	r22, r24
     a1c:	80 e0       	ldi	r24, 0x00	; 0
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	20 91 00 01 	lds	r18, 0x0100
     a24:	30 91 01 01 	lds	r19, 0x0101
     a28:	40 e0       	ldi	r20, 0x00	; 0
     a2a:	50 e0       	ldi	r21, 0x00	; 0
     a2c:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__mulsi3>
     a30:	18 2f       	mov	r17, r24
     a32:	69 83       	std	Y+1, r22	; 0x01
     a34:	7a 83       	std	Y+2, r23	; 0x02
     a36:	9b 83       	std	Y+3, r25	; 0x03
     a38:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanAnalog7getModeEv>
     a3c:	69 81       	ldd	r22, Y+1	; 0x01
     a3e:	7a 81       	ldd	r23, Y+2	; 0x02
     a40:	9b 81       	ldd	r25, Y+3	; 0x03
     a42:	88 23       	and	r24, r24
     a44:	71 f0       	breq	.+28     	; 0xa62 <_ZN15OrangutanAnalog12toMillivoltsEj+0x54>
     a46:	9b 01       	movw	r18, r22
     a48:	41 2f       	mov	r20, r17
     a4a:	59 2f       	mov	r21, r25
     a4c:	ca 01       	movw	r24, r20
     a4e:	b9 01       	movw	r22, r18
     a50:	61 58       	subi	r22, 0x81	; 129
     a52:	7f 4f       	sbci	r23, 0xFF	; 255
     a54:	8f 4f       	sbci	r24, 0xFF	; 255
     a56:	9f 4f       	sbci	r25, 0xFF	; 255
     a58:	2f ef       	ldi	r18, 0xFF	; 255
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	50 e0       	ldi	r21, 0x00	; 0
     a60:	0d c0       	rjmp	.+26     	; 0xa7c <_ZN15OrangutanAnalog12toMillivoltsEj+0x6e>
     a62:	9b 01       	movw	r18, r22
     a64:	41 2f       	mov	r20, r17
     a66:	59 2f       	mov	r21, r25
     a68:	ca 01       	movw	r24, r20
     a6a:	b9 01       	movw	r22, r18
     a6c:	61 50       	subi	r22, 0x01	; 1
     a6e:	7e 4f       	sbci	r23, 0xFE	; 254
     a70:	8f 4f       	sbci	r24, 0xFF	; 255
     a72:	9f 4f       	sbci	r25, 0xFF	; 255
     a74:	2f ef       	ldi	r18, 0xFF	; 255
     a76:	33 e0       	ldi	r19, 0x03	; 3
     a78:	40 e0       	ldi	r20, 0x00	; 0
     a7a:	50 e0       	ldi	r21, 0x00	; 0
     a7c:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
     a80:	c9 01       	movw	r24, r18
     a82:	23 96       	adiw	r28, 0x03	; 3
     a84:	e3 e0       	ldi	r30, 0x03	; 3
     a86:	0c 94 a0 12 	jmp	0x2540	; 0x2540 <__epilogue_restores__+0x1e>

00000a8a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     a8a:	0e 94 c1 04 	call	0x982	; 0x982 <_ZN15OrangutanAnalog11readAverageEhj>
     a8e:	0e 94 07 05 	call	0xa0e	; 0xa0e <_ZN15OrangutanAnalog12toMillivoltsEj>
     a92:	08 95       	ret

00000a94 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     a94:	1f 93       	push	r17
     a96:	cf 93       	push	r28
     a98:	df 93       	push	r29
     a9a:	0e 94 86 04 	call	0x90c	; 0x90c <_ZN15OrangutanAnalog7getModeEv>
     a9e:	18 2f       	mov	r17, r24
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <_ZN15OrangutanAnalog7setModeEh>
     aa6:	86 e0       	ldi	r24, 0x06	; 6
     aa8:	6a e0       	ldi	r22, 0x0A	; 10
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	0e 94 45 05 	call	0xa8a	; 0xa8a <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     ab0:	ec 01       	movw	r28, r24
     ab2:	81 2f       	mov	r24, r17
     ab4:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <_ZN15OrangutanAnalog7setModeEh>
     ab8:	9e 01       	movw	r18, r28
     aba:	22 0f       	add	r18, r18
     abc:	33 1f       	adc	r19, r19
     abe:	2c 0f       	add	r18, r28
     ac0:	3d 1f       	adc	r19, r29
     ac2:	2f 5f       	subi	r18, 0xFF	; 255
     ac4:	3f 4f       	sbci	r19, 0xFF	; 255
     ac6:	36 95       	lsr	r19
     ac8:	27 95       	ror	r18
     aca:	c9 01       	movw	r24, r18
     acc:	df 91       	pop	r29
     ace:	cf 91       	pop	r28
     ad0:	1f 91       	pop	r17
     ad2:	08 95       	ret

00000ad4 <read_battery_millivolts_3pi>:
     ad4:	0e 94 4a 05 	call	0xa94	; 0xa94 <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     ad8:	08 95       	ret

00000ada <_ZL16currentCharacterv>:
     ada:	90 91 4f 01 	lds	r25, 0x014F
     ade:	e0 91 4b 01 	lds	r30, 0x014B
     ae2:	f0 91 4c 01 	lds	r31, 0x014C
     ae6:	99 23       	and	r25, r25
     ae8:	11 f0       	breq	.+4      	; 0xaee <_ZL16currentCharacterv+0x14>
     aea:	84 91       	lpm	r24, Z
     aec:	01 c0       	rjmp	.+2      	; 0xaf0 <_ZL16currentCharacterv+0x16>
     aee:	80 81       	ld	r24, Z
     af0:	28 2f       	mov	r18, r24
     af2:	21 54       	subi	r18, 0x41	; 65
     af4:	2a 31       	cpi	r18, 0x1A	; 26
     af6:	10 f4       	brcc	.+4      	; 0xafc <_ZL16currentCharacterv+0x22>
     af8:	80 5e       	subi	r24, 0xE0	; 224
     afa:	08 95       	ret
     afc:	80 32       	cpi	r24, 0x20	; 32
     afe:	71 f4       	brne	.+28     	; 0xb1c <_ZL16currentCharacterv+0x42>
     b00:	20 91 4b 01 	lds	r18, 0x014B
     b04:	30 91 4c 01 	lds	r19, 0x014C
     b08:	a9 01       	movw	r20, r18
     b0a:	4f 5f       	subi	r20, 0xFF	; 255
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	50 93 4c 01 	sts	0x014C, r21
     b12:	40 93 4b 01 	sts	0x014B, r20
     b16:	21 15       	cp	r18, r1
     b18:	31 05       	cpc	r19, r1
     b1a:	09 f7       	brne	.-62     	; 0xade <_ZL16currentCharacterv+0x4>
     b1c:	08 95       	ret

00000b1e <_ZL9getNumberv>:
     b1e:	ef 92       	push	r14
     b20:	ff 92       	push	r15
     b22:	cf 93       	push	r28
     b24:	df 93       	push	r29
     b26:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     b2a:	c0 e0       	ldi	r28, 0x00	; 0
     b2c:	d0 e0       	ldi	r29, 0x00	; 0
     b2e:	1b c0       	rjmp	.+54     	; 0xb66 <_ZL9getNumberv+0x48>
     b30:	9e 01       	movw	r18, r28
     b32:	22 0f       	add	r18, r18
     b34:	33 1f       	adc	r19, r19
     b36:	93 e0       	ldi	r25, 0x03	; 3
     b38:	cc 0f       	add	r28, r28
     b3a:	dd 1f       	adc	r29, r29
     b3c:	9a 95       	dec	r25
     b3e:	e1 f7       	brne	.-8      	; 0xb38 <_ZL9getNumberv+0x1a>
     b40:	c2 0f       	add	r28, r18
     b42:	d3 1f       	adc	r29, r19
     b44:	99 27       	eor	r25, r25
     b46:	87 fd       	sbrc	r24, 7
     b48:	90 95       	com	r25
     b4a:	c8 0f       	add	r28, r24
     b4c:	d9 1f       	adc	r29, r25
     b4e:	e0 97       	sbiw	r28, 0x30	; 48
     b50:	80 91 4b 01 	lds	r24, 0x014B
     b54:	90 91 4c 01 	lds	r25, 0x014C
     b58:	01 96       	adiw	r24, 0x01	; 1
     b5a:	90 93 4c 01 	sts	0x014C, r25
     b5e:	80 93 4b 01 	sts	0x014B, r24
     b62:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     b66:	98 2f       	mov	r25, r24
     b68:	90 53       	subi	r25, 0x30	; 48
     b6a:	9a 30       	cpi	r25, 0x0A	; 10
     b6c:	08 f3       	brcs	.-62     	; 0xb30 <_ZL9getNumberv+0x12>
     b6e:	ce 01       	movw	r24, r28
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	ff 90       	pop	r15
     b76:	ef 90       	pop	r14
     b78:	08 95       	ret

00000b7a <_ZN15OrangutanBuzzer5init2Ev>:
     b7a:	10 92 6f 00 	sts	0x006F, r1
     b7e:	83 e2       	ldi	r24, 0x23	; 35
     b80:	80 93 80 00 	sts	0x0080, r24
     b84:	81 e1       	ldi	r24, 0x11	; 17
     b86:	80 93 81 00 	sts	0x0081, r24
     b8a:	10 92 82 00 	sts	0x0082, r1
     b8e:	80 e1       	ldi	r24, 0x10	; 16
     b90:	97 e2       	ldi	r25, 0x27	; 39
     b92:	90 93 89 00 	sts	0x0089, r25
     b96:	80 93 88 00 	sts	0x0088, r24
     b9a:	10 92 8b 00 	sts	0x008B, r1
     b9e:	10 92 8a 00 	sts	0x008A, r1
     ba2:	22 9a       	sbi	0x04, 2	; 4
     ba4:	78 94       	sei
     ba6:	08 95       	ret

00000ba8 <_ZN15OrangutanBuzzer4initEv>:
     ba8:	80 91 4a 01 	lds	r24, 0x014A
     bac:	88 23       	and	r24, r24
     bae:	29 f4       	brne	.+10     	; 0xbba <_ZN15OrangutanBuzzer4initEv+0x12>
     bb0:	81 e0       	ldi	r24, 0x01	; 1
     bb2:	80 93 4a 01 	sts	0x014A, r24
     bb6:	0e 94 bd 05 	call	0xb7a	; 0xb7a <_ZN15OrangutanBuzzer5init2Ev>
     bba:	08 95       	ret

00000bbc <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     bbc:	a0 e0       	ldi	r26, 0x00	; 0
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	e4 ee       	ldi	r30, 0xE4	; 228
     bc2:	f5 e0       	ldi	r31, 0x05	; 5
     bc4:	0c 94 7b 12 	jmp	0x24f6	; 0x24f6 <__prologue_saves__+0xc>
     bc8:	8c 01       	movw	r16, r24
     bca:	5b 01       	movw	r10, r22
     bcc:	e4 2e       	mov	r14, r20
     bce:	0e 94 d4 05 	call	0xba8	; 0xba8 <_ZN15OrangutanBuzzer4initEv>
     bd2:	10 92 02 01 	sts	0x0102, r1
     bd6:	17 ff       	sbrs	r17, 7
     bd8:	04 c0       	rjmp	.+8      	; 0xbe2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     bda:	1f 77       	andi	r17, 0x7F	; 127
     bdc:	aa e0       	ldi	r26, 0x0A	; 10
     bde:	fa 2e       	mov	r15, r26
     be0:	02 c0       	rjmp	.+4      	; 0xbe6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     be2:	ff 24       	eor	r15, r15
     be4:	f3 94       	inc	r15
     be6:	c0 90 81 00 	lds	r12, 0x0081
     bea:	dd 24       	eor	r13, r13
     bec:	28 ef       	ldi	r18, 0xF8	; 248
     bee:	c2 22       	and	r12, r18
     bf0:	dd 24       	eor	r13, r13
     bf2:	88 ec       	ldi	r24, 0xC8	; 200
     bf4:	3f 2d       	mov	r19, r15
     bf6:	38 9f       	mul	r19, r24
     bf8:	c0 01       	movw	r24, r0
     bfa:	11 24       	eor	r1, r1
     bfc:	80 17       	cp	r24, r16
     bfe:	91 07       	cpc	r25, r17
     c00:	d8 f4       	brcc	.+54     	; 0xc38 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     c02:	e8 01       	movw	r28, r16
     c04:	67 e2       	ldi	r22, 0x27	; 39
     c06:	01 31       	cpi	r16, 0x11	; 17
     c08:	16 07       	cpc	r17, r22
     c0a:	10 f0       	brcs	.+4      	; 0xc10 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     c0c:	c0 e1       	ldi	r28, 0x10	; 16
     c0e:	d7 e2       	ldi	r29, 0x27	; 39
     c10:	be 01       	movw	r22, r28
     c12:	76 95       	lsr	r23
     c14:	67 95       	ror	r22
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	60 58       	subi	r22, 0x80	; 128
     c1c:	79 46       	sbci	r23, 0x69	; 105
     c1e:	87 46       	sbci	r24, 0x67	; 103
     c20:	9f 4f       	sbci	r25, 0xFF	; 255
     c22:	9e 01       	movw	r18, r28
     c24:	40 e0       	ldi	r20, 0x00	; 0
     c26:	50 e0       	ldi	r21, 0x00	; 0
     c28:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
     c2c:	89 01       	movw	r16, r18
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	c8 2a       	or	r12, r24
     c34:	d9 2a       	or	r13, r25
     c36:	2c c0       	rjmp	.+88     	; 0xc90 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     c38:	98 e2       	ldi	r25, 0x28	; 40
     c3a:	f9 9e       	mul	r15, r25
     c3c:	90 2d       	mov	r25, r0
     c3e:	11 24       	eor	r1, r1
     c40:	80 e0       	ldi	r24, 0x00	; 0
     c42:	89 2e       	mov	r8, r25
     c44:	e4 01       	movw	r28, r8
     c46:	4e 01       	movw	r8, r28
     c48:	98 2e       	mov	r9, r24
     c4a:	e4 01       	movw	r28, r8
     c4c:	80 16       	cp	r8, r16
     c4e:	91 06       	cpc	r9, r17
     c50:	08 f4       	brcc	.+2      	; 0xc54 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     c52:	e8 01       	movw	r28, r16
     c54:	be 01       	movw	r22, r28
     c56:	76 95       	lsr	r23
     c58:	67 95       	ror	r22
     c5a:	9e 01       	movw	r18, r28
     c5c:	40 e0       	ldi	r20, 0x00	; 0
     c5e:	50 e0       	ldi	r21, 0x00	; 0
     c60:	8f 2d       	mov	r24, r15
     c62:	8a 30       	cpi	r24, 0x0A	; 10
     c64:	39 f4       	brne	.+14     	; 0xc74 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     c66:	80 e0       	ldi	r24, 0x00	; 0
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	60 5e       	subi	r22, 0xE0	; 224
     c6c:	73 44       	sbci	r23, 0x43	; 67
     c6e:	81 44       	sbci	r24, 0x41	; 65
     c70:	9f 4f       	sbci	r25, 0xFF	; 255
     c72:	06 c0       	rjmp	.+12     	; 0xc80 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	60 53       	subi	r22, 0x30	; 48
     c7a:	7d 4e       	sbci	r23, 0xED	; 237
     c7c:	8c 4e       	sbci	r24, 0xEC	; 236
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
     c84:	89 01       	movw	r16, r18
     c86:	52 e0       	ldi	r21, 0x02	; 2
     c88:	85 2e       	mov	r8, r21
     c8a:	91 2c       	mov	r9, r1
     c8c:	c8 28       	or	r12, r8
     c8e:	d9 28       	or	r13, r9
     c90:	2f 2d       	mov	r18, r15
     c92:	2a 30       	cpi	r18, 0x0A	; 10
     c94:	39 f4       	brne	.+14     	; 0xca4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     c96:	ce 01       	movw	r24, r28
     c98:	05 96       	adiw	r24, 0x05	; 5
     c9a:	6a e0       	ldi	r22, 0x0A	; 10
     c9c:	70 e0       	ldi	r23, 0x00	; 0
     c9e:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     ca2:	eb 01       	movw	r28, r22
     ca4:	33 e0       	ldi	r19, 0x03	; 3
     ca6:	c8 3e       	cpi	r28, 0xE8	; 232
     ca8:	d3 07       	cpc	r29, r19
     caa:	79 f0       	breq	.+30     	; 0xcca <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     cac:	be 01       	movw	r22, r28
     cae:	80 e0       	ldi	r24, 0x00	; 0
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	95 01       	movw	r18, r10
     cb4:	40 e0       	ldi	r20, 0x00	; 0
     cb6:	50 e0       	ldi	r21, 0x00	; 0
     cb8:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__mulsi3>
     cbc:	28 ee       	ldi	r18, 0xE8	; 232
     cbe:	33 e0       	ldi	r19, 0x03	; 3
     cc0:	40 e0       	ldi	r20, 0x00	; 0
     cc2:	50 e0       	ldi	r21, 0x00	; 0
     cc4:	0e 94 4b 12 	call	0x2496	; 0x2496 <__divmodsi4>
     cc8:	01 c0       	rjmp	.+2      	; 0xccc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     cca:	95 01       	movw	r18, r10
     ccc:	10 92 6f 00 	sts	0x006F, r1
     cd0:	c0 92 81 00 	sts	0x0081, r12
     cd4:	10 93 89 00 	sts	0x0089, r17
     cd8:	00 93 88 00 	sts	0x0088, r16
     cdc:	40 91 88 00 	lds	r20, 0x0088
     ce0:	50 91 89 00 	lds	r21, 0x0089
     ce4:	6e 2d       	mov	r22, r14
     ce6:	60 31       	cpi	r22, 0x10	; 16
     ce8:	08 f0       	brcs	.+2      	; 0xcec <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     cea:	6f e0       	ldi	r22, 0x0F	; 15
     cec:	80 e1       	ldi	r24, 0x10	; 16
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	86 1b       	sub	r24, r22
     cf2:	91 09       	sbc	r25, r1
     cf4:	ba 01       	movw	r22, r20
     cf6:	02 c0       	rjmp	.+4      	; 0xcfc <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     cf8:	76 95       	lsr	r23
     cfa:	67 95       	ror	r22
     cfc:	8a 95       	dec	r24
     cfe:	e2 f7       	brpl	.-8      	; 0xcf8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     d00:	70 93 8b 00 	sts	0x008B, r23
     d04:	60 93 8a 00 	sts	0x008A, r22
     d08:	30 93 52 01 	sts	0x0152, r19
     d0c:	20 93 51 01 	sts	0x0151, r18
     d10:	86 b3       	in	r24, 0x16	; 22
     d12:	8f ef       	ldi	r24, 0xFF	; 255
     d14:	86 bb       	out	0x16, r24	; 22
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	80 93 6f 00 	sts	0x006F, r24
     d1c:	cd b7       	in	r28, 0x3d	; 61
     d1e:	de b7       	in	r29, 0x3e	; 62
     d20:	ec e0       	ldi	r30, 0x0C	; 12
     d22:	0c 94 97 12 	jmp	0x252e	; 0x252e <__epilogue_restores__+0xc>

00000d26 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     d26:	9b 01       	movw	r18, r22
     d28:	8f 3f       	cpi	r24, 0xFF	; 255
     d2a:	11 f0       	breq	.+4      	; 0xd30 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     d2c:	44 23       	and	r20, r20
     d2e:	29 f4       	brne	.+10     	; 0xd3a <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     d30:	88 ee       	ldi	r24, 0xE8	; 232
     d32:	93 e0       	ldi	r25, 0x03	; 3
     d34:	b9 01       	movw	r22, r18
     d36:	40 e0       	ldi	r20, 0x00	; 0
     d38:	49 c0       	rjmp	.+146    	; 0xdcc <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     d3a:	81 31       	cpi	r24, 0x11	; 17
     d3c:	30 f0       	brcs	.+12     	; 0xd4a <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     d3e:	58 2f       	mov	r21, r24
     d40:	50 51       	subi	r21, 0x10	; 16
     d42:	50 36       	cpi	r21, 0x60	; 96
     d44:	18 f0       	brcs	.+6      	; 0xd4c <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     d46:	5f e5       	ldi	r21, 0x5F	; 95
     d48:	01 c0       	rjmp	.+2      	; 0xd4c <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     d4a:	50 e0       	ldi	r21, 0x00	; 0
     d4c:	85 2f       	mov	r24, r21
     d4e:	6c e0       	ldi	r22, 0x0C	; 12
     d50:	0e 94 f5 11 	call	0x23ea	; 0x23ea <__udivmodqi4>
     d54:	a8 2f       	mov	r26, r24
     d56:	b0 e0       	ldi	r27, 0x00	; 0
     d58:	e4 ef       	ldi	r30, 0xF4	; 244
     d5a:	ff ef       	ldi	r31, 0xFF	; 255
     d5c:	ae 9f       	mul	r26, r30
     d5e:	b0 01       	movw	r22, r0
     d60:	af 9f       	mul	r26, r31
     d62:	70 0d       	add	r23, r0
     d64:	be 9f       	mul	r27, r30
     d66:	70 0d       	add	r23, r0
     d68:	11 24       	eor	r1, r1
     d6a:	65 0f       	add	r22, r21
     d6c:	71 1d       	adc	r23, r1
     d6e:	6c 30       	cpi	r22, 0x0C	; 12
     d70:	71 05       	cpc	r23, r1
     d72:	40 f4       	brcc	.+16     	; 0xd84 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     d74:	fb 01       	movw	r30, r22
     d76:	ee 0f       	add	r30, r30
     d78:	ff 1f       	adc	r31, r31
     d7a:	e4 5f       	subi	r30, 0xF4	; 244
     d7c:	fe 4f       	sbci	r31, 0xFE	; 254
     d7e:	60 81       	ld	r22, Z
     d80:	71 81       	ldd	r23, Z+1	; 0x01
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	70 e0       	ldi	r23, 0x00	; 0
     d88:	87 30       	cpi	r24, 0x07	; 7
     d8a:	81 f0       	breq	.+32     	; 0xdac <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     d8c:	08 2e       	mov	r0, r24
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     d90:	66 0f       	add	r22, r22
     d92:	77 1f       	adc	r23, r23
     d94:	0a 94       	dec	r0
     d96:	e2 f7       	brpl	.-8      	; 0xd90 <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     d98:	82 30       	cpi	r24, 0x02	; 2
     d9a:	28 f0       	brcs	.+10     	; 0xda6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     d9c:	cb 01       	movw	r24, r22
     d9e:	05 96       	adiw	r24, 0x05	; 5
     da0:	6a e0       	ldi	r22, 0x0A	; 10
     da2:	70 e0       	ldi	r23, 0x00	; 0
     da4:	0c c0       	rjmp	.+24     	; 0xdbe <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     da6:	60 50       	subi	r22, 0x00	; 0
     da8:	70 48       	sbci	r23, 0x80	; 128
     daa:	0b c0       	rjmp	.+22     	; 0xdc2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     dac:	cb 01       	movw	r24, r22
     dae:	b6 e0       	ldi	r27, 0x06	; 6
     db0:	88 0f       	add	r24, r24
     db2:	99 1f       	adc	r25, r25
     db4:	ba 95       	dec	r27
     db6:	e1 f7       	brne	.-8      	; 0xdb0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     db8:	02 96       	adiw	r24, 0x02	; 2
     dba:	65 e0       	ldi	r22, 0x05	; 5
     dbc:	70 e0       	ldi	r23, 0x00	; 0
     dbe:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     dc2:	40 31       	cpi	r20, 0x10	; 16
     dc4:	08 f0       	brcs	.+2      	; 0xdc8 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     dc6:	4f e0       	ldi	r20, 0x0F	; 15
     dc8:	cb 01       	movw	r24, r22
     dca:	b9 01       	movw	r22, r18
     dcc:	0e 94 de 05 	call	0xbbc	; 0xbbc <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     dd0:	08 95       	ret

00000dd2 <_ZL8nextNotev>:
     dd2:	a0 e0       	ldi	r26, 0x00	; 0
     dd4:	b0 e0       	ldi	r27, 0x00	; 0
     dd6:	ef ee       	ldi	r30, 0xEF	; 239
     dd8:	f6 e0       	ldi	r31, 0x06	; 6
     dda:	0c 94 7a 12 	jmp	0x24f4	; 0x24f4 <__prologue_saves__+0xa>
     dde:	b0 90 03 01 	lds	r11, 0x0103
     de2:	80 91 4d 01 	lds	r24, 0x014D
     de6:	88 23       	and	r24, r24
     de8:	61 f0       	breq	.+24     	; 0xe02 <_ZL8nextNotev+0x30>
     dea:	60 91 4e 01 	lds	r22, 0x014E
     dee:	66 23       	and	r22, r22
     df0:	41 f0       	breq	.+16     	; 0xe02 <_ZL8nextNotev+0x30>
     df2:	8f ef       	ldi	r24, 0xFF	; 255
     df4:	70 e0       	ldi	r23, 0x00	; 0
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	0e 94 93 06 	call	0xd26	; 0xd26 <_ZN15OrangutanBuzzer8playNoteEhjh>
     dfc:	10 92 4e 01 	sts	0x014E, r1
     e00:	34 c1       	rjmp	.+616    	; 0x106a <_ZL8nextNotev+0x298>
     e02:	c0 ec       	ldi	r28, 0xC0	; 192
     e04:	dd e5       	ldi	r29, 0x5D	; 93
     e06:	aa 24       	eor	r10, r10
     e08:	a3 94       	inc	r10
     e0a:	14 e0       	ldi	r17, 0x04	; 4
     e0c:	71 2e       	mov	r7, r17
     e0e:	00 ed       	ldi	r16, 0xD0	; 208
     e10:	17 e0       	ldi	r17, 0x07	; 7
     e12:	b4 e0       	ldi	r27, 0x04	; 4
     e14:	eb 2e       	mov	r14, r27
     e16:	f1 2c       	mov	r15, r1
     e18:	a4 ef       	ldi	r26, 0xF4	; 244
     e1a:	ca 2e       	mov	r12, r26
     e1c:	a1 e0       	ldi	r26, 0x01	; 1
     e1e:	da 2e       	mov	r13, r26
     e20:	ff e0       	ldi	r31, 0x0F	; 15
     e22:	8f 2e       	mov	r8, r31
     e24:	91 2c       	mov	r9, r1
     e26:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     e2a:	20 91 4b 01 	lds	r18, 0x014B
     e2e:	30 91 4c 01 	lds	r19, 0x014C
     e32:	2f 5f       	subi	r18, 0xFF	; 255
     e34:	3f 4f       	sbci	r19, 0xFF	; 255
     e36:	30 93 4c 01 	sts	0x014C, r19
     e3a:	20 93 4b 01 	sts	0x014B, r18
     e3e:	86 36       	cpi	r24, 0x66	; 102
     e40:	f1 f1       	breq	.+124    	; 0xebe <_ZL8nextNotev+0xec>
     e42:	87 36       	cpi	r24, 0x67	; 103
     e44:	cc f4       	brge	.+50     	; 0xe78 <_ZL8nextNotev+0xa6>
     e46:	82 36       	cpi	r24, 0x62	; 98
     e48:	09 f4       	brne	.+2      	; 0xe4c <_ZL8nextNotev+0x7a>
     e4a:	af c0       	rjmp	.+350    	; 0xfaa <_ZL8nextNotev+0x1d8>
     e4c:	83 36       	cpi	r24, 0x63	; 99
     e4e:	7c f4       	brge	.+30     	; 0xe6e <_ZL8nextNotev+0x9c>
     e50:	8e 33       	cpi	r24, 0x3E	; 62
     e52:	49 f1       	breq	.+82     	; 0xea6 <_ZL8nextNotev+0xd4>
     e54:	8f 33       	cpi	r24, 0x3F	; 63
     e56:	3c f4       	brge	.+14     	; 0xe66 <_ZL8nextNotev+0x94>
     e58:	81 32       	cpi	r24, 0x21	; 33
     e5a:	09 f4       	brne	.+2      	; 0xe5e <_ZL8nextNotev+0x8c>
     e5c:	87 c0       	rjmp	.+270    	; 0xf6c <_ZL8nextNotev+0x19a>
     e5e:	8c 33       	cpi	r24, 0x3C	; 60
     e60:	09 f0       	breq	.+2      	; 0xe64 <_ZL8nextNotev+0x92>
     e62:	9b c0       	rjmp	.+310    	; 0xf9a <_ZL8nextNotev+0x1c8>
     e64:	22 c0       	rjmp	.+68     	; 0xeaa <_ZL8nextNotev+0xd8>
     e66:	81 36       	cpi	r24, 0x61	; 97
     e68:	09 f0       	breq	.+2      	; 0xe6c <_ZL8nextNotev+0x9a>
     e6a:	97 c0       	rjmp	.+302    	; 0xf9a <_ZL8nextNotev+0x1c8>
     e6c:	9b c0       	rjmp	.+310    	; 0xfa4 <_ZL8nextNotev+0x1d2>
     e6e:	84 36       	cpi	r24, 0x64	; 100
     e70:	01 f1       	breq	.+64     	; 0xeb2 <_ZL8nextNotev+0xe0>
     e72:	85 36       	cpi	r24, 0x65	; 101
     e74:	0c f5       	brge	.+66     	; 0xeb8 <_ZL8nextNotev+0xe6>
     e76:	1b c0       	rjmp	.+54     	; 0xeae <_ZL8nextNotev+0xdc>
     e78:	8f 36       	cpi	r24, 0x6F	; 111
     e7a:	09 f4       	brne	.+2      	; 0xe7e <_ZL8nextNotev+0xac>
     e7c:	47 c0       	rjmp	.+142    	; 0xf0c <_ZL8nextNotev+0x13a>
     e7e:	80 37       	cpi	r24, 0x70	; 112
     e80:	44 f4       	brge	.+16     	; 0xe92 <_ZL8nextNotev+0xc0>
     e82:	8c 36       	cpi	r24, 0x6C	; 108
     e84:	11 f1       	breq	.+68     	; 0xeca <_ZL8nextNotev+0xf8>
     e86:	8d 36       	cpi	r24, 0x6D	; 109
     e88:	61 f1       	breq	.+88     	; 0xee2 <_ZL8nextNotev+0x110>
     e8a:	87 36       	cpi	r24, 0x67	; 103
     e8c:	09 f0       	breq	.+2      	; 0xe90 <_ZL8nextNotev+0xbe>
     e8e:	85 c0       	rjmp	.+266    	; 0xf9a <_ZL8nextNotev+0x1c8>
     e90:	19 c0       	rjmp	.+50     	; 0xec4 <_ZL8nextNotev+0xf2>
     e92:	84 37       	cpi	r24, 0x74	; 116
     e94:	09 f4       	brne	.+2      	; 0xe98 <_ZL8nextNotev+0xc6>
     e96:	44 c0       	rjmp	.+136    	; 0xf20 <_ZL8nextNotev+0x14e>
     e98:	86 37       	cpi	r24, 0x76	; 118
     e9a:	09 f4       	brne	.+2      	; 0xe9e <_ZL8nextNotev+0xcc>
     e9c:	60 c0       	rjmp	.+192    	; 0xf5e <_ZL8nextNotev+0x18c>
     e9e:	82 37       	cpi	r24, 0x72	; 114
     ea0:	09 f0       	breq	.+2      	; 0xea4 <_ZL8nextNotev+0xd2>
     ea2:	7b c0       	rjmp	.+246    	; 0xf9a <_ZL8nextNotev+0x1c8>
     ea4:	39 c0       	rjmp	.+114    	; 0xf18 <_ZL8nextNotev+0x146>
     ea6:	b3 94       	inc	r11
     ea8:	be cf       	rjmp	.-132    	; 0xe26 <_ZL8nextNotev+0x54>
     eaa:	ba 94       	dec	r11
     eac:	bc cf       	rjmp	.-136    	; 0xe26 <_ZL8nextNotev+0x54>
     eae:	ee 24       	eor	r14, r14
     eb0:	35 c0       	rjmp	.+106    	; 0xf1c <_ZL8nextNotev+0x14a>
     eb2:	ee 24       	eor	r14, r14
     eb4:	82 e0       	ldi	r24, 0x02	; 2
     eb6:	7b c0       	rjmp	.+246    	; 0xfae <_ZL8nextNotev+0x1dc>
     eb8:	ee 24       	eor	r14, r14
     eba:	84 e0       	ldi	r24, 0x04	; 4
     ebc:	78 c0       	rjmp	.+240    	; 0xfae <_ZL8nextNotev+0x1dc>
     ebe:	ee 24       	eor	r14, r14
     ec0:	85 e0       	ldi	r24, 0x05	; 5
     ec2:	75 c0       	rjmp	.+234    	; 0xfae <_ZL8nextNotev+0x1dc>
     ec4:	ee 24       	eor	r14, r14
     ec6:	87 e0       	ldi	r24, 0x07	; 7
     ec8:	72 c0       	rjmp	.+228    	; 0xfae <_ZL8nextNotev+0x1dc>
     eca:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZL9getNumberv>
     ece:	bc 01       	movw	r22, r24
     ed0:	90 93 05 01 	sts	0x0105, r25
     ed4:	80 93 04 01 	sts	0x0104, r24
     ed8:	80 91 06 01 	lds	r24, 0x0106
     edc:	90 91 07 01 	lds	r25, 0x0107
     ee0:	37 c0       	rjmp	.+110    	; 0xf50 <_ZL8nextNotev+0x17e>
     ee2:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     ee6:	8c 36       	cpi	r24, 0x6C	; 108
     ee8:	19 f4       	brne	.+6      	; 0xef0 <_ZL8nextNotev+0x11e>
     eea:	10 92 4d 01 	sts	0x014D, r1
     eee:	04 c0       	rjmp	.+8      	; 0xef8 <_ZL8nextNotev+0x126>
     ef0:	a0 92 4d 01 	sts	0x014D, r10
     ef4:	10 92 4e 01 	sts	0x014E, r1
     ef8:	80 91 4b 01 	lds	r24, 0x014B
     efc:	90 91 4c 01 	lds	r25, 0x014C
     f00:	01 96       	adiw	r24, 0x01	; 1
     f02:	90 93 4c 01 	sts	0x014C, r25
     f06:	80 93 4b 01 	sts	0x014B, r24
     f0a:	8d cf       	rjmp	.-230    	; 0xe26 <_ZL8nextNotev+0x54>
     f0c:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZL9getNumberv>
     f10:	b8 2e       	mov	r11, r24
     f12:	80 93 03 01 	sts	0x0103, r24
     f16:	87 cf       	rjmp	.-242    	; 0xe26 <_ZL8nextNotev+0x54>
     f18:	ee 24       	eor	r14, r14
     f1a:	e3 94       	inc	r14
     f1c:	80 e0       	ldi	r24, 0x00	; 0
     f1e:	47 c0       	rjmp	.+142    	; 0xfae <_ZL8nextNotev+0x1dc>
     f20:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZL9getNumberv>
     f24:	bc 01       	movw	r22, r24
     f26:	ce 01       	movw	r24, r28
     f28:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     f2c:	cb 01       	movw	r24, r22
     f2e:	88 0f       	add	r24, r24
     f30:	99 1f       	adc	r25, r25
     f32:	53 e0       	ldi	r21, 0x03	; 3
     f34:	66 0f       	add	r22, r22
     f36:	77 1f       	adc	r23, r23
     f38:	5a 95       	dec	r21
     f3a:	e1 f7       	brne	.-8      	; 0xf34 <_ZL8nextNotev+0x162>
     f3c:	86 0f       	add	r24, r22
     f3e:	97 1f       	adc	r25, r23
     f40:	90 93 07 01 	sts	0x0107, r25
     f44:	80 93 06 01 	sts	0x0106, r24
     f48:	60 91 04 01 	lds	r22, 0x0104
     f4c:	70 91 05 01 	lds	r23, 0x0105
     f50:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
     f54:	70 93 09 01 	sts	0x0109, r23
     f58:	60 93 08 01 	sts	0x0108, r22
     f5c:	64 cf       	rjmp	.-312    	; 0xe26 <_ZL8nextNotev+0x54>
     f5e:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZL9getNumberv>
     f62:	90 93 0b 01 	sts	0x010B, r25
     f66:	80 93 0a 01 	sts	0x010A, r24
     f6a:	5d cf       	rjmp	.-326    	; 0xe26 <_ZL8nextNotev+0x54>
     f6c:	70 92 03 01 	sts	0x0103, r7
     f70:	10 93 07 01 	sts	0x0107, r17
     f74:	00 93 06 01 	sts	0x0106, r16
     f78:	f0 92 05 01 	sts	0x0105, r15
     f7c:	e0 92 04 01 	sts	0x0104, r14
     f80:	d0 92 09 01 	sts	0x0109, r13
     f84:	c0 92 08 01 	sts	0x0108, r12
     f88:	90 92 0b 01 	sts	0x010B, r9
     f8c:	80 92 0a 01 	sts	0x010A, r8
     f90:	10 92 4d 01 	sts	0x014D, r1
     f94:	44 e0       	ldi	r20, 0x04	; 4
     f96:	b4 2e       	mov	r11, r20
     f98:	46 cf       	rjmp	.-372    	; 0xe26 <_ZL8nextNotev+0x54>
     f9a:	10 92 4c 01 	sts	0x014C, r1
     f9e:	10 92 4b 01 	sts	0x014B, r1
     fa2:	63 c0       	rjmp	.+198    	; 0x106a <_ZL8nextNotev+0x298>
     fa4:	ee 24       	eor	r14, r14
     fa6:	89 e0       	ldi	r24, 0x09	; 9
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <_ZL8nextNotev+0x1dc>
     faa:	ee 24       	eor	r14, r14
     fac:	8b e0       	ldi	r24, 0x0B	; 11
     fae:	9c e0       	ldi	r25, 0x0C	; 12
     fb0:	b9 9e       	mul	r11, r25
     fb2:	b0 2c       	mov	r11, r0
     fb4:	11 24       	eor	r1, r1
     fb6:	b8 0e       	add	r11, r24
     fb8:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     fbc:	8b 32       	cpi	r24, 0x2B	; 43
     fbe:	11 f0       	breq	.+4      	; 0xfc4 <_ZL8nextNotev+0x1f2>
     fc0:	83 32       	cpi	r24, 0x23	; 35
     fc2:	b9 f4       	brne	.+46     	; 0xff2 <_ZL8nextNotev+0x220>
     fc4:	80 91 4b 01 	lds	r24, 0x014B
     fc8:	90 91 4c 01 	lds	r25, 0x014C
     fcc:	01 96       	adiw	r24, 0x01	; 1
     fce:	90 93 4c 01 	sts	0x014C, r25
     fd2:	80 93 4b 01 	sts	0x014B, r24
     fd6:	b3 94       	inc	r11
     fd8:	ef cf       	rjmp	.-34     	; 0xfb8 <_ZL8nextNotev+0x1e6>
     fda:	80 91 4b 01 	lds	r24, 0x014B
     fde:	90 91 4c 01 	lds	r25, 0x014C
     fe2:	01 96       	adiw	r24, 0x01	; 1
     fe4:	90 93 4c 01 	sts	0x014C, r25
     fe8:	80 93 4b 01 	sts	0x014B, r24
     fec:	ba 94       	dec	r11
     fee:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
     ff2:	8d 32       	cpi	r24, 0x2D	; 45
     ff4:	91 f3       	breq	.-28     	; 0xfda <_ZL8nextNotev+0x208>
     ff6:	c0 91 08 01 	lds	r28, 0x0108
     ffa:	d0 91 09 01 	lds	r29, 0x0109
     ffe:	81 53       	subi	r24, 0x31	; 49
    1000:	88 30       	cpi	r24, 0x08	; 8
    1002:	58 f4       	brcc	.+22     	; 0x101a <_ZL8nextNotev+0x248>
    1004:	c0 91 06 01 	lds	r28, 0x0106
    1008:	d0 91 07 01 	lds	r29, 0x0107
    100c:	0e 94 8f 05 	call	0xb1e	; 0xb1e <_ZL9getNumberv>
    1010:	bc 01       	movw	r22, r24
    1012:	ce 01       	movw	r24, r28
    1014:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
    1018:	eb 01       	movw	r28, r22
    101a:	8e 01       	movw	r16, r28
    101c:	0b c0       	rjmp	.+22     	; 0x1034 <_ZL8nextNotev+0x262>
    101e:	80 91 4b 01 	lds	r24, 0x014B
    1022:	90 91 4c 01 	lds	r25, 0x014C
    1026:	01 96       	adiw	r24, 0x01	; 1
    1028:	90 93 4c 01 	sts	0x014C, r25
    102c:	80 93 4b 01 	sts	0x014B, r24
    1030:	c0 0f       	add	r28, r16
    1032:	d1 1f       	adc	r29, r17
    1034:	16 95       	lsr	r17
    1036:	07 95       	ror	r16
    1038:	0e 94 6d 05 	call	0xada	; 0xada <_ZL16currentCharacterv>
    103c:	8e 32       	cpi	r24, 0x2E	; 46
    103e:	79 f3       	breq	.-34     	; 0x101e <_ZL8nextNotev+0x24c>
    1040:	80 91 4d 01 	lds	r24, 0x014D
    1044:	88 23       	and	r24, r24
    1046:	39 f0       	breq	.+14     	; 0x1056 <_ZL8nextNotev+0x284>
    1048:	ce 01       	movw	r24, r28
    104a:	96 95       	lsr	r25
    104c:	87 95       	ror	r24
    104e:	80 93 4e 01 	sts	0x014E, r24
    1052:	c8 1b       	sub	r28, r24
    1054:	d1 09       	sbc	r29, r1
    1056:	ee 20       	and	r14, r14
    1058:	11 f0       	breq	.+4      	; 0x105e <_ZL8nextNotev+0x28c>
    105a:	bb 24       	eor	r11, r11
    105c:	ba 94       	dec	r11
    105e:	8b 2d       	mov	r24, r11
    1060:	be 01       	movw	r22, r28
    1062:	40 91 0a 01 	lds	r20, 0x010A
    1066:	0e 94 93 06 	call	0xd26	; 0xd26 <_ZN15OrangutanBuzzer8playNoteEhjh>
    106a:	cd b7       	in	r28, 0x3d	; 61
    106c:	de b7       	in	r29, 0x3e	; 62
    106e:	ed e0       	ldi	r30, 0x0D	; 13
    1070:	0c 94 96 12 	jmp	0x252c	; 0x252c <__epilogue_restores__+0xa>

00001074 <__vector_13>:
    1074:	1f 92       	push	r1
    1076:	0f 92       	push	r0
    1078:	0f b6       	in	r0, 0x3f	; 63
    107a:	0f 92       	push	r0
    107c:	11 24       	eor	r1, r1
    107e:	2f 93       	push	r18
    1080:	3f 93       	push	r19
    1082:	4f 93       	push	r20
    1084:	5f 93       	push	r21
    1086:	6f 93       	push	r22
    1088:	7f 93       	push	r23
    108a:	8f 93       	push	r24
    108c:	9f 93       	push	r25
    108e:	af 93       	push	r26
    1090:	bf 93       	push	r27
    1092:	ef 93       	push	r30
    1094:	ff 93       	push	r31
    1096:	80 91 51 01 	lds	r24, 0x0151
    109a:	90 91 52 01 	lds	r25, 0x0152
    109e:	9c 01       	movw	r18, r24
    10a0:	21 50       	subi	r18, 0x01	; 1
    10a2:	30 40       	sbci	r19, 0x00	; 0
    10a4:	30 93 52 01 	sts	0x0152, r19
    10a8:	20 93 51 01 	sts	0x0151, r18
    10ac:	00 97       	sbiw	r24, 0x00	; 0
    10ae:	11 f5       	brne	.+68     	; 0x10f4 <__vector_13+0x80>
    10b0:	10 92 6f 00 	sts	0x006F, r1
    10b4:	78 94       	sei
    10b6:	80 91 81 00 	lds	r24, 0x0081
    10ba:	88 7f       	andi	r24, 0xF8	; 248
    10bc:	81 60       	ori	r24, 0x01	; 1
    10be:	80 93 81 00 	sts	0x0081, r24
    10c2:	80 e1       	ldi	r24, 0x10	; 16
    10c4:	97 e2       	ldi	r25, 0x27	; 39
    10c6:	90 93 89 00 	sts	0x0089, r25
    10ca:	80 93 88 00 	sts	0x0088, r24
    10ce:	10 92 8b 00 	sts	0x008B, r1
    10d2:	10 92 8a 00 	sts	0x008A, r1
    10d6:	81 e0       	ldi	r24, 0x01	; 1
    10d8:	80 93 02 01 	sts	0x0102, r24
    10dc:	80 91 4b 01 	lds	r24, 0x014B
    10e0:	90 91 4c 01 	lds	r25, 0x014C
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	31 f0       	breq	.+12     	; 0x10f4 <__vector_13+0x80>
    10e8:	80 91 50 01 	lds	r24, 0x0150
    10ec:	88 23       	and	r24, r24
    10ee:	11 f4       	brne	.+4      	; 0x10f4 <__vector_13+0x80>
    10f0:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <_ZL8nextNotev>
    10f4:	ff 91       	pop	r31
    10f6:	ef 91       	pop	r30
    10f8:	bf 91       	pop	r27
    10fa:	af 91       	pop	r26
    10fc:	9f 91       	pop	r25
    10fe:	8f 91       	pop	r24
    1100:	7f 91       	pop	r23
    1102:	6f 91       	pop	r22
    1104:	5f 91       	pop	r21
    1106:	4f 91       	pop	r20
    1108:	3f 91       	pop	r19
    110a:	2f 91       	pop	r18
    110c:	0f 90       	pop	r0
    110e:	0f be       	out	0x3f, r0	; 63
    1110:	0f 90       	pop	r0
    1112:	1f 90       	pop	r1
    1114:	18 95       	reti

00001116 <_ZN15OrangutanBuzzer9isPlayingEv>:
    1116:	80 91 02 01 	lds	r24, 0x0102
    111a:	88 23       	and	r24, r24
    111c:	51 f0       	breq	.+20     	; 0x1132 <_ZN15OrangutanBuzzer9isPlayingEv+0x1c>
    111e:	81 e0       	ldi	r24, 0x01	; 1
    1120:	20 91 4b 01 	lds	r18, 0x014B
    1124:	30 91 4c 01 	lds	r19, 0x014C
    1128:	21 15       	cp	r18, r1
    112a:	31 05       	cpc	r19, r1
    112c:	19 f4       	brne	.+6      	; 0x1134 <_ZN15OrangutanBuzzer9isPlayingEv+0x1e>
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	08 95       	ret
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	08 95       	ret

00001136 <is_playing>:
    1136:	0e 94 8b 08 	call	0x1116	; 0x1116 <_ZN15OrangutanBuzzer9isPlayingEv>
    113a:	08 95       	ret

0000113c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    113c:	10 92 6f 00 	sts	0x006F, r1
    1140:	90 93 4c 01 	sts	0x014C, r25
    1144:	80 93 4b 01 	sts	0x014B, r24
    1148:	81 e0       	ldi	r24, 0x01	; 1
    114a:	80 93 4f 01 	sts	0x014F, r24
    114e:	10 92 4e 01 	sts	0x014E, r1
    1152:	0e 94 e9 06 	call	0xdd2	; 0xdd2 <_ZL8nextNotev>
    1156:	08 95       	ret

00001158 <play_from_program_space>:
    1158:	0e 94 9e 08 	call	0x113c	; 0x113c <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    115c:	08 95       	ret

0000115e <delayMicroseconds.clone.0>:
    115e:	81 e0       	ldi	r24, 0x01	; 1
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	6f 93       	push	r22
    1164:	64 e0       	ldi	r22, 0x04	; 4
    1166:	6a 95       	dec	r22
    1168:	f1 f7       	brne	.-4      	; 0x1166 <delayMicroseconds.clone.0+0x8>
    116a:	6f 91       	pop	r22
    116c:	01 97       	sbiw	r24, 0x01	; 1
    116e:	c9 f7       	brne	.-14     	; 0x1162 <delayMicroseconds.clone.0+0x4>
    1170:	08 95       	ret

00001172 <_ZN12OrangutanLCD8busyWaitEv>:
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	1a b1       	in	r17, 0x0a	; 10
    117c:	57 98       	cbi	0x0a, 7	; 10
    117e:	5a 98       	cbi	0x0b, 2	; 11
    1180:	28 9a       	sbi	0x05, 0	; 5
    1182:	c0 e0       	ldi	r28, 0x00	; 0
    1184:	d0 e0       	ldi	r29, 0x00	; 0
    1186:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    118a:	5c 9a       	sbi	0x0b, 4	; 11
    118c:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    1190:	09 b1       	in	r16, 0x09	; 9
    1192:	5c 98       	cbi	0x0b, 4	; 11
    1194:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    1198:	5c 9a       	sbi	0x0b, 4	; 11
    119a:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    119e:	5c 98       	cbi	0x0b, 4	; 11
    11a0:	07 ff       	sbrs	r16, 7
    11a2:	11 c0       	rjmp	.+34     	; 0x11c6 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    11a4:	24 96       	adiw	r28, 0x04	; 4
    11a6:	9e 01       	movw	r18, r28
    11a8:	40 e0       	ldi	r20, 0x00	; 0
    11aa:	50 e0       	ldi	r21, 0x00	; 0
    11ac:	80 91 57 01 	lds	r24, 0x0157
    11b0:	90 91 58 01 	lds	r25, 0x0158
    11b4:	a0 91 59 01 	lds	r26, 0x0159
    11b8:	b0 91 5a 01 	lds	r27, 0x015A
    11bc:	28 17       	cp	r18, r24
    11be:	39 07       	cpc	r19, r25
    11c0:	4a 07       	cpc	r20, r26
    11c2:	5b 07       	cpc	r21, r27
    11c4:	00 f3       	brcs	.-64     	; 0x1186 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    11c6:	1a b9       	out	0x0a, r17	; 10
    11c8:	df 91       	pop	r29
    11ca:	cf 91       	pop	r28
    11cc:	1f 91       	pop	r17
    11ce:	0f 91       	pop	r16
    11d0:	08 95       	ret

000011d2 <_ZN12OrangutanLCD8sendDataEh>:
    11d2:	65 b1       	in	r22, 0x05	; 5
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	ac 01       	movw	r20, r24
    11d8:	41 70       	andi	r20, 0x01	; 1
    11da:	50 70       	andi	r21, 0x00	; 0
    11dc:	44 0f       	add	r20, r20
    11de:	55 1f       	adc	r21, r21
    11e0:	9c 01       	movw	r18, r24
    11e2:	26 70       	andi	r18, 0x06	; 6
    11e4:	30 70       	andi	r19, 0x00	; 0
    11e6:	53 e0       	ldi	r21, 0x03	; 3
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	5a 95       	dec	r21
    11ee:	e1 f7       	brne	.-8      	; 0x11e8 <_ZN12OrangutanLCD8sendDataEh+0x16>
    11f0:	24 2b       	or	r18, r20
    11f2:	6d 7c       	andi	r22, 0xCD	; 205
    11f4:	26 2b       	or	r18, r22
    11f6:	25 b9       	out	0x05, r18	; 5
    11f8:	2b b1       	in	r18, 0x0b	; 11
    11fa:	88 70       	andi	r24, 0x08	; 8
    11fc:	90 70       	andi	r25, 0x00	; 0
    11fe:	34 e0       	ldi	r19, 0x04	; 4
    1200:	88 0f       	add	r24, r24
    1202:	99 1f       	adc	r25, r25
    1204:	3a 95       	dec	r19
    1206:	e1 f7       	brne	.-8      	; 0x1200 <_ZN12OrangutanLCD8sendDataEh+0x2e>
    1208:	2f 77       	andi	r18, 0x7F	; 127
    120a:	28 2b       	or	r18, r24
    120c:	2b b9       	out	0x0b, r18	; 11
    120e:	5c 9a       	sbi	0x0b, 4	; 11
    1210:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    1214:	5c 98       	cbi	0x0b, 4	; 11
    1216:	0e 94 af 08 	call	0x115e	; 0x115e <delayMicroseconds.clone.0>
    121a:	08 95       	ret

0000121c <_ZN12OrangutanLCD4sendEhhh>:
    121c:	a2 e0       	ldi	r26, 0x02	; 2
    121e:	b0 e0       	ldi	r27, 0x00	; 0
    1220:	e4 e1       	ldi	r30, 0x14	; 20
    1222:	f9 e0       	ldi	r31, 0x09	; 9
    1224:	0c 94 80 12 	jmp	0x2500	; 0x2500 <__prologue_saves__+0x16>
    1228:	18 2f       	mov	r17, r24
    122a:	4a 83       	std	Y+2, r20	; 0x02
    122c:	69 83       	std	Y+1, r22	; 0x01
    122e:	0e 94 b9 09 	call	0x1372	; 0x1372 <_ZN12OrangutanLCD4initEv>
    1232:	0e 94 b9 08 	call	0x1172	; 0x1172 <_ZN12OrangutanLCD8busyWaitEv>
    1236:	f4 b0       	in	r15, 0x04	; 4
    1238:	05 b1       	in	r16, 0x05	; 5
    123a:	da b0       	in	r13, 0x0a	; 10
    123c:	eb b0       	in	r14, 0x0b	; 11
    123e:	28 98       	cbi	0x05, 0	; 5
    1240:	69 81       	ldd	r22, Y+1	; 0x01
    1242:	4a 81       	ldd	r20, Y+2	; 0x02
    1244:	66 23       	and	r22, r22
    1246:	11 f0       	breq	.+4      	; 0x124c <_ZN12OrangutanLCD4sendEhhh+0x30>
    1248:	5a 9a       	sbi	0x0b, 2	; 11
    124a:	01 c0       	rjmp	.+2      	; 0x124e <_ZN12OrangutanLCD4sendEhhh+0x32>
    124c:	5a 98       	cbi	0x0b, 2	; 11
    124e:	84 b1       	in	r24, 0x04	; 4
    1250:	82 63       	ori	r24, 0x32	; 50
    1252:	84 b9       	out	0x04, r24	; 4
    1254:	57 9a       	sbi	0x0a, 7	; 10
    1256:	41 30       	cpi	r20, 0x01	; 1
    1258:	29 f0       	breq	.+10     	; 0x1264 <_ZN12OrangutanLCD4sendEhhh+0x48>
    125a:	81 2f       	mov	r24, r17
    125c:	82 95       	swap	r24
    125e:	8f 70       	andi	r24, 0x0F	; 15
    1260:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN12OrangutanLCD8sendDataEh>
    1264:	81 2f       	mov	r24, r17
    1266:	8f 70       	andi	r24, 0x0F	; 15
    1268:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <_ZN12OrangutanLCD8sendDataEh>
    126c:	da b8       	out	0x0a, r13	; 10
    126e:	eb b8       	out	0x0b, r14	; 11
    1270:	f4 b8       	out	0x04, r15	; 4
    1272:	05 b9       	out	0x05, r16	; 5
    1274:	22 96       	adiw	r28, 0x02	; 2
    1276:	e7 e0       	ldi	r30, 0x07	; 7
    1278:	0c 94 9c 12 	jmp	0x2538	; 0x2538 <__epilogue_restores__+0x16>

0000127c <_ZN12OrangutanLCD8send_cmdEh>:
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	42 e0       	ldi	r20, 0x02	; 2
    1280:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN12OrangutanLCD4sendEhhh>
    1284:	08 95       	ret

00001286 <_ZN12OrangutanLCD9send_dataEh>:
    1286:	61 e0       	ldi	r22, 0x01	; 1
    1288:	42 e0       	ldi	r20, 0x02	; 2
    128a:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN12OrangutanLCD4sendEhhh>
    128e:	08 95       	ret

00001290 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    1290:	ef 92       	push	r14
    1292:	ff 92       	push	r15
    1294:	1f 93       	push	r17
    1296:	df 93       	push	r29
    1298:	cf 93       	push	r28
    129a:	0f 92       	push	r0
    129c:	cd b7       	in	r28, 0x3d	; 61
    129e:	de b7       	in	r29, 0x3e	; 62
    12a0:	66 0f       	add	r22, r22
    12a2:	66 0f       	add	r22, r22
    12a4:	66 0f       	add	r22, r22
    12a6:	48 2f       	mov	r20, r24
    12a8:	59 2f       	mov	r21, r25
    12aa:	7a 01       	movw	r14, r20
    12ac:	10 e0       	ldi	r17, 0x00	; 0
    12ae:	81 2f       	mov	r24, r17
    12b0:	86 0f       	add	r24, r22
    12b2:	80 64       	ori	r24, 0x40	; 64
    12b4:	69 83       	std	Y+1, r22	; 0x01
    12b6:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    12ba:	f7 01       	movw	r30, r14
    12bc:	84 91       	lpm	r24, Z
    12be:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    12c2:	1f 5f       	subi	r17, 0xFF	; 255
    12c4:	08 94       	sec
    12c6:	e1 1c       	adc	r14, r1
    12c8:	f1 1c       	adc	r15, r1
    12ca:	69 81       	ldd	r22, Y+1	; 0x01
    12cc:	18 30       	cpi	r17, 0x08	; 8
    12ce:	79 f7       	brne	.-34     	; 0x12ae <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    12d0:	0f 90       	pop	r0
    12d2:	cf 91       	pop	r28
    12d4:	df 91       	pop	r29
    12d6:	1f 91       	pop	r17
    12d8:	ff 90       	pop	r15
    12da:	ef 90       	pop	r14
    12dc:	08 95       	ret

000012de <lcd_load_custom_character>:
    12de:	0e 94 48 09 	call	0x1290	; 0x1290 <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    12e2:	08 95       	ret

000012e4 <print_character>:
    12e4:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    12e8:	08 95       	ret

000012ea <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    12ea:	60 e0       	ldi	r22, 0x00	; 0
    12ec:	41 e0       	ldi	r20, 0x01	; 1
    12ee:	0e 94 0e 09 	call	0x121c	; 0x121c <_ZN12OrangutanLCD4sendEhhh>
    12f2:	08 95       	ret

000012f4 <_ZN12OrangutanLCD5init2Ev>:
    12f4:	80 e1       	ldi	r24, 0x10	; 16
    12f6:	97 e2       	ldi	r25, 0x27	; 39
    12f8:	a0 e0       	ldi	r26, 0x00	; 0
    12fa:	b0 e0       	ldi	r27, 0x00	; 0
    12fc:	80 93 57 01 	sts	0x0157, r24
    1300:	90 93 58 01 	sts	0x0158, r25
    1304:	a0 93 59 01 	sts	0x0159, r26
    1308:	b0 93 5a 01 	sts	0x015A, r27
    130c:	52 9a       	sbi	0x0a, 2	; 10
    130e:	20 9a       	sbi	0x04, 0	; 4
    1310:	54 9a       	sbi	0x0a, 4	; 10
    1312:	8e e1       	ldi	r24, 0x1E	; 30
    1314:	90 e0       	ldi	r25, 0x00	; 0
    1316:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    131a:	83 e0       	ldi	r24, 0x03	; 3
    131c:	0e 94 75 09 	call	0x12ea	; 0x12ea <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1320:	86 e0       	ldi	r24, 0x06	; 6
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    1328:	83 e0       	ldi	r24, 0x03	; 3
    132a:	0e 94 75 09 	call	0x12ea	; 0x12ea <_ZN12OrangutanLCD13send_4bit_cmdEh>
    132e:	82 e0       	ldi	r24, 0x02	; 2
    1330:	90 e0       	ldi	r25, 0x00	; 0
    1332:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    1336:	83 e0       	ldi	r24, 0x03	; 3
    1338:	0e 94 75 09 	call	0x12ea	; 0x12ea <_ZN12OrangutanLCD13send_4bit_cmdEh>
    133c:	82 e0       	ldi	r24, 0x02	; 2
    133e:	90 e0       	ldi	r25, 0x00	; 0
    1340:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    1344:	82 e0       	ldi	r24, 0x02	; 2
    1346:	0e 94 75 09 	call	0x12ea	; 0x12ea <_ZN12OrangutanLCD13send_4bit_cmdEh>
    134a:	82 e0       	ldi	r24, 0x02	; 2
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    1352:	88 e2       	ldi	r24, 0x28	; 40
    1354:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    1358:	88 e0       	ldi	r24, 0x08	; 8
    135a:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    135e:	81 e0       	ldi	r24, 0x01	; 1
    1360:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    1364:	86 e0       	ldi	r24, 0x06	; 6
    1366:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    136a:	8c e0       	ldi	r24, 0x0C	; 12
    136c:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    1370:	08 95       	ret

00001372 <_ZN12OrangutanLCD4initEv>:
    1372:	80 91 5b 01 	lds	r24, 0x015B
    1376:	88 23       	and	r24, r24
    1378:	29 f4       	brne	.+10     	; 0x1384 <_ZN12OrangutanLCD4initEv+0x12>
    137a:	81 e0       	ldi	r24, 0x01	; 1
    137c:	80 93 5b 01 	sts	0x015B, r24
    1380:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <_ZN12OrangutanLCD5init2Ev>
    1384:	08 95       	ret

00001386 <_ZN12OrangutanLCD5clearEv>:
    1386:	81 e0       	ldi	r24, 0x01	; 1
    1388:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    138c:	80 91 53 01 	lds	r24, 0x0153
    1390:	90 91 54 01 	lds	r25, 0x0154
    1394:	00 97       	sbiw	r24, 0x00	; 0
    1396:	11 f1       	breq	.+68     	; 0x13dc <_ZN12OrangutanLCD5clearEv+0x56>
    1398:	a0 e0       	ldi	r26, 0x00	; 0
    139a:	b0 e2       	ldi	r27, 0x20	; 32
    139c:	08 c0       	rjmp	.+16     	; 0x13ae <_ZN12OrangutanLCD5clearEv+0x28>
    139e:	e0 91 53 01 	lds	r30, 0x0153
    13a2:	f0 91 54 01 	lds	r31, 0x0154
    13a6:	e2 0f       	add	r30, r18
    13a8:	f3 1f       	adc	r31, r19
    13aa:	b0 83       	st	Z, r27
    13ac:	af 5f       	subi	r26, 0xFF	; 255
    13ae:	2a 2f       	mov	r18, r26
    13b0:	30 e0       	ldi	r19, 0x00	; 0
    13b2:	80 91 24 01 	lds	r24, 0x0124
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	01 97       	sbiw	r24, 0x01	; 1
    13ba:	60 91 25 01 	lds	r22, 0x0125
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	86 9f       	mul	r24, r22
    13c2:	a0 01       	movw	r20, r0
    13c4:	87 9f       	mul	r24, r23
    13c6:	50 0d       	add	r21, r0
    13c8:	96 9f       	mul	r25, r22
    13ca:	50 0d       	add	r21, r0
    13cc:	11 24       	eor	r1, r1
    13ce:	24 17       	cp	r18, r20
    13d0:	35 07       	cpc	r19, r21
    13d2:	2c f3       	brlt	.-54     	; 0x139e <_ZN12OrangutanLCD5clearEv+0x18>
    13d4:	10 92 56 01 	sts	0x0156, r1
    13d8:	10 92 55 01 	sts	0x0155, r1
    13dc:	08 95       	ret

000013de <clear>:
    13de:	0e 94 c3 09 	call	0x1386	; 0x1386 <_ZN12OrangutanLCD5clearEv>
    13e2:	08 95       	ret

000013e4 <_ZN12OrangutanLCD5printEPKc>:
    13e4:	ef 92       	push	r14
    13e6:	ff 92       	push	r15
    13e8:	cf 93       	push	r28
    13ea:	df 93       	push	r29
    13ec:	e8 2e       	mov	r14, r24
    13ee:	e7 01       	movw	r28, r14
    13f0:	7e 01       	movw	r14, r28
    13f2:	f9 2e       	mov	r15, r25
    13f4:	e7 01       	movw	r28, r14
    13f6:	02 c0       	rjmp	.+4      	; 0x13fc <_ZN12OrangutanLCD5printEPKc+0x18>
    13f8:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    13fc:	89 91       	ld	r24, Y+
    13fe:	88 23       	and	r24, r24
    1400:	d9 f7       	brne	.-10     	; 0x13f8 <_ZN12OrangutanLCD5printEPKc+0x14>
    1402:	df 91       	pop	r29
    1404:	cf 91       	pop	r28
    1406:	ff 90       	pop	r15
    1408:	ef 90       	pop	r14
    140a:	08 95       	ret

0000140c <print>:
    140c:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <_ZN12OrangutanLCD5printEPKc>
    1410:	08 95       	ret

00001412 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    1412:	cf 93       	push	r28
    1414:	df 93       	push	r29
    1416:	ec 01       	movw	r28, r24
    1418:	03 c0       	rjmp	.+6      	; 0x1420 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    141a:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    141e:	21 96       	adiw	r28, 0x01	; 1
    1420:	fe 01       	movw	r30, r28
    1422:	84 91       	lpm	r24, Z
    1424:	88 23       	and	r24, r24
    1426:	c9 f7       	brne	.-14     	; 0x141a <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    1428:	df 91       	pop	r29
    142a:	cf 91       	pop	r28
    142c:	08 95       	ret

0000142e <print_from_program_space>:
    142e:	0e 94 09 0a 	call	0x1412	; 0x1412 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    1432:	08 95       	ret

00001434 <_ZN12OrangutanLCD5printEm>:
    1434:	aa e0       	ldi	r26, 0x0A	; 10
    1436:	b0 e0       	ldi	r27, 0x00	; 0
    1438:	e0 e2       	ldi	r30, 0x20	; 32
    143a:	fa e0       	ldi	r31, 0x0A	; 10
    143c:	0c 94 7d 12 	jmp	0x24fa	; 0x24fa <__prologue_saves__+0x10>
    1440:	9b 01       	movw	r18, r22
    1442:	ac 01       	movw	r20, r24
    1444:	1a e0       	ldi	r17, 0x0A	; 10
    1446:	ea e0       	ldi	r30, 0x0A	; 10
    1448:	ce 2e       	mov	r12, r30
    144a:	d1 2c       	mov	r13, r1
    144c:	e1 2c       	mov	r14, r1
    144e:	f1 2c       	mov	r15, r1
    1450:	5e 01       	movw	r10, r28
    1452:	08 94       	sec
    1454:	a1 1c       	adc	r10, r1
    1456:	b1 1c       	adc	r11, r1
    1458:	02 2f       	mov	r16, r18
    145a:	ca 01       	movw	r24, r20
    145c:	b9 01       	movw	r22, r18
    145e:	a7 01       	movw	r20, r14
    1460:	96 01       	movw	r18, r12
    1462:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
    1466:	11 50       	subi	r17, 0x01	; 1
    1468:	f5 01       	movw	r30, r10
    146a:	e1 0f       	add	r30, r17
    146c:	f1 1d       	adc	r31, r1
    146e:	00 5d       	subi	r16, 0xD0	; 208
    1470:	92 2f       	mov	r25, r18
    1472:	99 0f       	add	r25, r25
    1474:	89 2f       	mov	r24, r25
    1476:	88 0f       	add	r24, r24
    1478:	88 0f       	add	r24, r24
    147a:	89 0f       	add	r24, r25
    147c:	08 1b       	sub	r16, r24
    147e:	00 83       	st	Z, r16
    1480:	21 15       	cp	r18, r1
    1482:	31 05       	cpc	r19, r1
    1484:	41 05       	cpc	r20, r1
    1486:	51 05       	cpc	r21, r1
    1488:	39 f7       	brne	.-50     	; 0x1458 <_ZN12OrangutanLCD5printEm+0x24>
    148a:	08 c0       	rjmp	.+16     	; 0x149c <_ZN12OrangutanLCD5printEm+0x68>
    148c:	f6 01       	movw	r30, r12
    148e:	e1 0f       	add	r30, r17
    1490:	f1 1d       	adc	r31, r1
    1492:	80 81       	ld	r24, Z
    1494:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    1498:	1f 5f       	subi	r17, 0xFF	; 255
    149a:	04 c0       	rjmp	.+8      	; 0x14a4 <_ZN12OrangutanLCD5printEm+0x70>
    149c:	6e 01       	movw	r12, r28
    149e:	08 94       	sec
    14a0:	c1 1c       	adc	r12, r1
    14a2:	d1 1c       	adc	r13, r1
    14a4:	1a 30       	cpi	r17, 0x0A	; 10
    14a6:	90 f3       	brcs	.-28     	; 0x148c <_ZN12OrangutanLCD5printEm+0x58>
    14a8:	2a 96       	adiw	r28, 0x0a	; 10
    14aa:	ea e0       	ldi	r30, 0x0A	; 10
    14ac:	0c 94 99 12 	jmp	0x2532	; 0x2532 <__epilogue_restores__+0x10>

000014b0 <_ZN12OrangutanLCD5printEl>:
    14b0:	ef 92       	push	r14
    14b2:	ff 92       	push	r15
    14b4:	0f 93       	push	r16
    14b6:	1f 93       	push	r17
    14b8:	7b 01       	movw	r14, r22
    14ba:	8c 01       	movw	r16, r24
    14bc:	97 ff       	sbrs	r25, 7
    14be:	0b c0       	rjmp	.+22     	; 0x14d6 <_ZN12OrangutanLCD5printEl+0x26>
    14c0:	10 95       	com	r17
    14c2:	00 95       	com	r16
    14c4:	f0 94       	com	r15
    14c6:	e0 94       	com	r14
    14c8:	e1 1c       	adc	r14, r1
    14ca:	f1 1c       	adc	r15, r1
    14cc:	01 1d       	adc	r16, r1
    14ce:	11 1d       	adc	r17, r1
    14d0:	8d e2       	ldi	r24, 0x2D	; 45
    14d2:	0e 94 43 09 	call	0x1286	; 0x1286 <_ZN12OrangutanLCD9send_dataEh>
    14d6:	c8 01       	movw	r24, r16
    14d8:	b7 01       	movw	r22, r14
    14da:	0e 94 1a 0a 	call	0x1434	; 0x1434 <_ZN12OrangutanLCD5printEm>
    14de:	1f 91       	pop	r17
    14e0:	0f 91       	pop	r16
    14e2:	ff 90       	pop	r15
    14e4:	ef 90       	pop	r14
    14e6:	08 95       	ret

000014e8 <print_long>:
    14e8:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <_ZN12OrangutanLCD5printEl>
    14ec:	08 95       	ret

000014ee <_ZN12OrangutanLCD6gotoXYEhh>:
    14ee:	a5 e0       	ldi	r26, 0x05	; 5
    14f0:	b0 e0       	ldi	r27, 0x00	; 0
    14f2:	ed e7       	ldi	r30, 0x7D	; 125
    14f4:	fa e0       	ldi	r31, 0x0A	; 10
    14f6:	0c 94 84 12 	jmp	0x2508	; 0x2508 <__prologue_saves__+0x1e>
    14fa:	18 2f       	mov	r17, r24
    14fc:	80 e8       	ldi	r24, 0x80	; 128
    14fe:	89 83       	std	Y+1, r24	; 0x01
    1500:	80 ec       	ldi	r24, 0xC0	; 192
    1502:	8a 83       	std	Y+2, r24	; 0x02
    1504:	84 e9       	ldi	r24, 0x94	; 148
    1506:	8b 83       	std	Y+3, r24	; 0x03
    1508:	84 ed       	ldi	r24, 0xD4	; 212
    150a:	8c 83       	std	Y+4, r24	; 0x04
    150c:	fe 01       	movw	r30, r28
    150e:	e6 0f       	add	r30, r22
    1510:	f1 1d       	adc	r31, r1
    1512:	81 81       	ldd	r24, Z+1	; 0x01
    1514:	81 0f       	add	r24, r17
    1516:	6d 83       	std	Y+5, r22	; 0x05
    1518:	0e 94 3e 09 	call	0x127c	; 0x127c <_ZN12OrangutanLCD8send_cmdEh>
    151c:	10 93 56 01 	sts	0x0156, r17
    1520:	6d 81       	ldd	r22, Y+5	; 0x05
    1522:	60 93 55 01 	sts	0x0155, r22
    1526:	25 96       	adiw	r28, 0x05	; 5
    1528:	e3 e0       	ldi	r30, 0x03	; 3
    152a:	0c 94 a0 12 	jmp	0x2540	; 0x2540 <__epilogue_restores__+0x1e>

0000152e <lcd_goto_xy>:
    152e:	0e 94 77 0a 	call	0x14ee	; 0x14ee <_ZN12OrangutanLCD6gotoXYEhh>
    1532:	08 95       	ret

00001534 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1534:	fc 01       	movw	r30, r24
    1536:	11 82       	std	Z+1, r1	; 0x01
    1538:	10 82       	st	Z, r1
    153a:	13 82       	std	Z+3, r1	; 0x03
    153c:	12 82       	std	Z+2, r1	; 0x02
    153e:	15 82       	std	Z+5, r1	; 0x05
    1540:	14 82       	std	Z+4, r1	; 0x04
    1542:	16 82       	std	Z+6, r1	; 0x06
    1544:	68 30       	cpi	r22, 0x08	; 8
    1546:	68 f4       	brcc	.+26     	; 0x1562 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1548:	89 e2       	ldi	r24, 0x29	; 41
    154a:	90 e0       	ldi	r25, 0x00	; 0
    154c:	91 83       	std	Z+1, r25	; 0x01
    154e:	80 83       	st	Z, r24
    1550:	8b e2       	ldi	r24, 0x2B	; 43
    1552:	90 e0       	ldi	r25, 0x00	; 0
    1554:	93 83       	std	Z+3, r25	; 0x03
    1556:	82 83       	std	Z+2, r24	; 0x02
    1558:	8a e2       	ldi	r24, 0x2A	; 42
    155a:	90 e0       	ldi	r25, 0x00	; 0
    155c:	95 83       	std	Z+5, r25	; 0x05
    155e:	84 83       	std	Z+4, r24	; 0x04
    1560:	11 c0       	rjmp	.+34     	; 0x1584 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    1562:	6e 30       	cpi	r22, 0x0E	; 14
    1564:	c0 f4       	brcc	.+48     	; 0x1596 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    1566:	83 e2       	ldi	r24, 0x23	; 35
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	91 83       	std	Z+1, r25	; 0x01
    156c:	80 83       	st	Z, r24
    156e:	85 e2       	ldi	r24, 0x25	; 37
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	93 83       	std	Z+3, r25	; 0x03
    1574:	82 83       	std	Z+2, r24	; 0x02
    1576:	84 e2       	ldi	r24, 0x24	; 36
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	95 83       	std	Z+5, r25	; 0x05
    157c:	84 83       	std	Z+4, r24	; 0x04
    157e:	70 e0       	ldi	r23, 0x00	; 0
    1580:	68 50       	subi	r22, 0x08	; 8
    1582:	70 40       	sbci	r23, 0x00	; 0
    1584:	81 e0       	ldi	r24, 0x01	; 1
    1586:	90 e0       	ldi	r25, 0x00	; 0
    1588:	02 c0       	rjmp	.+4      	; 0x158e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    158a:	88 0f       	add	r24, r24
    158c:	99 1f       	adc	r25, r25
    158e:	6a 95       	dec	r22
    1590:	e2 f7       	brpl	.-8      	; 0x158a <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    1592:	86 83       	std	Z+6, r24	; 0x06
    1594:	08 95       	ret
    1596:	65 31       	cpi	r22, 0x15	; 21
    1598:	b8 f4       	brcc	.+46     	; 0x15c8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    159a:	86 e2       	ldi	r24, 0x26	; 38
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	91 83       	std	Z+1, r25	; 0x01
    15a0:	80 83       	st	Z, r24
    15a2:	88 e2       	ldi	r24, 0x28	; 40
    15a4:	90 e0       	ldi	r25, 0x00	; 0
    15a6:	93 83       	std	Z+3, r25	; 0x03
    15a8:	82 83       	std	Z+2, r24	; 0x02
    15aa:	87 e2       	ldi	r24, 0x27	; 39
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	95 83       	std	Z+5, r25	; 0x05
    15b0:	84 83       	std	Z+4, r24	; 0x04
    15b2:	70 e0       	ldi	r23, 0x00	; 0
    15b4:	6e 50       	subi	r22, 0x0E	; 14
    15b6:	70 40       	sbci	r23, 0x00	; 0
    15b8:	81 e0       	ldi	r24, 0x01	; 1
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	02 c0       	rjmp	.+4      	; 0x15c2 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    15be:	88 0f       	add	r24, r24
    15c0:	99 1f       	adc	r25, r25
    15c2:	6a 95       	dec	r22
    15c4:	e2 f7       	brpl	.-8      	; 0x15be <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    15c6:	86 83       	std	Z+6, r24	; 0x06
    15c8:	08 95       	ret

000015ca <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    15ca:	fc 01       	movw	r30, r24
    15cc:	a4 81       	ldd	r26, Z+4	; 0x04
    15ce:	b5 81       	ldd	r27, Z+5	; 0x05
    15d0:	86 81       	ldd	r24, Z+6	; 0x06
    15d2:	66 23       	and	r22, r22
    15d4:	21 f0       	breq	.+8      	; 0x15de <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    15d6:	9c 91       	ld	r25, X
    15d8:	98 2b       	or	r25, r24
    15da:	9c 93       	st	X, r25
    15dc:	08 95       	ret
    15de:	9c 91       	ld	r25, X
    15e0:	80 95       	com	r24
    15e2:	89 23       	and	r24, r25
    15e4:	8c 93       	st	X, r24
    15e6:	08 95       	ret

000015e8 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    15e8:	fc 01       	movw	r30, r24
    15ea:	6f 3f       	cpi	r22, 0xFF	; 255
    15ec:	31 f4       	brne	.+12     	; 0x15fa <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    15ee:	a2 81       	ldd	r26, Z+2	; 0x02
    15f0:	b3 81       	ldd	r27, Z+3	; 0x03
    15f2:	8c 91       	ld	r24, X
    15f4:	96 81       	ldd	r25, Z+6	; 0x06
    15f6:	89 27       	eor	r24, r25
    15f8:	0c c0       	rjmp	.+24     	; 0x1612 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    15fa:	a2 81       	ldd	r26, Z+2	; 0x02
    15fc:	b3 81       	ldd	r27, Z+3	; 0x03
    15fe:	86 81       	ldd	r24, Z+6	; 0x06
    1600:	66 23       	and	r22, r22
    1602:	21 f0       	breq	.+8      	; 0x160c <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    1604:	9c 91       	ld	r25, X
    1606:	98 2b       	or	r25, r24
    1608:	9c 93       	st	X, r25
    160a:	08 95       	ret
    160c:	9c 91       	ld	r25, X
    160e:	80 95       	com	r24
    1610:	89 23       	and	r24, r25
    1612:	8c 93       	st	X, r24
    1614:	08 95       	ret

00001616 <_ZN16OrangutanDigital9setOutputEhh>:
    1616:	a7 e0       	ldi	r26, 0x07	; 7
    1618:	b0 e0       	ldi	r27, 0x00	; 0
    161a:	e1 e1       	ldi	r30, 0x11	; 17
    161c:	fb e0       	ldi	r31, 0x0B	; 11
    161e:	0c 94 82 12 	jmp	0x2504	; 0x2504 <__prologue_saves__+0x1a>
    1622:	28 2f       	mov	r18, r24
    1624:	f6 2e       	mov	r15, r22
    1626:	8e 01       	movw	r16, r28
    1628:	0f 5f       	subi	r16, 0xFF	; 255
    162a:	1f 4f       	sbci	r17, 0xFF	; 255
    162c:	c8 01       	movw	r24, r16
    162e:	62 2f       	mov	r22, r18
    1630:	0e 94 9a 0a 	call	0x1534	; 0x1534 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1634:	c8 01       	movw	r24, r16
    1636:	6f 2d       	mov	r22, r15
    1638:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    163c:	c8 01       	movw	r24, r16
    163e:	61 e0       	ldi	r22, 0x01	; 1
    1640:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    1644:	27 96       	adiw	r28, 0x07	; 7
    1646:	e5 e0       	ldi	r30, 0x05	; 5
    1648:	0c 94 9e 12 	jmp	0x253c	; 0x253c <__epilogue_restores__+0x1a>

0000164c <_ZN15OrangutanMotors5init2Ev>:
    164c:	e0 eb       	ldi	r30, 0xB0	; 176
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	83 ef       	ldi	r24, 0xF3	; 243
    1652:	80 83       	st	Z, r24
    1654:	80 81       	ld	r24, Z
    1656:	84 bd       	out	0x24, r24	; 36
    1658:	e1 eb       	ldi	r30, 0xB1	; 177
    165a:	f0 e0       	ldi	r31, 0x00	; 0
    165c:	82 e0       	ldi	r24, 0x02	; 2
    165e:	80 83       	st	Z, r24
    1660:	80 81       	ld	r24, Z
    1662:	85 bd       	out	0x25, r24	; 37
    1664:	e4 eb       	ldi	r30, 0xB4	; 180
    1666:	f0 e0       	ldi	r31, 0x00	; 0
    1668:	10 82       	st	Z, r1
    166a:	80 81       	ld	r24, Z
    166c:	e3 eb       	ldi	r30, 0xB3	; 179
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	80 83       	st	Z, r24
    1672:	80 81       	ld	r24, Z
    1674:	88 bd       	out	0x28, r24	; 40
    1676:	88 b5       	in	r24, 0x28	; 40
    1678:	87 bd       	out	0x27, r24	; 39
    167a:	86 e0       	ldi	r24, 0x06	; 6
    167c:	60 e0       	ldi	r22, 0x00	; 0
    167e:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN16OrangutanDigital9setOutputEhh>
    1682:	85 e0       	ldi	r24, 0x05	; 5
    1684:	60 e0       	ldi	r22, 0x00	; 0
    1686:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN16OrangutanDigital9setOutputEhh>
    168a:	8b e0       	ldi	r24, 0x0B	; 11
    168c:	60 e0       	ldi	r22, 0x00	; 0
    168e:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN16OrangutanDigital9setOutputEhh>
    1692:	83 e0       	ldi	r24, 0x03	; 3
    1694:	60 e0       	ldi	r22, 0x00	; 0
    1696:	0e 94 0b 0b 	call	0x1616	; 0x1616 <_ZN16OrangutanDigital9setOutputEhh>
    169a:	08 95       	ret

0000169c <_ZN15OrangutanMotors4initEv>:
    169c:	80 91 5c 01 	lds	r24, 0x015C
    16a0:	88 23       	and	r24, r24
    16a2:	29 f4       	brne	.+10     	; 0x16ae <_ZN15OrangutanMotors4initEv+0x12>
    16a4:	81 e0       	ldi	r24, 0x01	; 1
    16a6:	80 93 5c 01 	sts	0x015C, r24
    16aa:	0e 94 26 0b 	call	0x164c	; 0x164c <_ZN15OrangutanMotors5init2Ev>
    16ae:	08 95       	ret

000016b0 <_ZN15OrangutanMotors10setM1SpeedEi>:
    16b0:	cf 93       	push	r28
    16b2:	df 93       	push	r29
    16b4:	ec 01       	movw	r28, r24
    16b6:	0e 94 4e 0b 	call	0x169c	; 0x169c <_ZN15OrangutanMotors4initEv>
    16ba:	d7 ff       	sbrs	r29, 7
    16bc:	05 c0       	rjmp	.+10     	; 0x16c8 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    16be:	d0 95       	com	r29
    16c0:	c1 95       	neg	r28
    16c2:	df 4f       	sbci	r29, 0xFF	; 255
    16c4:	81 e0       	ldi	r24, 0x01	; 1
    16c6:	01 c0       	rjmp	.+2      	; 0x16ca <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    16c8:	80 e0       	ldi	r24, 0x00	; 0
    16ca:	cf 3f       	cpi	r28, 0xFF	; 255
    16cc:	d1 05       	cpc	r29, r1
    16ce:	19 f0       	breq	.+6      	; 0x16d6 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16d0:	14 f0       	brlt	.+4      	; 0x16d6 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    16d2:	cf ef       	ldi	r28, 0xFF	; 255
    16d4:	d0 e0       	ldi	r29, 0x00	; 0
    16d6:	88 23       	and	r24, r24
    16d8:	19 f0       	breq	.+6      	; 0x16e0 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    16da:	18 bc       	out	0x28, r1	; 40
    16dc:	c7 bd       	out	0x27, r28	; 39
    16de:	02 c0       	rjmp	.+4      	; 0x16e4 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    16e0:	c8 bd       	out	0x28, r28	; 40
    16e2:	17 bc       	out	0x27, r1	; 39
    16e4:	df 91       	pop	r29
    16e6:	cf 91       	pop	r28
    16e8:	08 95       	ret

000016ea <_ZN15OrangutanMotors10setM2SpeedEi>:
    16ea:	cf 93       	push	r28
    16ec:	df 93       	push	r29
    16ee:	ec 01       	movw	r28, r24
    16f0:	0e 94 4e 0b 	call	0x169c	; 0x169c <_ZN15OrangutanMotors4initEv>
    16f4:	d7 ff       	sbrs	r29, 7
    16f6:	05 c0       	rjmp	.+10     	; 0x1702 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    16f8:	d0 95       	com	r29
    16fa:	c1 95       	neg	r28
    16fc:	df 4f       	sbci	r29, 0xFF	; 255
    16fe:	81 e0       	ldi	r24, 0x01	; 1
    1700:	01 c0       	rjmp	.+2      	; 0x1704 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	cf 3f       	cpi	r28, 0xFF	; 255
    1706:	d1 05       	cpc	r29, r1
    1708:	19 f0       	breq	.+6      	; 0x1710 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    170a:	14 f0       	brlt	.+4      	; 0x1710 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    170c:	cf ef       	ldi	r28, 0xFF	; 255
    170e:	d0 e0       	ldi	r29, 0x00	; 0
    1710:	88 23       	and	r24, r24
    1712:	29 f0       	breq	.+10     	; 0x171e <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1714:	10 92 b4 00 	sts	0x00B4, r1
    1718:	c0 93 b3 00 	sts	0x00B3, r28
    171c:	04 c0       	rjmp	.+8      	; 0x1726 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    171e:	c0 93 b4 00 	sts	0x00B4, r28
    1722:	10 92 b3 00 	sts	0x00B3, r1
    1726:	df 91       	pop	r29
    1728:	cf 91       	pop	r28
    172a:	08 95       	ret

0000172c <_ZN15OrangutanMotors9setSpeedsEii>:
    172c:	cf 93       	push	r28
    172e:	df 93       	push	r29
    1730:	eb 01       	movw	r28, r22
    1732:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <_ZN15OrangutanMotors10setM1SpeedEi>
    1736:	ce 01       	movw	r24, r28
    1738:	0e 94 75 0b 	call	0x16ea	; 0x16ea <_ZN15OrangutanMotors10setM2SpeedEi>
    173c:	df 91       	pop	r29
    173e:	cf 91       	pop	r28
    1740:	08 95       	ret

00001742 <set_motors>:
    1742:	0e 94 96 0b 	call	0x172c	; 0x172c <_ZN15OrangutanMotors9setSpeedsEii>
    1746:	08 95       	ret

00001748 <_ZN20OrangutanPushbuttons5init2Ev>:
    1748:	84 b1       	in	r24, 0x04	; 4
    174a:	8d 7c       	andi	r24, 0xCD	; 205
    174c:	84 b9       	out	0x04, r24	; 4
    174e:	85 b1       	in	r24, 0x05	; 5
    1750:	82 63       	ori	r24, 0x32	; 50
    1752:	85 b9       	out	0x05, r24	; 5
    1754:	85 e0       	ldi	r24, 0x05	; 5
    1756:	90 e0       	ldi	r25, 0x00	; 0
    1758:	6f 93       	push	r22
    175a:	64 e0       	ldi	r22, 0x04	; 4
    175c:	6a 95       	dec	r22
    175e:	f1 f7       	brne	.-4      	; 0x175c <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1760:	6f 91       	pop	r22
    1762:	01 97       	sbiw	r24, 0x01	; 1
    1764:	c9 f7       	brne	.-14     	; 0x1758 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1766:	08 95       	ret

00001768 <_ZN20OrangutanPushbuttons4initEv>:
    1768:	80 91 5d 01 	lds	r24, 0x015D
    176c:	88 23       	and	r24, r24
    176e:	29 f4       	brne	.+10     	; 0x177a <_ZN20OrangutanPushbuttons4initEv+0x12>
    1770:	81 e0       	ldi	r24, 0x01	; 1
    1772:	80 93 5d 01 	sts	0x015D, r24
    1776:	0e 94 a4 0b 	call	0x1748	; 0x1748 <_ZN20OrangutanPushbuttons5init2Ev>
    177a:	08 95       	ret

0000177c <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    177c:	1f 93       	push	r17
    177e:	18 2f       	mov	r17, r24
    1780:	0e 94 b4 0b 	call	0x1768	; 0x1768 <_ZN20OrangutanPushbuttons4initEv>
    1784:	83 b1       	in	r24, 0x03	; 3
    1786:	81 23       	and	r24, r17
    1788:	e9 f3       	breq	.-6      	; 0x1784 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    178a:	8a e0       	ldi	r24, 0x0A	; 10
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 37 0c 	call	0x186e	; 0x186e <delay_ms>
    1792:	83 b1       	in	r24, 0x03	; 3
    1794:	81 23       	and	r24, r17
    1796:	b1 f3       	breq	.-20     	; 0x1784 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1798:	83 b1       	in	r24, 0x03	; 3
    179a:	81 23       	and	r24, r17
    179c:	1f 91       	pop	r17
    179e:	08 95       	ret

000017a0 <wait_for_button_release>:
    17a0:	0e 94 be 0b 	call	0x177c	; 0x177c <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    17a4:	08 95       	ret

000017a6 <_ZN20OrangutanPushbuttons9isPressedEh>:
    17a6:	a1 e0       	ldi	r26, 0x01	; 1
    17a8:	b0 e0       	ldi	r27, 0x00	; 0
    17aa:	e9 ed       	ldi	r30, 0xD9	; 217
    17ac:	fb e0       	ldi	r31, 0x0B	; 11
    17ae:	0c 94 85 12 	jmp	0x250a	; 0x250a <__prologue_saves__+0x20>
    17b2:	89 83       	std	Y+1, r24	; 0x01
    17b4:	0e 94 b4 0b 	call	0x1768	; 0x1768 <_ZN20OrangutanPushbuttons4initEv>
    17b8:	93 b1       	in	r25, 0x03	; 3
    17ba:	90 95       	com	r25
    17bc:	89 81       	ldd	r24, Y+1	; 0x01
    17be:	89 23       	and	r24, r25
    17c0:	21 96       	adiw	r28, 0x01	; 1
    17c2:	e2 e0       	ldi	r30, 0x02	; 2
    17c4:	0c 94 a1 12 	jmp	0x2542	; 0x2542 <__epilogue_restores__+0x20>

000017c8 <button_is_pressed>:
    17c8:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <_ZN20OrangutanPushbuttons9isPressedEh>
    17cc:	08 95       	ret

000017ce <_ZN13OrangutanTime17delayMicrosecondsEj>:
    17ce:	6f 93       	push	r22
    17d0:	64 e0       	ldi	r22, 0x04	; 4
    17d2:	6a 95       	dec	r22
    17d4:	f1 f7       	brne	.-4      	; 0x17d2 <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    17d6:	6f 91       	pop	r22
    17d8:	01 97       	sbiw	r24, 0x01	; 1
    17da:	c9 f7       	brne	.-14     	; 0x17ce <_ZN13OrangutanTime17delayMicrosecondsEj>
    17dc:	08 95       	ret

000017de <__vector_9>:
    17de:	2f 92       	push	r2
    17e0:	8f 93       	push	r24
    17e2:	9f 93       	push	r25
    17e4:	2f b6       	in	r2, 0x3f	; 63
    17e6:	80 91 6b 01 	lds	r24, 0x016B
    17ea:	90 91 6c 01 	lds	r25, 0x016C
    17ee:	01 96       	adiw	r24, 0x01	; 1
    17f0:	80 93 6b 01 	sts	0x016B, r24
    17f4:	90 93 6c 01 	sts	0x016C, r25
    17f8:	90 e0       	ldi	r25, 0x00	; 0
    17fa:	80 91 6d 01 	lds	r24, 0x016D
    17fe:	89 1f       	adc	r24, r25
    1800:	80 93 6d 01 	sts	0x016D, r24
    1804:	90 91 73 01 	lds	r25, 0x0173
    1808:	9c 5f       	subi	r25, 0xFC	; 252
    180a:	90 93 73 01 	sts	0x0173, r25
    180e:	80 91 72 01 	lds	r24, 0x0172
    1812:	80 51       	subi	r24, 0x10	; 16
    1814:	97 42       	sbci	r25, 0x27	; 39
    1816:	c0 f0       	brcs	.+48     	; 0x1848 <end>
    1818:	90 93 73 01 	sts	0x0173, r25
    181c:	80 93 72 01 	sts	0x0172, r24
    1820:	80 91 6e 01 	lds	r24, 0x016E
    1824:	90 91 6f 01 	lds	r25, 0x016F
    1828:	01 96       	adiw	r24, 0x01	; 1
    182a:	80 93 6e 01 	sts	0x016E, r24
    182e:	90 93 6f 01 	sts	0x016F, r25
    1832:	90 e0       	ldi	r25, 0x00	; 0
    1834:	80 91 70 01 	lds	r24, 0x0170
    1838:	89 1f       	adc	r24, r25
    183a:	80 93 70 01 	sts	0x0170, r24
    183e:	80 91 71 01 	lds	r24, 0x0171
    1842:	89 1f       	adc	r24, r25
    1844:	80 93 71 01 	sts	0x0171, r24

00001848 <end>:
    1848:	2f be       	out	0x3f, r2	; 63
    184a:	9f 91       	pop	r25
    184c:	8f 91       	pop	r24
    184e:	2f 90       	pop	r2
    1850:	18 95       	reti

00001852 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1852:	cf 93       	push	r28
    1854:	df 93       	push	r29
    1856:	ec 01       	movw	r28, r24
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    185a:	88 ee       	ldi	r24, 0xE8	; 232
    185c:	93 e0       	ldi	r25, 0x03	; 3
    185e:	0e 94 e7 0b 	call	0x17ce	; 0x17ce <_ZN13OrangutanTime17delayMicrosecondsEj>
    1862:	21 97       	sbiw	r28, 0x01	; 1
    1864:	20 97       	sbiw	r28, 0x00	; 0
    1866:	c9 f7       	brne	.-14     	; 0x185a <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1868:	df 91       	pop	r29
    186a:	cf 91       	pop	r28
    186c:	08 95       	ret

0000186e <delay_ms>:
    186e:	0e 94 29 0c 	call	0x1852	; 0x1852 <_ZN13OrangutanTime17delayMillisecondsEj>
    1872:	08 95       	ret

00001874 <_ZN13OrangutanTime5init2Ev>:
    1874:	e0 e7       	ldi	r30, 0x70	; 112
    1876:	f0 e0       	ldi	r31, 0x00	; 0
    1878:	80 81       	ld	r24, Z
    187a:	8e 7f       	andi	r24, 0xFE	; 254
    187c:	80 83       	st	Z, r24
    187e:	a0 eb       	ldi	r26, 0xB0	; 176
    1880:	b0 e0       	ldi	r27, 0x00	; 0
    1882:	8c 91       	ld	r24, X
    1884:	83 60       	ori	r24, 0x03	; 3
    1886:	8c 93       	st	X, r24
    1888:	a1 eb       	ldi	r26, 0xB1	; 177
    188a:	b0 e0       	ldi	r27, 0x00	; 0
    188c:	8c 91       	ld	r24, X
    188e:	80 7f       	andi	r24, 0xF0	; 240
    1890:	8c 93       	st	X, r24
    1892:	8c 91       	ld	r24, X
    1894:	82 60       	ori	r24, 0x02	; 2
    1896:	8c 93       	st	X, r24
    1898:	b8 9a       	sbi	0x17, 0	; 23
    189a:	80 81       	ld	r24, Z
    189c:	81 60       	ori	r24, 0x01	; 1
    189e:	80 83       	st	Z, r24
    18a0:	78 94       	sei
    18a2:	08 95       	ret

000018a4 <_ZN13OrangutanTime4initEv>:
    18a4:	80 91 74 01 	lds	r24, 0x0174
    18a8:	88 23       	and	r24, r24
    18aa:	29 f4       	brne	.+10     	; 0x18b6 <_ZN13OrangutanTime4initEv+0x12>
    18ac:	81 e0       	ldi	r24, 0x01	; 1
    18ae:	80 93 74 01 	sts	0x0174, r24
    18b2:	0e 94 3a 0c 	call	0x1874	; 0x1874 <_ZN13OrangutanTime5init2Ev>
    18b6:	08 95       	ret

000018b8 <_ZN13OrangutanTime5resetEv>:
    18b8:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <_ZN13OrangutanTime4initEv>
    18bc:	e0 e7       	ldi	r30, 0x70	; 112
    18be:	f0 e0       	ldi	r31, 0x00	; 0
    18c0:	80 81       	ld	r24, Z
    18c2:	8e 7f       	andi	r24, 0xFE	; 254
    18c4:	80 83       	st	Z, r24
    18c6:	10 92 6e 01 	sts	0x016E, r1
    18ca:	10 92 6f 01 	sts	0x016F, r1
    18ce:	10 92 70 01 	sts	0x0170, r1
    18d2:	10 92 71 01 	sts	0x0171, r1
    18d6:	10 92 73 01 	sts	0x0173, r1
    18da:	10 92 72 01 	sts	0x0172, r1
    18de:	80 81       	ld	r24, Z
    18e0:	81 60       	ori	r24, 0x01	; 1
    18e2:	80 83       	st	Z, r24
    18e4:	08 95       	ret

000018e6 <calibrate_line_sensors>:
    18e6:	68 2f       	mov	r22, r24
    18e8:	85 e7       	ldi	r24, 0x75	; 117
    18ea:	91 e0       	ldi	r25, 0x01	; 1
    18ec:	0e 94 a3 11 	call	0x2346	; 0x2346 <_ZN16PololuQTRSensors9calibrateEh>
    18f0:	08 95       	ret

000018f2 <read_line>:
    18f2:	9c 01       	movw	r18, r24
    18f4:	46 2f       	mov	r20, r22
    18f6:	85 e7       	ldi	r24, 0x75	; 117
    18f8:	91 e0       	ldi	r25, 0x01	; 1
    18fa:	b9 01       	movw	r22, r18
    18fc:	20 e0       	ldi	r18, 0x00	; 0
    18fe:	0e 94 01 10 	call	0x2002	; 0x2002 <_ZN16PololuQTRSensors8readLineEPjhh>
    1902:	08 95       	ret

00001904 <_ZN9Pololu3pi4initEjh>:
    1904:	0f 93       	push	r16
    1906:	df 93       	push	r29
    1908:	cf 93       	push	r28
    190a:	00 d0       	rcall	.+0      	; 0x190c <_ZN9Pololu3pi4initEjh+0x8>
    190c:	00 d0       	rcall	.+0      	; 0x190e <_ZN9Pololu3pi4initEjh+0xa>
    190e:	0f 92       	push	r0
    1910:	cd b7       	in	r28, 0x3d	; 61
    1912:	de b7       	in	r29, 0x3e	; 62
    1914:	9c 01       	movw	r18, r24
    1916:	96 2f       	mov	r25, r22
    1918:	de 01       	movw	r26, r28
    191a:	11 96       	adiw	r26, 0x01	; 1
    191c:	e6 e2       	ldi	r30, 0x26	; 38
    191e:	f1 e0       	ldi	r31, 0x01	; 1
    1920:	85 e0       	ldi	r24, 0x05	; 5
    1922:	01 90       	ld	r0, Z+
    1924:	0d 92       	st	X+, r0
    1926:	81 50       	subi	r24, 0x01	; 1
    1928:	e1 f7       	brne	.-8      	; 0x1922 <_ZN9Pololu3pi4initEjh+0x1e>
    192a:	be 01       	movw	r22, r28
    192c:	6f 5f       	subi	r22, 0xFF	; 255
    192e:	7f 4f       	sbci	r23, 0xFF	; 255
    1930:	99 23       	and	r25, r25
    1932:	29 f0       	breq	.+10     	; 0x193e <_ZN9Pololu3pi4initEjh+0x3a>
    1934:	85 e7       	ldi	r24, 0x75	; 117
    1936:	91 e0       	ldi	r25, 0x01	; 1
    1938:	45 e0       	ldi	r20, 0x05	; 5
    193a:	0f ef       	ldi	r16, 0xFF	; 255
    193c:	04 c0       	rjmp	.+8      	; 0x1946 <_ZN9Pololu3pi4initEjh+0x42>
    193e:	85 e7       	ldi	r24, 0x75	; 117
    1940:	91 e0       	ldi	r25, 0x01	; 1
    1942:	45 e0       	ldi	r20, 0x05	; 5
    1944:	03 e1       	ldi	r16, 0x13	; 19
    1946:	0e 94 1c 0d 	call	0x1a38	; 0x1a38 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    194a:	85 e7       	ldi	r24, 0x75	; 117
    194c:	91 e0       	ldi	r25, 0x01	; 1
    194e:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <_ZN16PololuQTRSensors11emittersOffEv>
    1952:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <_ZN13OrangutanTime5resetEv>
    1956:	0f 90       	pop	r0
    1958:	0f 90       	pop	r0
    195a:	0f 90       	pop	r0
    195c:	0f 90       	pop	r0
    195e:	0f 90       	pop	r0
    1960:	cf 91       	pop	r28
    1962:	df 91       	pop	r29
    1964:	0f 91       	pop	r16
    1966:	08 95       	ret

00001968 <pololu_3pi_init>:
    1968:	60 e0       	ldi	r22, 0x00	; 0
    196a:	0e 94 82 0c 	call	0x1904	; 0x1904 <_ZN9Pololu3pi4initEjh>
    196e:	08 95       	ret

00001970 <_GLOBAL__I_pololu_3pi_init>:
    1970:	08 95       	ret

00001972 <_GLOBAL__D_pololu_3pi_init>:
    1972:	85 e7       	ldi	r24, 0x75	; 117
    1974:	91 e0       	ldi	r25, 0x01	; 1
    1976:	0e 94 c7 11 	call	0x238e	; 0x238e <_ZN16PololuQTRSensorsD1Ev>
    197a:	08 95       	ret

0000197c <delayMicroseconds>:
    197c:	6f 93       	push	r22
    197e:	64 e0       	ldi	r22, 0x04	; 4
    1980:	6a 95       	dec	r22
    1982:	f1 f7       	brne	.-4      	; 0x1980 <delayMicroseconds+0x4>
    1984:	6f 91       	pop	r22
    1986:	01 97       	sbiw	r24, 0x01	; 1
    1988:	c9 f7       	brne	.-14     	; 0x197c <delayMicroseconds>
    198a:	08 95       	ret

0000198c <_ZN16PololuQTRSensors4initEhhh>:
    198c:	a7 e0       	ldi	r26, 0x07	; 7
    198e:	b0 e0       	ldi	r27, 0x00	; 0
    1990:	ec ec       	ldi	r30, 0xCC	; 204
    1992:	fc e0       	ldi	r31, 0x0C	; 12
    1994:	0c 94 83 12 	jmp	0x2506	; 0x2506 <__prologue_saves__+0x1c>
    1998:	8c 01       	movw	r16, r24
    199a:	fc 01       	movw	r30, r24
    199c:	11 82       	std	Z+1, r1	; 0x01
    199e:	10 82       	st	Z, r1
    19a0:	13 82       	std	Z+3, r1	; 0x03
    19a2:	12 82       	std	Z+2, r1	; 0x02
    19a4:	15 82       	std	Z+5, r1	; 0x05
    19a6:	14 82       	std	Z+4, r1	; 0x04
    19a8:	17 82       	std	Z+7, r1	; 0x07
    19aa:	16 82       	std	Z+6, r1	; 0x06
    19ac:	61 31       	cpi	r22, 0x11	; 17
    19ae:	18 f0       	brcs	.+6      	; 0x19b6 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    19b0:	80 e1       	ldi	r24, 0x10	; 16
    19b2:	80 87       	std	Z+8, r24	; 0x08
    19b4:	02 c0       	rjmp	.+4      	; 0x19ba <_ZN16PololuQTRSensors4initEhhh+0x2e>
    19b6:	fc 01       	movw	r30, r24
    19b8:	60 87       	std	Z+8, r22	; 0x08
    19ba:	f8 01       	movw	r30, r16
    19bc:	20 8b       	std	Z+16, r18	; 0x10
    19be:	ce 01       	movw	r24, r28
    19c0:	01 96       	adiw	r24, 0x01	; 1
    19c2:	64 2f       	mov	r22, r20
    19c4:	0e 94 9a 0a 	call	0x1534	; 0x1534 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    19c8:	8f 81       	ldd	r24, Y+7	; 0x07
    19ca:	f8 01       	movw	r30, r16
    19cc:	81 87       	std	Z+9, r24	; 0x09
    19ce:	8b 81       	ldd	r24, Y+3	; 0x03
    19d0:	9c 81       	ldd	r25, Y+4	; 0x04
    19d2:	93 87       	std	Z+11, r25	; 0x0b
    19d4:	82 87       	std	Z+10, r24	; 0x0a
    19d6:	8d 81       	ldd	r24, Y+5	; 0x05
    19d8:	9e 81       	ldd	r25, Y+6	; 0x06
    19da:	95 87       	std	Z+13, r25	; 0x0d
    19dc:	84 87       	std	Z+12, r24	; 0x0c
    19de:	27 96       	adiw	r28, 0x07	; 7
    19e0:	e4 e0       	ldi	r30, 0x04	; 4
    19e2:	0c 94 9f 12 	jmp	0x253e	; 0x253e <__epilogue_restores__+0x1c>

000019e6 <_ZN16PololuQTRSensors11emittersOffEv>:
    19e6:	fc 01       	movw	r30, r24
    19e8:	a4 85       	ldd	r26, Z+12	; 0x0c
    19ea:	b5 85       	ldd	r27, Z+13	; 0x0d
    19ec:	10 97       	sbiw	r26, 0x00	; 0
    19ee:	79 f0       	breq	.+30     	; 0x1a0e <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    19f0:	8c 91       	ld	r24, X
    19f2:	91 85       	ldd	r25, Z+9	; 0x09
    19f4:	89 2b       	or	r24, r25
    19f6:	8c 93       	st	X, r24
    19f8:	a2 85       	ldd	r26, Z+10	; 0x0a
    19fa:	b3 85       	ldd	r27, Z+11	; 0x0b
    19fc:	9c 91       	ld	r25, X
    19fe:	81 85       	ldd	r24, Z+9	; 0x09
    1a00:	80 95       	com	r24
    1a02:	89 23       	and	r24, r25
    1a04:	8c 93       	st	X, r24
    1a06:	88 ec       	ldi	r24, 0xC8	; 200
    1a08:	90 e0       	ldi	r25, 0x00	; 0
    1a0a:	0e 94 be 0c 	call	0x197c	; 0x197c <delayMicroseconds>
    1a0e:	08 95       	ret

00001a10 <_ZN16PololuQTRSensors10emittersOnEv>:
    1a10:	fc 01       	movw	r30, r24
    1a12:	a4 85       	ldd	r26, Z+12	; 0x0c
    1a14:	b5 85       	ldd	r27, Z+13	; 0x0d
    1a16:	10 97       	sbiw	r26, 0x00	; 0
    1a18:	71 f0       	breq	.+28     	; 0x1a36 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1a1a:	8c 91       	ld	r24, X
    1a1c:	91 85       	ldd	r25, Z+9	; 0x09
    1a1e:	89 2b       	or	r24, r25
    1a20:	8c 93       	st	X, r24
    1a22:	a2 85       	ldd	r26, Z+10	; 0x0a
    1a24:	b3 85       	ldd	r27, Z+11	; 0x0b
    1a26:	8c 91       	ld	r24, X
    1a28:	91 85       	ldd	r25, Z+9	; 0x09
    1a2a:	89 2b       	or	r24, r25
    1a2c:	8c 93       	st	X, r24
    1a2e:	88 ec       	ldi	r24, 0xC8	; 200
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	0e 94 be 0c 	call	0x197c	; 0x197c <delayMicroseconds>
    1a36:	08 95       	ret

00001a38 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1a38:	a7 e0       	ldi	r26, 0x07	; 7
    1a3a:	b0 e0       	ldi	r27, 0x00	; 0
    1a3c:	e2 e2       	ldi	r30, 0x22	; 34
    1a3e:	fd e0       	ldi	r31, 0x0D	; 13
    1a40:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__prologue_saves__>
    1a44:	7c 01       	movw	r14, r24
    1a46:	1b 01       	movw	r2, r22
    1a48:	64 2f       	mov	r22, r20
    1a4a:	39 01       	movw	r6, r18
    1a4c:	40 2f       	mov	r20, r16
    1a4e:	20 e0       	ldi	r18, 0x00	; 0
    1a50:	0e 94 c6 0c 	call	0x198c	; 0x198c <_ZN16PololuQTRSensors4initEhhh>
    1a54:	97 01       	movw	r18, r14
    1a56:	2f 5b       	subi	r18, 0xBF	; 191
    1a58:	3f 4f       	sbci	r19, 0xFF	; 255
    1a5a:	f9 01       	movw	r30, r18
    1a5c:	10 82       	st	Z, r1
    1a5e:	d7 01       	movw	r26, r14
    1a60:	ae 5b       	subi	r26, 0xBE	; 190
    1a62:	bf 4f       	sbci	r27, 0xFF	; 255
    1a64:	1c 92       	st	X, r1
    1a66:	c7 01       	movw	r24, r14
    1a68:	8d 5b       	subi	r24, 0xBD	; 189
    1a6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a6c:	fc 01       	movw	r30, r24
    1a6e:	10 82       	st	Z, r1
    1a70:	f7 01       	movw	r30, r14
    1a72:	77 86       	std	Z+15, r7	; 0x0f
    1a74:	66 86       	std	Z+14, r6	; 0x0e
    1a76:	66 24       	eor	r6, r6
    1a78:	2e 01       	movw	r4, r28
    1a7a:	08 94       	sec
    1a7c:	41 1c       	adc	r4, r1
    1a7e:	51 1c       	adc	r5, r1
    1a80:	6c 01       	movw	r12, r24
    1a82:	5d 01       	movw	r10, r26
    1a84:	49 01       	movw	r8, r18
    1a86:	29 c0       	rjmp	.+82     	; 0x1ada <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1a88:	06 2d       	mov	r16, r6
    1a8a:	10 e0       	ldi	r17, 0x00	; 0
    1a8c:	f1 01       	movw	r30, r2
    1a8e:	e0 0f       	add	r30, r16
    1a90:	f1 1f       	adc	r31, r17
    1a92:	c2 01       	movw	r24, r4
    1a94:	60 81       	ld	r22, Z
    1a96:	0e 94 9a 0a 	call	0x1534	; 0x1534 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1a9a:	2f 81       	ldd	r18, Y+7	; 0x07
    1a9c:	f7 01       	movw	r30, r14
    1a9e:	e0 0f       	add	r30, r16
    1aa0:	f1 1f       	adc	r31, r17
    1aa2:	21 8b       	std	Z+17, r18	; 0x11
    1aa4:	89 81       	ldd	r24, Y+1	; 0x01
    1aa6:	9a 81       	ldd	r25, Y+2	; 0x02
    1aa8:	f8 01       	movw	r30, r16
    1aaa:	ee 0f       	add	r30, r30
    1aac:	ff 1f       	adc	r31, r31
    1aae:	ee 0d       	add	r30, r14
    1ab0:	ff 1d       	adc	r31, r15
    1ab2:	92 a3       	std	Z+34, r25	; 0x22
    1ab4:	81 a3       	std	Z+33, r24	; 0x21
    1ab6:	83 32       	cpi	r24, 0x23	; 35
    1ab8:	91 05       	cpc	r25, r1
    1aba:	11 f4       	brne	.+4      	; 0x1ac0 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1abc:	f4 01       	movw	r30, r8
    1abe:	09 c0       	rjmp	.+18     	; 0x1ad2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1ac0:	86 32       	cpi	r24, 0x26	; 38
    1ac2:	91 05       	cpc	r25, r1
    1ac4:	11 f4       	brne	.+4      	; 0x1aca <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1ac6:	f5 01       	movw	r30, r10
    1ac8:	04 c0       	rjmp	.+8      	; 0x1ad2 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1aca:	89 32       	cpi	r24, 0x29	; 41
    1acc:	91 05       	cpc	r25, r1
    1ace:	21 f4       	brne	.+8      	; 0x1ad8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    1ad0:	f6 01       	movw	r30, r12
    1ad2:	80 81       	ld	r24, Z
    1ad4:	82 2b       	or	r24, r18
    1ad6:	80 83       	st	Z, r24
    1ad8:	63 94       	inc	r6
    1ada:	f7 01       	movw	r30, r14
    1adc:	80 85       	ldd	r24, Z+8	; 0x08
    1ade:	68 16       	cp	r6, r24
    1ae0:	98 f2       	brcs	.-90     	; 0x1a88 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1ae2:	27 96       	adiw	r28, 0x07	; 7
    1ae4:	e2 e1       	ldi	r30, 0x12	; 18
    1ae6:	0c 94 91 12 	jmp	0x2522	; 0x2522 <__epilogue_restores__>

00001aea <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1aea:	a0 e0       	ldi	r26, 0x00	; 0
    1aec:	b0 e0       	ldi	r27, 0x00	; 0
    1aee:	eb e7       	ldi	r30, 0x7B	; 123
    1af0:	fd e0       	ldi	r31, 0x0D	; 13
    1af2:	0c 94 7a 12 	jmp	0x24f4	; 0x24f4 <__prologue_saves__+0xa>
    1af6:	ec 01       	movw	r28, r24
    1af8:	5b 01       	movw	r10, r22
    1afa:	fc 01       	movw	r30, r24
    1afc:	ef 5b       	subi	r30, 0xBF	; 191
    1afe:	ff 4f       	sbci	r31, 0xFF	; 255
    1b00:	90 80       	ld	r9, Z
    1b02:	fc 01       	movw	r30, r24
    1b04:	ee 5b       	subi	r30, 0xBE	; 190
    1b06:	ff 4f       	sbci	r31, 0xFF	; 255
    1b08:	80 80       	ld	r8, Z
    1b0a:	fc 01       	movw	r30, r24
    1b0c:	ed 5b       	subi	r30, 0xBD	; 189
    1b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b10:	70 80       	ld	r7, Z
    1b12:	80 e0       	ldi	r24, 0x00	; 0
    1b14:	09 c0       	rjmp	.+18     	; 0x1b28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1b16:	e8 2f       	mov	r30, r24
    1b18:	f0 e0       	ldi	r31, 0x00	; 0
    1b1a:	ee 0f       	add	r30, r30
    1b1c:	ff 1f       	adc	r31, r31
    1b1e:	ea 0d       	add	r30, r10
    1b20:	fb 1d       	adc	r31, r11
    1b22:	11 82       	std	Z+1, r1	; 0x01
    1b24:	10 82       	st	Z, r1
    1b26:	8f 5f       	subi	r24, 0xFF	; 255
    1b28:	98 85       	ldd	r25, Y+8	; 0x08
    1b2a:	89 17       	cp	r24, r25
    1b2c:	a0 f3       	brcs	.-24     	; 0x1b16 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1b2e:	84 b1       	in	r24, 0x04	; 4
    1b30:	21 e4       	ldi	r18, 0x41	; 65
    1b32:	e2 2e       	mov	r14, r18
    1b34:	f1 2c       	mov	r15, r1
    1b36:	ec 0e       	add	r14, r28
    1b38:	fd 1e       	adc	r15, r29
    1b3a:	d7 01       	movw	r26, r14
    1b3c:	9c 91       	ld	r25, X
    1b3e:	89 2b       	or	r24, r25
    1b40:	84 b9       	out	0x04, r24	; 4
    1b42:	87 b1       	in	r24, 0x07	; 7
    1b44:	8e 01       	movw	r16, r28
    1b46:	0e 5b       	subi	r16, 0xBE	; 190
    1b48:	1f 4f       	sbci	r17, 0xFF	; 255
    1b4a:	f8 01       	movw	r30, r16
    1b4c:	90 81       	ld	r25, Z
    1b4e:	89 2b       	or	r24, r25
    1b50:	87 b9       	out	0x07, r24	; 7
    1b52:	8a b1       	in	r24, 0x0a	; 10
    1b54:	93 e4       	ldi	r25, 0x43	; 67
    1b56:	c9 2e       	mov	r12, r25
    1b58:	d1 2c       	mov	r13, r1
    1b5a:	cc 0e       	add	r12, r28
    1b5c:	dd 1e       	adc	r13, r29
    1b5e:	d6 01       	movw	r26, r12
    1b60:	9c 91       	ld	r25, X
    1b62:	89 2b       	or	r24, r25
    1b64:	8a b9       	out	0x0a, r24	; 10
    1b66:	85 b1       	in	r24, 0x05	; 5
    1b68:	f7 01       	movw	r30, r14
    1b6a:	90 81       	ld	r25, Z
    1b6c:	89 2b       	or	r24, r25
    1b6e:	85 b9       	out	0x05, r24	; 5
    1b70:	88 b1       	in	r24, 0x08	; 8
    1b72:	d8 01       	movw	r26, r16
    1b74:	9c 91       	ld	r25, X
    1b76:	89 2b       	or	r24, r25
    1b78:	88 b9       	out	0x08, r24	; 8
    1b7a:	8b b1       	in	r24, 0x0b	; 11
    1b7c:	f6 01       	movw	r30, r12
    1b7e:	90 81       	ld	r25, Z
    1b80:	89 2b       	or	r24, r25
    1b82:	8b b9       	out	0x0b, r24	; 11
    1b84:	8a e0       	ldi	r24, 0x0A	; 10
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	0e 94 be 0c 	call	0x197c	; 0x197c <delayMicroseconds>
    1b8c:	94 b1       	in	r25, 0x04	; 4
    1b8e:	d7 01       	movw	r26, r14
    1b90:	8c 91       	ld	r24, X
    1b92:	80 95       	com	r24
    1b94:	89 23       	and	r24, r25
    1b96:	84 b9       	out	0x04, r24	; 4
    1b98:	97 b1       	in	r25, 0x07	; 7
    1b9a:	f8 01       	movw	r30, r16
    1b9c:	80 81       	ld	r24, Z
    1b9e:	80 95       	com	r24
    1ba0:	89 23       	and	r24, r25
    1ba2:	87 b9       	out	0x07, r24	; 7
    1ba4:	9a b1       	in	r25, 0x0a	; 10
    1ba6:	d6 01       	movw	r26, r12
    1ba8:	8c 91       	ld	r24, X
    1baa:	80 95       	com	r24
    1bac:	89 23       	and	r24, r25
    1bae:	8a b9       	out	0x0a, r24	; 10
    1bb0:	95 b1       	in	r25, 0x05	; 5
    1bb2:	f7 01       	movw	r30, r14
    1bb4:	80 81       	ld	r24, Z
    1bb6:	80 95       	com	r24
    1bb8:	89 23       	and	r24, r25
    1bba:	85 b9       	out	0x05, r24	; 5
    1bbc:	98 b1       	in	r25, 0x08	; 8
    1bbe:	d8 01       	movw	r26, r16
    1bc0:	8c 91       	ld	r24, X
    1bc2:	80 95       	com	r24
    1bc4:	89 23       	and	r24, r25
    1bc6:	88 b9       	out	0x08, r24	; 8
    1bc8:	9b b1       	in	r25, 0x0b	; 11
    1bca:	f6 01       	movw	r30, r12
    1bcc:	80 81       	ld	r24, Z
    1bce:	80 95       	com	r24
    1bd0:	89 23       	and	r24, r25
    1bd2:	8b b9       	out	0x0b, r24	; 11
    1bd4:	c0 90 b0 00 	lds	r12, 0x00B0
    1bd8:	e0 90 b1 00 	lds	r14, 0x00B1
    1bdc:	80 91 b0 00 	lds	r24, 0x00B0
    1be0:	83 60       	ori	r24, 0x03	; 3
    1be2:	80 93 b0 00 	sts	0x00B0, r24
    1be6:	82 e0       	ldi	r24, 0x02	; 2
    1be8:	80 93 b1 00 	sts	0x00B1, r24
    1bec:	00 91 b2 00 	lds	r16, 0x00B2
    1bf0:	80 e0       	ldi	r24, 0x00	; 0
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	39 c0       	rjmp	.+114    	; 0x1c68 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1bf6:	20 91 b2 00 	lds	r18, 0x00B2
    1bfa:	20 1b       	sub	r18, r16
    1bfc:	82 0f       	add	r24, r18
    1bfe:	91 1d       	adc	r25, r1
    1c00:	02 0f       	add	r16, r18
    1c02:	f3 b0       	in	r15, 0x03	; 3
    1c04:	f9 14       	cp	r15, r9
    1c06:	09 f0       	breq	.+2      	; 0x1c0a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1c08:	4d c0       	rjmp	.+154    	; 0x1ca4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c0a:	96 b0       	in	r9, 0x06	; 6
    1c0c:	98 14       	cp	r9, r8
    1c0e:	09 f0       	breq	.+2      	; 0x1c12 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1c10:	49 c0       	rjmp	.+146    	; 0x1ca4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c12:	29 b1       	in	r18, 0x09	; 9
    1c14:	27 15       	cp	r18, r7
    1c16:	09 f0       	breq	.+2      	; 0x1c1a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1c18:	45 c0       	rjmp	.+138    	; 0x1ca4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1c1a:	24 c0       	rjmp	.+72     	; 0x1c64 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1c1c:	21 2f       	mov	r18, r17
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	a9 01       	movw	r20, r18
    1c22:	44 0f       	add	r20, r20
    1c24:	55 1f       	adc	r21, r21
    1c26:	f5 01       	movw	r30, r10
    1c28:	e4 0f       	add	r30, r20
    1c2a:	f5 1f       	adc	r31, r21
    1c2c:	60 81       	ld	r22, Z
    1c2e:	71 81       	ldd	r23, Z+1	; 0x01
    1c30:	61 15       	cp	r22, r1
    1c32:	71 05       	cpc	r23, r1
    1c34:	99 f4       	brne	.+38     	; 0x1c5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1c36:	4c 0f       	add	r20, r28
    1c38:	5d 1f       	adc	r21, r29
    1c3a:	da 01       	movw	r26, r20
    1c3c:	91 96       	adiw	r26, 0x21	; 33
    1c3e:	4d 91       	ld	r20, X+
    1c40:	5c 91       	ld	r21, X
    1c42:	92 97       	sbiw	r26, 0x22	; 34
    1c44:	da 01       	movw	r26, r20
    1c46:	4c 91       	ld	r20, X
    1c48:	2c 0f       	add	r18, r28
    1c4a:	3d 1f       	adc	r19, r29
    1c4c:	d9 01       	movw	r26, r18
    1c4e:	51 96       	adiw	r26, 0x11	; 17
    1c50:	2c 91       	ld	r18, X
    1c52:	51 97       	sbiw	r26, 0x11	; 17
    1c54:	42 23       	and	r20, r18
    1c56:	11 f4       	brne	.+4      	; 0x1c5c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1c58:	91 83       	std	Z+1, r25	; 0x01
    1c5a:	80 83       	st	Z, r24
    1c5c:	1f 5f       	subi	r17, 0xFF	; 255
    1c5e:	28 85       	ldd	r18, Y+8	; 0x08
    1c60:	12 17       	cp	r17, r18
    1c62:	e0 f2       	brcs	.-72     	; 0x1c1c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1c64:	89 2c       	mov	r8, r9
    1c66:	9f 2c       	mov	r9, r15
    1c68:	2e 85       	ldd	r18, Y+14	; 0x0e
    1c6a:	3f 85       	ldd	r19, Y+15	; 0x0f
    1c6c:	82 17       	cp	r24, r18
    1c6e:	93 07       	cpc	r25, r19
    1c70:	10 f2       	brcs	.-124    	; 0x1bf6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1c72:	c0 92 b0 00 	sts	0x00B0, r12
    1c76:	e0 92 b1 00 	sts	0x00B1, r14
    1c7a:	20 e0       	ldi	r18, 0x00	; 0
    1c7c:	0f c0       	rjmp	.+30     	; 0x1c9c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1c7e:	e2 2f       	mov	r30, r18
    1c80:	f0 e0       	ldi	r31, 0x00	; 0
    1c82:	ee 0f       	add	r30, r30
    1c84:	ff 1f       	adc	r31, r31
    1c86:	ea 0d       	add	r30, r10
    1c88:	fb 1d       	adc	r31, r11
    1c8a:	80 81       	ld	r24, Z
    1c8c:	91 81       	ldd	r25, Z+1	; 0x01
    1c8e:	00 97       	sbiw	r24, 0x00	; 0
    1c90:	21 f4       	brne	.+8      	; 0x1c9a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1c92:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c94:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c96:	91 83       	std	Z+1, r25	; 0x01
    1c98:	80 83       	st	Z, r24
    1c9a:	2f 5f       	subi	r18, 0xFF	; 255
    1c9c:	88 85       	ldd	r24, Y+8	; 0x08
    1c9e:	28 17       	cp	r18, r24
    1ca0:	70 f3       	brcs	.-36     	; 0x1c7e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1ca2:	05 c0       	rjmp	.+10     	; 0x1cae <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1ca4:	f3 b0       	in	r15, 0x03	; 3
    1ca6:	96 b0       	in	r9, 0x06	; 6
    1ca8:	79 b0       	in	r7, 0x09	; 9
    1caa:	10 e0       	ldi	r17, 0x00	; 0
    1cac:	d8 cf       	rjmp	.-80     	; 0x1c5e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1cae:	cd b7       	in	r28, 0x3d	; 61
    1cb0:	de b7       	in	r29, 0x3e	; 62
    1cb2:	ed e0       	ldi	r30, 0x0D	; 13
    1cb4:	0c 94 96 12 	jmp	0x252c	; 0x252c <__epilogue_restores__+0xa>

00001cb8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1cb8:	ef 92       	push	r14
    1cba:	ff 92       	push	r15
    1cbc:	0f 93       	push	r16
    1cbe:	1f 93       	push	r17
    1cc0:	cf 93       	push	r28
    1cc2:	df 93       	push	r29
    1cc4:	fc 01       	movw	r30, r24
    1cc6:	9b 01       	movw	r18, r22
    1cc8:	00 91 7c 00 	lds	r16, 0x007C
    1ccc:	10 91 7a 00 	lds	r17, 0x007A
    1cd0:	e7 b0       	in	r14, 0x07	; 7
    1cd2:	f8 b0       	in	r15, 0x08	; 8
    1cd4:	80 91 7a 00 	lds	r24, 0x007A
    1cd8:	86 fd       	sbrc	r24, 6
    1cda:	fc cf       	rjmp	.-8      	; 0x1cd4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1cdc:	80 e0       	ldi	r24, 0x00	; 0
    1cde:	0a c0       	rjmp	.+20     	; 0x1cf4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1ce0:	a8 2f       	mov	r26, r24
    1ce2:	b0 e0       	ldi	r27, 0x00	; 0
    1ce4:	aa 0f       	add	r26, r26
    1ce6:	bb 1f       	adc	r27, r27
    1ce8:	a2 0f       	add	r26, r18
    1cea:	b3 1f       	adc	r27, r19
    1cec:	11 96       	adiw	r26, 0x01	; 1
    1cee:	1c 92       	st	X, r1
    1cf0:	1e 92       	st	-X, r1
    1cf2:	8f 5f       	subi	r24, 0xFF	; 255
    1cf4:	90 85       	ldd	r25, Z+8	; 0x08
    1cf6:	89 17       	cp	r24, r25
    1cf8:	98 f3       	brcs	.-26     	; 0x1ce0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1cfa:	97 b1       	in	r25, 0x07	; 7
    1cfc:	82 a1       	ldd	r24, Z+34	; 0x22
    1cfe:	80 95       	com	r24
    1d00:	89 23       	and	r24, r25
    1d02:	87 b9       	out	0x07, r24	; 7
    1d04:	98 b1       	in	r25, 0x08	; 8
    1d06:	82 a1       	ldd	r24, Z+34	; 0x22
    1d08:	80 95       	com	r24
    1d0a:	89 23       	and	r24, r25
    1d0c:	88 b9       	out	0x08, r24	; 8
    1d0e:	87 e8       	ldi	r24, 0x87	; 135
    1d10:	80 93 7a 00 	sts	0x007A, r24
    1d14:	70 e0       	ldi	r23, 0x00	; 0
    1d16:	29 c0       	rjmp	.+82     	; 0x1d6a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1d18:	df 01       	movw	r26, r30
    1d1a:	a6 0f       	add	r26, r22
    1d1c:	b1 1d       	adc	r27, r1
    1d1e:	51 96       	adiw	r26, 0x11	; 17
    1d20:	8c 91       	ld	r24, X
    1d22:	51 97       	sbiw	r26, 0x11	; 17
    1d24:	80 64       	ori	r24, 0x40	; 64
    1d26:	80 93 7c 00 	sts	0x007C, r24
    1d2a:	80 91 7a 00 	lds	r24, 0x007A
    1d2e:	80 64       	ori	r24, 0x40	; 64
    1d30:	80 93 7a 00 	sts	0x007A, r24
    1d34:	80 91 7a 00 	lds	r24, 0x007A
    1d38:	86 fd       	sbrc	r24, 6
    1d3a:	fc cf       	rjmp	.-8      	; 0x1d34 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1d3c:	a6 2f       	mov	r26, r22
    1d3e:	b0 e0       	ldi	r27, 0x00	; 0
    1d40:	aa 0f       	add	r26, r26
    1d42:	bb 1f       	adc	r27, r27
    1d44:	a2 0f       	add	r26, r18
    1d46:	b3 1f       	adc	r27, r19
    1d48:	40 91 78 00 	lds	r20, 0x0078
    1d4c:	50 91 79 00 	lds	r21, 0x0079
    1d50:	8d 91       	ld	r24, X+
    1d52:	9c 91       	ld	r25, X
    1d54:	11 97       	sbiw	r26, 0x01	; 1
    1d56:	84 0f       	add	r24, r20
    1d58:	95 1f       	adc	r25, r21
    1d5a:	11 96       	adiw	r26, 0x01	; 1
    1d5c:	9c 93       	st	X, r25
    1d5e:	8e 93       	st	-X, r24
    1d60:	6f 5f       	subi	r22, 0xFF	; 255
    1d62:	80 85       	ldd	r24, Z+8	; 0x08
    1d64:	68 17       	cp	r22, r24
    1d66:	c0 f2       	brcs	.-80     	; 0x1d18 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1d68:	7f 5f       	subi	r23, 0xFF	; 255
    1d6a:	81 a1       	ldd	r24, Z+33	; 0x21
    1d6c:	78 17       	cp	r23, r24
    1d6e:	10 f4       	brcc	.+4      	; 0x1d74 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1d70:	60 e0       	ldi	r22, 0x00	; 0
    1d72:	f7 cf       	rjmp	.-18     	; 0x1d62 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1d74:	40 e0       	ldi	r20, 0x00	; 0
    1d76:	14 c0       	rjmp	.+40     	; 0x1da0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1d78:	c4 2f       	mov	r28, r20
    1d7a:	d0 e0       	ldi	r29, 0x00	; 0
    1d7c:	cc 0f       	add	r28, r28
    1d7e:	dd 1f       	adc	r29, r29
    1d80:	c2 0f       	add	r28, r18
    1d82:	d3 1f       	adc	r29, r19
    1d84:	61 a1       	ldd	r22, Z+33	; 0x21
    1d86:	70 e0       	ldi	r23, 0x00	; 0
    1d88:	cb 01       	movw	r24, r22
    1d8a:	95 95       	asr	r25
    1d8c:	87 95       	ror	r24
    1d8e:	a8 81       	ld	r26, Y
    1d90:	b9 81       	ldd	r27, Y+1	; 0x01
    1d92:	8a 0f       	add	r24, r26
    1d94:	9b 1f       	adc	r25, r27
    1d96:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
    1d9a:	79 83       	std	Y+1, r23	; 0x01
    1d9c:	68 83       	st	Y, r22
    1d9e:	4f 5f       	subi	r20, 0xFF	; 255
    1da0:	80 85       	ldd	r24, Z+8	; 0x08
    1da2:	48 17       	cp	r20, r24
    1da4:	48 f3       	brcs	.-46     	; 0x1d78 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1da6:	00 93 7c 00 	sts	0x007C, r16
    1daa:	10 93 7a 00 	sts	0x007A, r17
    1dae:	f8 b8       	out	0x08, r15	; 8
    1db0:	e7 b8       	out	0x07, r14	; 7
    1db2:	cd b7       	in	r28, 0x3d	; 61
    1db4:	de b7       	in	r29, 0x3e	; 62
    1db6:	e6 e0       	ldi	r30, 0x06	; 6
    1db8:	0c 94 9d 12 	jmp	0x253a	; 0x253a <__epilogue_restores__+0x18>

00001dbc <_ZN16PololuQTRSensors4readEPjh>:
    1dbc:	a0 e2       	ldi	r26, 0x20	; 32
    1dbe:	b0 e0       	ldi	r27, 0x00	; 0
    1dc0:	e4 ee       	ldi	r30, 0xE4	; 228
    1dc2:	fe e0       	ldi	r31, 0x0E	; 14
    1dc4:	0c 94 80 12 	jmp	0x2500	; 0x2500 <__prologue_saves__+0x16>
    1dc8:	8c 01       	movw	r16, r24
    1dca:	7b 01       	movw	r14, r22
    1dcc:	d4 2e       	mov	r13, r20
    1dce:	84 2f       	mov	r24, r20
    1dd0:	81 50       	subi	r24, 0x01	; 1
    1dd2:	82 30       	cpi	r24, 0x02	; 2
    1dd4:	18 f4       	brcc	.+6      	; 0x1ddc <_ZN16PololuQTRSensors4readEPjh+0x20>
    1dd6:	c8 01       	movw	r24, r16
    1dd8:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <_ZN16PololuQTRSensors10emittersOnEv>
    1ddc:	d8 01       	movw	r26, r16
    1dde:	50 96       	adiw	r26, 0x10	; 16
    1de0:	8c 91       	ld	r24, X
    1de2:	50 97       	sbiw	r26, 0x10	; 16
    1de4:	88 23       	and	r24, r24
    1de6:	89 f4       	brne	.+34     	; 0x1e0a <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1de8:	c8 01       	movw	r24, r16
    1dea:	b7 01       	movw	r22, r14
    1dec:	0e 94 75 0d 	call	0x1aea	; 0x1aea <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1df0:	c8 01       	movw	r24, r16
    1df2:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <_ZN16PololuQTRSensors11emittersOffEv>
    1df6:	bd 2d       	mov	r27, r13
    1df8:	b2 30       	cpi	r27, 0x02	; 2
    1dfa:	d9 f5       	brne	.+118    	; 0x1e72 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1dfc:	c8 01       	movw	r24, r16
    1dfe:	be 01       	movw	r22, r28
    1e00:	6f 5f       	subi	r22, 0xFF	; 255
    1e02:	7f 4f       	sbci	r23, 0xFF	; 255
    1e04:	0e 94 75 0d 	call	0x1aea	; 0x1aea <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1e08:	10 c0       	rjmp	.+32     	; 0x1e2a <_ZN16PololuQTRSensors4readEPjh+0x6e>
    1e0a:	c8 01       	movw	r24, r16
    1e0c:	b7 01       	movw	r22, r14
    1e0e:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e12:	c8 01       	movw	r24, r16
    1e14:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <_ZN16PololuQTRSensors11emittersOffEv>
    1e18:	ed 2d       	mov	r30, r13
    1e1a:	e2 30       	cpi	r30, 0x02	; 2
    1e1c:	51 f5       	brne	.+84     	; 0x1e72 <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1e1e:	c8 01       	movw	r24, r16
    1e20:	be 01       	movw	r22, r28
    1e22:	6f 5f       	subi	r22, 0xFF	; 255
    1e24:	7f 4f       	sbci	r23, 0xFF	; 255
    1e26:	0e 94 5c 0e 	call	0x1cb8	; 0x1cb8 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1e2a:	60 e0       	ldi	r22, 0x00	; 0
    1e2c:	ae 01       	movw	r20, r28
    1e2e:	4f 5f       	subi	r20, 0xFF	; 255
    1e30:	5f 4f       	sbci	r21, 0xFF	; 255
    1e32:	1b c0       	rjmp	.+54     	; 0x1e6a <_ZN16PololuQTRSensors4readEPjh+0xae>
    1e34:	86 2f       	mov	r24, r22
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	88 0f       	add	r24, r24
    1e3a:	99 1f       	adc	r25, r25
    1e3c:	f7 01       	movw	r30, r14
    1e3e:	e8 0f       	add	r30, r24
    1e40:	f9 1f       	adc	r31, r25
    1e42:	84 0f       	add	r24, r20
    1e44:	95 1f       	adc	r25, r21
    1e46:	d8 01       	movw	r26, r16
    1e48:	1e 96       	adiw	r26, 0x0e	; 14
    1e4a:	2d 91       	ld	r18, X+
    1e4c:	3c 91       	ld	r19, X
    1e4e:	1f 97       	sbiw	r26, 0x0f	; 15
    1e50:	dc 01       	movw	r26, r24
    1e52:	8d 91       	ld	r24, X+
    1e54:	9c 91       	ld	r25, X
    1e56:	11 97       	sbiw	r26, 0x01	; 1
    1e58:	28 1b       	sub	r18, r24
    1e5a:	39 0b       	sbc	r19, r25
    1e5c:	80 81       	ld	r24, Z
    1e5e:	91 81       	ldd	r25, Z+1	; 0x01
    1e60:	82 0f       	add	r24, r18
    1e62:	93 1f       	adc	r25, r19
    1e64:	91 83       	std	Z+1, r25	; 0x01
    1e66:	80 83       	st	Z, r24
    1e68:	6f 5f       	subi	r22, 0xFF	; 255
    1e6a:	f8 01       	movw	r30, r16
    1e6c:	80 85       	ldd	r24, Z+8	; 0x08
    1e6e:	68 17       	cp	r22, r24
    1e70:	08 f3       	brcs	.-62     	; 0x1e34 <_ZN16PololuQTRSensors4readEPjh+0x78>
    1e72:	a0 96       	adiw	r28, 0x20	; 32
    1e74:	e7 e0       	ldi	r30, 0x07	; 7
    1e76:	0c 94 9c 12 	jmp	0x2538	; 0x2538 <__epilogue_restores__+0x16>

00001e7a <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1e7a:	8f 92       	push	r8
    1e7c:	9f 92       	push	r9
    1e7e:	af 92       	push	r10
    1e80:	bf 92       	push	r11
    1e82:	cf 92       	push	r12
    1e84:	df 92       	push	r13
    1e86:	ff 92       	push	r15
    1e88:	0f 93       	push	r16
    1e8a:	1f 93       	push	r17
    1e8c:	cf 93       	push	r28
    1e8e:	df 93       	push	r29
    1e90:	ec 01       	movw	r28, r24
    1e92:	c6 2e       	mov	r12, r22
    1e94:	07 2f       	mov	r16, r23
    1e96:	f4 2e       	mov	r15, r20
    1e98:	42 30       	cpi	r20, 0x02	; 2
    1e9a:	11 f0       	breq	.+4      	; 0x1ea0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    1e9c:	ff 20       	and	r15, r15
    1e9e:	51 f4       	brne	.+20     	; 0x1eb4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1ea0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ea2:	9d 81       	ldd	r25, Y+5	; 0x05
    1ea4:	00 97       	sbiw	r24, 0x00	; 0
    1ea6:	09 f4       	brne	.+2      	; 0x1eaa <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    1ea8:	a0 c0       	rjmp	.+320    	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1eaa:	8e 81       	ldd	r24, Y+6	; 0x06
    1eac:	9f 81       	ldd	r25, Y+7	; 0x07
    1eae:	00 97       	sbiw	r24, 0x00	; 0
    1eb0:	09 f4       	brne	.+2      	; 0x1eb4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1eb2:	9b c0       	rjmp	.+310    	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1eb4:	8f 2d       	mov	r24, r15
    1eb6:	81 50       	subi	r24, 0x01	; 1
    1eb8:	82 30       	cpi	r24, 0x02	; 2
    1eba:	50 f4       	brcc	.+20     	; 0x1ed0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1ebc:	88 81       	ld	r24, Y
    1ebe:	99 81       	ldd	r25, Y+1	; 0x01
    1ec0:	00 97       	sbiw	r24, 0x00	; 0
    1ec2:	09 f4       	brne	.+2      	; 0x1ec6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    1ec4:	92 c0       	rjmp	.+292    	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ec6:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec8:	9b 81       	ldd	r25, Y+3	; 0x03
    1eca:	00 97       	sbiw	r24, 0x00	; 0
    1ecc:	09 f4       	brne	.+2      	; 0x1ed0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1ece:	8d c0       	rjmp	.+282    	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1ed0:	ce 01       	movw	r24, r28
    1ed2:	6c 2d       	mov	r22, r12
    1ed4:	70 2f       	mov	r23, r16
    1ed6:	4f 2d       	mov	r20, r15
    1ed8:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <_ZN16PololuQTRSensors4readEPjh>
    1edc:	ac 2c       	mov	r10, r12
    1ede:	b0 2e       	mov	r11, r16
    1ee0:	00 e0       	ldi	r16, 0x00	; 0
    1ee2:	10 e0       	ldi	r17, 0x00	; 0
    1ee4:	88 24       	eor	r8, r8
    1ee6:	99 24       	eor	r9, r9
    1ee8:	7a c0       	rjmp	.+244    	; 0x1fde <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1eea:	8f 2d       	mov	r24, r15
    1eec:	81 30       	cpi	r24, 0x01	; 1
    1eee:	59 f4       	brne	.+22     	; 0x1f06 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1ef0:	ea 81       	ldd	r30, Y+2	; 0x02
    1ef2:	fb 81       	ldd	r31, Y+3	; 0x03
    1ef4:	e0 0f       	add	r30, r16
    1ef6:	f1 1f       	adc	r31, r17
    1ef8:	c0 80       	ld	r12, Z
    1efa:	d1 80       	ldd	r13, Z+1	; 0x01
    1efc:	e8 81       	ld	r30, Y
    1efe:	f9 81       	ldd	r31, Y+1	; 0x01
    1f00:	e0 0f       	add	r30, r16
    1f02:	f1 1f       	adc	r31, r17
    1f04:	0d c0       	rjmp	.+26     	; 0x1f20 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1f06:	8c 81       	ldd	r24, Y+4	; 0x04
    1f08:	9d 81       	ldd	r25, Y+5	; 0x05
    1f0a:	ff 20       	and	r15, r15
    1f0c:	61 f4       	brne	.+24     	; 0x1f26 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    1f0e:	ee 81       	ldd	r30, Y+6	; 0x06
    1f10:	ff 81       	ldd	r31, Y+7	; 0x07
    1f12:	e0 0f       	add	r30, r16
    1f14:	f1 1f       	adc	r31, r17
    1f16:	c0 80       	ld	r12, Z
    1f18:	d1 80       	ldd	r13, Z+1	; 0x01
    1f1a:	80 0f       	add	r24, r16
    1f1c:	91 1f       	adc	r25, r17
    1f1e:	fc 01       	movw	r30, r24
    1f20:	40 81       	ld	r20, Z
    1f22:	51 81       	ldd	r21, Z+1	; 0x01
    1f24:	2b c0       	rjmp	.+86     	; 0x1f7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f26:	80 0f       	add	r24, r16
    1f28:	91 1f       	adc	r25, r17
    1f2a:	fc 01       	movw	r30, r24
    1f2c:	80 81       	ld	r24, Z
    1f2e:	91 81       	ldd	r25, Z+1	; 0x01
    1f30:	e8 81       	ld	r30, Y
    1f32:	f9 81       	ldd	r31, Y+1	; 0x01
    1f34:	e0 0f       	add	r30, r16
    1f36:	f1 1f       	adc	r31, r17
    1f38:	40 81       	ld	r20, Z
    1f3a:	51 81       	ldd	r21, Z+1	; 0x01
    1f3c:	ce 84       	ldd	r12, Y+14	; 0x0e
    1f3e:	df 84       	ldd	r13, Y+15	; 0x0f
    1f40:	84 17       	cp	r24, r20
    1f42:	95 07       	cpc	r25, r21
    1f44:	10 f4       	brcc	.+4      	; 0x1f4a <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    1f46:	a6 01       	movw	r20, r12
    1f48:	04 c0       	rjmp	.+8      	; 0x1f52 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    1f4a:	4c 0d       	add	r20, r12
    1f4c:	5d 1d       	adc	r21, r13
    1f4e:	48 1b       	sub	r20, r24
    1f50:	59 0b       	sbc	r21, r25
    1f52:	ee 81       	ldd	r30, Y+6	; 0x06
    1f54:	ff 81       	ldd	r31, Y+7	; 0x07
    1f56:	e0 0f       	add	r30, r16
    1f58:	f1 1f       	adc	r31, r17
    1f5a:	80 81       	ld	r24, Z
    1f5c:	91 81       	ldd	r25, Z+1	; 0x01
    1f5e:	ea 81       	ldd	r30, Y+2	; 0x02
    1f60:	fb 81       	ldd	r31, Y+3	; 0x03
    1f62:	e0 0f       	add	r30, r16
    1f64:	f1 1f       	adc	r31, r17
    1f66:	20 81       	ld	r18, Z
    1f68:	31 81       	ldd	r19, Z+1	; 0x01
    1f6a:	ce 84       	ldd	r12, Y+14	; 0x0e
    1f6c:	df 84       	ldd	r13, Y+15	; 0x0f
    1f6e:	82 17       	cp	r24, r18
    1f70:	93 07       	cpc	r25, r19
    1f72:	20 f0       	brcs	.+8      	; 0x1f7c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f74:	c2 0e       	add	r12, r18
    1f76:	d3 1e       	adc	r13, r19
    1f78:	c8 1a       	sub	r12, r24
    1f7a:	d9 0a       	sbc	r13, r25
    1f7c:	c4 1a       	sub	r12, r20
    1f7e:	d5 0a       	sbc	r13, r21
    1f80:	d1 f0       	breq	.+52     	; 0x1fb6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1f82:	f5 01       	movw	r30, r10
    1f84:	60 81       	ld	r22, Z
    1f86:	71 81       	ldd	r23, Z+1	; 0x01
    1f88:	80 e0       	ldi	r24, 0x00	; 0
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	9a 01       	movw	r18, r20
    1f8e:	40 e0       	ldi	r20, 0x00	; 0
    1f90:	50 e0       	ldi	r21, 0x00	; 0
    1f92:	62 1b       	sub	r22, r18
    1f94:	73 0b       	sbc	r23, r19
    1f96:	84 0b       	sbc	r24, r20
    1f98:	95 0b       	sbc	r25, r21
    1f9a:	28 ee       	ldi	r18, 0xE8	; 232
    1f9c:	33 e0       	ldi	r19, 0x03	; 3
    1f9e:	40 e0       	ldi	r20, 0x00	; 0
    1fa0:	50 e0       	ldi	r21, 0x00	; 0
    1fa2:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__mulsi3>
    1fa6:	96 01       	movw	r18, r12
    1fa8:	40 e0       	ldi	r20, 0x00	; 0
    1faa:	50 e0       	ldi	r21, 0x00	; 0
    1fac:	0e 94 4b 12 	call	0x2496	; 0x2496 <__divmodsi4>
    1fb0:	37 fd       	sbrc	r19, 7
    1fb2:	0a c0       	rjmp	.+20     	; 0x1fc8 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    1fb6:	20 e0       	ldi	r18, 0x00	; 0
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	f3 e0       	ldi	r31, 0x03	; 3
    1fbc:	29 3e       	cpi	r18, 0xE9	; 233
    1fbe:	3f 07       	cpc	r19, r31
    1fc0:	2c f0       	brlt	.+10     	; 0x1fcc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1fc2:	28 ee       	ldi	r18, 0xE8	; 232
    1fc4:	33 e0       	ldi	r19, 0x03	; 3
    1fc6:	02 c0       	rjmp	.+4      	; 0x1fcc <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1fc8:	20 e0       	ldi	r18, 0x00	; 0
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	f5 01       	movw	r30, r10
    1fce:	21 93       	st	Z+, r18
    1fd0:	31 93       	st	Z+, r19
    1fd2:	5f 01       	movw	r10, r30
    1fd4:	08 94       	sec
    1fd6:	81 1c       	adc	r8, r1
    1fd8:	91 1c       	adc	r9, r1
    1fda:	0e 5f       	subi	r16, 0xFE	; 254
    1fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    1fde:	88 85       	ldd	r24, Y+8	; 0x08
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	88 16       	cp	r8, r24
    1fe4:	99 06       	cpc	r9, r25
    1fe6:	0c f4       	brge	.+2      	; 0x1fea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1fe8:	80 cf       	rjmp	.-256    	; 0x1eea <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    1fea:	df 91       	pop	r29
    1fec:	cf 91       	pop	r28
    1fee:	1f 91       	pop	r17
    1ff0:	0f 91       	pop	r16
    1ff2:	ff 90       	pop	r15
    1ff4:	df 90       	pop	r13
    1ff6:	cf 90       	pop	r12
    1ff8:	bf 90       	pop	r11
    1ffa:	af 90       	pop	r10
    1ffc:	9f 90       	pop	r9
    1ffe:	8f 90       	pop	r8
    2000:	08 95       	ret

00002002 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2002:	a5 e0       	ldi	r26, 0x05	; 5
    2004:	b0 e0       	ldi	r27, 0x00	; 0
    2006:	e7 e0       	ldi	r30, 0x07	; 7
    2008:	f0 e1       	ldi	r31, 0x10	; 16
    200a:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__prologue_saves__>
    200e:	4c 01       	movw	r8, r24
    2010:	c6 2e       	mov	r12, r22
    2012:	e7 2e       	mov	r14, r23
    2014:	2d 83       	std	Y+5, r18	; 0x05
    2016:	0e 94 3d 0f 	call	0x1e7a	; 0x1e7a <_ZN16PololuQTRSensors14readCalibratedEPjh>
    201a:	d4 01       	movw	r26, r8
    201c:	18 96       	adiw	r26, 0x08	; 8
    201e:	4c 90       	ld	r4, X
    2020:	18 97       	sbiw	r26, 0x08	; 8
    2022:	de 2c       	mov	r13, r14
    2024:	64 2d       	mov	r22, r4
    2026:	70 e0       	ldi	r23, 0x00	; 0
    2028:	80 e0       	ldi	r24, 0x00	; 0
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	28 ee       	ldi	r18, 0xE8	; 232
    202e:	33 e0       	ldi	r19, 0x03	; 3
    2030:	40 e0       	ldi	r20, 0x00	; 0
    2032:	50 e0       	ldi	r21, 0x00	; 0
    2034:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__mulsi3>
    2038:	69 83       	std	Y+1, r22	; 0x01
    203a:	7a 83       	std	Y+2, r23	; 0x02
    203c:	8b 83       	std	Y+3, r24	; 0x03
    203e:	9c 83       	std	Y+4, r25	; 0x04
    2040:	ee 24       	eor	r14, r14
    2042:	ff 24       	eor	r15, r15
    2044:	87 01       	movw	r16, r14
    2046:	66 24       	eor	r6, r6
    2048:	77 24       	eor	r7, r7
    204a:	88 24       	eor	r8, r8
    204c:	99 24       	eor	r9, r9
    204e:	54 01       	movw	r10, r8
    2050:	55 24       	eor	r5, r5
    2052:	36 c0       	rjmp	.+108    	; 0x20c0 <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    2054:	f6 01       	movw	r30, r12
    2056:	30 81       	ld	r19, Z
    2058:	21 81       	ldd	r18, Z+1	; 0x01
    205a:	42 e0       	ldi	r20, 0x02	; 2
    205c:	24 2e       	mov	r2, r20
    205e:	31 2c       	mov	r3, r1
    2060:	c2 0c       	add	r12, r2
    2062:	d3 1c       	adc	r13, r3
    2064:	c9 01       	movw	r24, r18
    2066:	49 2f       	mov	r20, r25
    2068:	58 2f       	mov	r21, r24
    206a:	1a 01       	movw	r2, r20
    206c:	2d 81       	ldd	r18, Y+5	; 0x05
    206e:	22 23       	and	r18, r18
    2070:	29 f0       	breq	.+10     	; 0x207c <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    2072:	88 ee       	ldi	r24, 0xE8	; 232
    2074:	93 e0       	ldi	r25, 0x03	; 3
    2076:	82 19       	sub	r24, r2
    2078:	93 09       	sbc	r25, r3
    207a:	1c 01       	movw	r2, r24
    207c:	99 ec       	ldi	r25, 0xC9	; 201
    207e:	29 16       	cp	r2, r25
    2080:	31 04       	cpc	r3, r1
    2082:	2c f4       	brge	.+10     	; 0x208e <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    2084:	a3 e3       	ldi	r26, 0x33	; 51
    2086:	2a 16       	cp	r2, r26
    2088:	31 04       	cpc	r3, r1
    208a:	94 f0       	brlt	.+36     	; 0x20b0 <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    208c:	02 c0       	rjmp	.+4      	; 0x2092 <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    208e:	55 24       	eor	r5, r5
    2090:	53 94       	inc	r5
    2092:	b1 01       	movw	r22, r2
    2094:	88 27       	eor	r24, r24
    2096:	77 fd       	sbrc	r23, 7
    2098:	80 95       	com	r24
    209a:	98 2f       	mov	r25, r24
    209c:	a8 01       	movw	r20, r16
    209e:	97 01       	movw	r18, r14
    20a0:	0e 94 e5 11 	call	0x23ca	; 0x23ca <__mulsi3>
    20a4:	86 0e       	add	r8, r22
    20a6:	97 1e       	adc	r9, r23
    20a8:	a8 1e       	adc	r10, r24
    20aa:	b9 1e       	adc	r11, r25
    20ac:	62 0c       	add	r6, r2
    20ae:	73 1c       	adc	r7, r3
    20b0:	88 ee       	ldi	r24, 0xE8	; 232
    20b2:	93 e0       	ldi	r25, 0x03	; 3
    20b4:	a0 e0       	ldi	r26, 0x00	; 0
    20b6:	b0 e0       	ldi	r27, 0x00	; 0
    20b8:	e8 0e       	add	r14, r24
    20ba:	f9 1e       	adc	r15, r25
    20bc:	0a 1f       	adc	r16, r26
    20be:	1b 1f       	adc	r17, r27
    20c0:	89 81       	ldd	r24, Y+1	; 0x01
    20c2:	9a 81       	ldd	r25, Y+2	; 0x02
    20c4:	ab 81       	ldd	r26, Y+3	; 0x03
    20c6:	bc 81       	ldd	r27, Y+4	; 0x04
    20c8:	e8 16       	cp	r14, r24
    20ca:	f9 06       	cpc	r15, r25
    20cc:	0a 07       	cpc	r16, r26
    20ce:	1b 07       	cpc	r17, r27
    20d0:	09 f6       	brne	.-126    	; 0x2054 <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    20d2:	55 20       	and	r5, r5
    20d4:	f1 f4       	brne	.+60     	; 0x2112 <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    20d6:	55 24       	eor	r5, r5
    20d8:	08 94       	sec
    20da:	41 08       	sbc	r4, r1
    20dc:	51 08       	sbc	r5, r1
    20de:	24 ef       	ldi	r18, 0xF4	; 244
    20e0:	31 e0       	ldi	r19, 0x01	; 1
    20e2:	42 9e       	mul	r4, r18
    20e4:	c0 01       	movw	r24, r0
    20e6:	43 9e       	mul	r4, r19
    20e8:	90 0d       	add	r25, r0
    20ea:	52 9e       	mul	r5, r18
    20ec:	90 0d       	add	r25, r0
    20ee:	11 24       	eor	r1, r1
    20f0:	20 91 b9 01 	lds	r18, 0x01B9
    20f4:	30 91 ba 01 	lds	r19, 0x01BA
    20f8:	28 17       	cp	r18, r24
    20fa:	39 07       	cpc	r19, r25
    20fc:	b4 f0       	brlt	.+44     	; 0x212a <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    20fe:	88 ee       	ldi	r24, 0xE8	; 232
    2100:	93 e0       	ldi	r25, 0x03	; 3
    2102:	48 9e       	mul	r4, r24
    2104:	90 01       	movw	r18, r0
    2106:	49 9e       	mul	r4, r25
    2108:	30 0d       	add	r19, r0
    210a:	58 9e       	mul	r5, r24
    210c:	30 0d       	add	r19, r0
    210e:	11 24       	eor	r1, r1
    2110:	0e c0       	rjmp	.+28     	; 0x212e <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    2112:	93 01       	movw	r18, r6
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	50 e0       	ldi	r21, 0x00	; 0
    2118:	c5 01       	movw	r24, r10
    211a:	b4 01       	movw	r22, r8
    211c:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
    2120:	20 93 b9 01 	sts	0x01B9, r18
    2124:	30 93 ba 01 	sts	0x01BA, r19
    2128:	02 c0       	rjmp	.+4      	; 0x212e <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    212a:	20 e0       	ldi	r18, 0x00	; 0
    212c:	30 e0       	ldi	r19, 0x00	; 0
    212e:	c9 01       	movw	r24, r18
    2130:	25 96       	adiw	r28, 0x05	; 5
    2132:	e2 e1       	ldi	r30, 0x12	; 18
    2134:	0c 94 91 12 	jmp	0x2522	; 0x2522 <__epilogue_restores__>

00002138 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    2138:	a7 e6       	ldi	r26, 0x67	; 103
    213a:	b0 e0       	ldi	r27, 0x00	; 0
    213c:	e2 ea       	ldi	r30, 0xA2	; 162
    213e:	f0 e1       	ldi	r31, 0x10	; 16
    2140:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__prologue_saves__>
    2144:	8c 01       	movw	r16, r24
    2146:	4b 01       	movw	r8, r22
    2148:	6a 01       	movw	r12, r20
    214a:	a6 96       	adiw	r28, 0x26	; 38
    214c:	2f af       	std	Y+63, r18	; 0x3f
    214e:	a6 97       	sbiw	r28, 0x26	; 38
    2150:	da 01       	movw	r26, r20
    2152:	8d 91       	ld	r24, X+
    2154:	9c 91       	ld	r25, X
    2156:	11 97       	sbiw	r26, 0x01	; 1
    2158:	00 97       	sbiw	r24, 0x00	; 0
    215a:	e9 f4       	brne	.+58     	; 0x2196 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    215c:	f8 01       	movw	r30, r16
    215e:	80 85       	ldd	r24, Z+8	; 0x08
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	88 0f       	add	r24, r24
    2164:	99 1f       	adc	r25, r25
    2166:	0e 94 c1 12 	call	0x2582	; 0x2582 <malloc>
    216a:	d6 01       	movw	r26, r12
    216c:	11 96       	adiw	r26, 0x01	; 1
    216e:	9c 93       	st	X, r25
    2170:	8e 93       	st	-X, r24
    2172:	00 97       	sbiw	r24, 0x00	; 0
    2174:	09 f4       	brne	.+2      	; 0x2178 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    2176:	e2 c0       	rjmp	.+452    	; 0x233c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2178:	fc 01       	movw	r30, r24
    217a:	80 e0       	ldi	r24, 0x00	; 0
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	03 c0       	rjmp	.+6      	; 0x2186 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    2180:	11 92       	st	Z+, r1
    2182:	11 92       	st	Z+, r1
    2184:	01 96       	adiw	r24, 0x01	; 1
    2186:	d8 01       	movw	r26, r16
    2188:	18 96       	adiw	r26, 0x08	; 8
    218a:	2c 91       	ld	r18, X
    218c:	18 97       	sbiw	r26, 0x08	; 8
    218e:	30 e0       	ldi	r19, 0x00	; 0
    2190:	82 17       	cp	r24, r18
    2192:	93 07       	cpc	r25, r19
    2194:	ac f3       	brlt	.-22     	; 0x2180 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    2196:	f4 01       	movw	r30, r8
    2198:	80 81       	ld	r24, Z
    219a:	91 81       	ldd	r25, Z+1	; 0x01
    219c:	00 97       	sbiw	r24, 0x00	; 0
    219e:	89 f0       	breq	.+34     	; 0x21c2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    21a0:	ee 24       	eor	r14, r14
    21a2:	ff 24       	eor	r15, r15
    21a4:	5e 01       	movw	r10, r28
    21a6:	08 94       	sec
    21a8:	a1 1c       	adc	r10, r1
    21aa:	b1 1c       	adc	r11, r1
    21ac:	b1 e4       	ldi	r27, 0x41	; 65
    21ae:	6b 2e       	mov	r6, r27
    21b0:	71 2c       	mov	r7, r1
    21b2:	6c 0e       	add	r6, r28
    21b4:	7d 1e       	adc	r7, r29
    21b6:	a1 e2       	ldi	r26, 0x21	; 33
    21b8:	4a 2e       	mov	r4, r26
    21ba:	51 2c       	mov	r5, r1
    21bc:	4c 0e       	add	r4, r28
    21be:	5d 1e       	adc	r5, r29
    21c0:	23 c0       	rjmp	.+70     	; 0x2208 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    21c2:	d8 01       	movw	r26, r16
    21c4:	18 96       	adiw	r26, 0x08	; 8
    21c6:	8c 91       	ld	r24, X
    21c8:	90 e0       	ldi	r25, 0x00	; 0
    21ca:	88 0f       	add	r24, r24
    21cc:	99 1f       	adc	r25, r25
    21ce:	0e 94 c1 12 	call	0x2582	; 0x2582 <malloc>
    21d2:	f4 01       	movw	r30, r8
    21d4:	91 83       	std	Z+1, r25	; 0x01
    21d6:	80 83       	st	Z, r24
    21d8:	00 97       	sbiw	r24, 0x00	; 0
    21da:	09 f4       	brne	.+2      	; 0x21de <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    21dc:	af c0       	rjmp	.+350    	; 0x233c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    21de:	fc 01       	movw	r30, r24
    21e0:	80 e0       	ldi	r24, 0x00	; 0
    21e2:	90 e0       	ldi	r25, 0x00	; 0
    21e4:	d8 01       	movw	r26, r16
    21e6:	07 c0       	rjmp	.+14     	; 0x21f6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    21e8:	1e 96       	adiw	r26, 0x0e	; 14
    21ea:	2d 91       	ld	r18, X+
    21ec:	3c 91       	ld	r19, X
    21ee:	1f 97       	sbiw	r26, 0x0f	; 15
    21f0:	21 93       	st	Z+, r18
    21f2:	31 93       	st	Z+, r19
    21f4:	01 96       	adiw	r24, 0x01	; 1
    21f6:	18 96       	adiw	r26, 0x08	; 8
    21f8:	2c 91       	ld	r18, X
    21fa:	18 97       	sbiw	r26, 0x08	; 8
    21fc:	30 e0       	ldi	r19, 0x00	; 0
    21fe:	82 17       	cp	r24, r18
    2200:	93 07       	cpc	r25, r19
    2202:	94 f3       	brlt	.-28     	; 0x21e8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    2204:	8d 01       	movw	r16, r26
    2206:	cc cf       	rjmp	.-104    	; 0x21a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    2208:	c8 01       	movw	r24, r16
    220a:	b5 01       	movw	r22, r10
    220c:	a6 96       	adiw	r28, 0x26	; 38
    220e:	4f ad       	ldd	r20, Y+63	; 0x3f
    2210:	a6 97       	sbiw	r28, 0x26	; 38
    2212:	0e 94 de 0e 	call	0x1dbc	; 0x1dbc <_ZN16PololuQTRSensors4readEPjh>
    2216:	d8 01       	movw	r26, r16
    2218:	18 96       	adiw	r26, 0x08	; 8
    221a:	8c 91       	ld	r24, X
    221c:	18 97       	sbiw	r26, 0x08	; 8
    221e:	e8 2f       	mov	r30, r24
    2220:	f0 e0       	ldi	r31, 0x00	; 0
    2222:	a5 96       	adiw	r28, 0x25	; 37
    2224:	ff af       	std	Y+63, r31	; 0x3f
    2226:	ee af       	std	Y+62, r30	; 0x3e
    2228:	a5 97       	sbiw	r28, 0x25	; 37
    222a:	13 01       	movw	r2, r6
    222c:	f5 01       	movw	r30, r10
    222e:	a3 96       	adiw	r28, 0x23	; 35
    2230:	5f ae       	std	Y+63, r5	; 0x3f
    2232:	4e ae       	std	Y+62, r4	; 0x3e
    2234:	a3 97       	sbiw	r28, 0x23	; 35
    2236:	93 01       	movw	r18, r6
    2238:	40 e0       	ldi	r20, 0x00	; 0
    223a:	50 e0       	ldi	r21, 0x00	; 0
    223c:	a8 96       	adiw	r28, 0x28	; 40
    223e:	5f ae       	std	Y+63, r5	; 0x3f
    2240:	4e ae       	std	Y+62, r4	; 0x3e
    2242:	a8 97       	sbiw	r28, 0x28	; 40
    2244:	37 c0       	rjmp	.+110    	; 0x22b4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    2246:	e1 14       	cp	r14, r1
    2248:	f1 04       	cpc	r15, r1
    224a:	61 f0       	breq	.+24     	; 0x2264 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    224c:	a8 96       	adiw	r28, 0x28	; 40
    224e:	ae ad       	ldd	r26, Y+62	; 0x3e
    2250:	bf ad       	ldd	r27, Y+63	; 0x3f
    2252:	a8 97       	sbiw	r28, 0x28	; 40
    2254:	6d 91       	ld	r22, X+
    2256:	7c 91       	ld	r23, X
    2258:	11 97       	sbiw	r26, 0x01	; 1
    225a:	80 81       	ld	r24, Z
    225c:	91 81       	ldd	r25, Z+1	; 0x01
    225e:	68 17       	cp	r22, r24
    2260:	79 07       	cpc	r23, r25
    2262:	60 f4       	brcc	.+24     	; 0x227c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    2264:	80 81       	ld	r24, Z
    2266:	91 81       	ldd	r25, Z+1	; 0x01
    2268:	a8 96       	adiw	r28, 0x28	; 40
    226a:	ae ad       	ldd	r26, Y+62	; 0x3e
    226c:	bf ad       	ldd	r27, Y+63	; 0x3f
    226e:	a8 97       	sbiw	r28, 0x28	; 40
    2270:	11 96       	adiw	r26, 0x01	; 1
    2272:	9c 93       	st	X, r25
    2274:	8e 93       	st	-X, r24
    2276:	e1 14       	cp	r14, r1
    2278:	f1 04       	cpc	r15, r1
    227a:	49 f0       	breq	.+18     	; 0x228e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    227c:	d9 01       	movw	r26, r18
    227e:	6d 91       	ld	r22, X+
    2280:	7c 91       	ld	r23, X
    2282:	11 97       	sbiw	r26, 0x01	; 1
    2284:	80 81       	ld	r24, Z
    2286:	91 81       	ldd	r25, Z+1	; 0x01
    2288:	86 17       	cp	r24, r22
    228a:	97 07       	cpc	r25, r23
    228c:	28 f4       	brcc	.+10     	; 0x2298 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    228e:	80 81       	ld	r24, Z
    2290:	91 81       	ldd	r25, Z+1	; 0x01
    2292:	d9 01       	movw	r26, r18
    2294:	8d 93       	st	X+, r24
    2296:	9c 93       	st	X, r25
    2298:	4f 5f       	subi	r20, 0xFF	; 255
    229a:	5f 4f       	sbci	r21, 0xFF	; 255
    229c:	2e 5f       	subi	r18, 0xFE	; 254
    229e:	3f 4f       	sbci	r19, 0xFF	; 255
    22a0:	32 96       	adiw	r30, 0x02	; 2
    22a2:	a8 96       	adiw	r28, 0x28	; 40
    22a4:	8e ad       	ldd	r24, Y+62	; 0x3e
    22a6:	9f ad       	ldd	r25, Y+63	; 0x3f
    22a8:	a8 97       	sbiw	r28, 0x28	; 40
    22aa:	02 96       	adiw	r24, 0x02	; 2
    22ac:	a8 96       	adiw	r28, 0x28	; 40
    22ae:	9f af       	std	Y+63, r25	; 0x3f
    22b0:	8e af       	std	Y+62, r24	; 0x3e
    22b2:	a8 97       	sbiw	r28, 0x28	; 40
    22b4:	a5 96       	adiw	r28, 0x25	; 37
    22b6:	ae ad       	ldd	r26, Y+62	; 0x3e
    22b8:	bf ad       	ldd	r27, Y+63	; 0x3f
    22ba:	a5 97       	sbiw	r28, 0x25	; 37
    22bc:	4a 17       	cp	r20, r26
    22be:	5b 07       	cpc	r21, r27
    22c0:	14 f2       	brlt	.-124    	; 0x2246 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    22c2:	08 94       	sec
    22c4:	e1 1c       	adc	r14, r1
    22c6:	f1 1c       	adc	r15, r1
    22c8:	ba e0       	ldi	r27, 0x0A	; 10
    22ca:	eb 16       	cp	r14, r27
    22cc:	f1 04       	cpc	r15, r1
    22ce:	09 f0       	breq	.+2      	; 0x22d2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    22d0:	9b cf       	rjmp	.-202    	; 0x2208 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    22d2:	80 e0       	ldi	r24, 0x00	; 0
    22d4:	90 e0       	ldi	r25, 0x00	; 0
    22d6:	2c c0       	rjmp	.+88     	; 0x2330 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    22d8:	f1 01       	movw	r30, r2
    22da:	41 91       	ld	r20, Z+
    22dc:	51 91       	ld	r21, Z+
    22de:	1f 01       	movw	r2, r30
    22e0:	bc 01       	movw	r22, r24
    22e2:	66 0f       	add	r22, r22
    22e4:	77 1f       	adc	r23, r23
    22e6:	d6 01       	movw	r26, r12
    22e8:	ed 91       	ld	r30, X+
    22ea:	fc 91       	ld	r31, X
    22ec:	11 97       	sbiw	r26, 0x01	; 1
    22ee:	e6 0f       	add	r30, r22
    22f0:	f7 1f       	adc	r31, r23
    22f2:	20 81       	ld	r18, Z
    22f4:	31 81       	ldd	r19, Z+1	; 0x01
    22f6:	24 17       	cp	r18, r20
    22f8:	35 07       	cpc	r19, r21
    22fa:	10 f4       	brcc	.+4      	; 0x2300 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    22fc:	51 83       	std	Z+1, r21	; 0x01
    22fe:	40 83       	st	Z, r20
    2300:	a3 96       	adiw	r28, 0x23	; 35
    2302:	ee ad       	ldd	r30, Y+62	; 0x3e
    2304:	ff ad       	ldd	r31, Y+63	; 0x3f
    2306:	a3 97       	sbiw	r28, 0x23	; 35
    2308:	41 91       	ld	r20, Z+
    230a:	51 91       	ld	r21, Z+
    230c:	a3 96       	adiw	r28, 0x23	; 35
    230e:	ff af       	std	Y+63, r31	; 0x3f
    2310:	ee af       	std	Y+62, r30	; 0x3e
    2312:	a3 97       	sbiw	r28, 0x23	; 35
    2314:	d4 01       	movw	r26, r8
    2316:	ed 91       	ld	r30, X+
    2318:	fc 91       	ld	r31, X
    231a:	11 97       	sbiw	r26, 0x01	; 1
    231c:	e6 0f       	add	r30, r22
    231e:	f7 1f       	adc	r31, r23
    2320:	20 81       	ld	r18, Z
    2322:	31 81       	ldd	r19, Z+1	; 0x01
    2324:	42 17       	cp	r20, r18
    2326:	53 07       	cpc	r21, r19
    2328:	10 f4       	brcc	.+4      	; 0x232e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    232a:	51 83       	std	Z+1, r21	; 0x01
    232c:	40 83       	st	Z, r20
    232e:	01 96       	adiw	r24, 0x01	; 1
    2330:	f8 01       	movw	r30, r16
    2332:	20 85       	ldd	r18, Z+8	; 0x08
    2334:	30 e0       	ldi	r19, 0x00	; 0
    2336:	82 17       	cp	r24, r18
    2338:	93 07       	cpc	r25, r19
    233a:	74 f2       	brlt	.-100    	; 0x22d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    233c:	c9 59       	subi	r28, 0x99	; 153
    233e:	df 4f       	sbci	r29, 0xFF	; 255
    2340:	e2 e1       	ldi	r30, 0x12	; 18
    2342:	0c 94 91 12 	jmp	0x2522	; 0x2522 <__epilogue_restores__>

00002346 <_ZN16PololuQTRSensors9calibrateEh>:
    2346:	1f 93       	push	r17
    2348:	cf 93       	push	r28
    234a:	df 93       	push	r29
    234c:	ec 01       	movw	r28, r24
    234e:	16 2f       	mov	r17, r22
    2350:	86 2f       	mov	r24, r22
    2352:	81 50       	subi	r24, 0x01	; 1
    2354:	82 30       	cpi	r24, 0x02	; 2
    2356:	58 f4       	brcc	.+22     	; 0x236e <_ZN16PololuQTRSensors9calibrateEh+0x28>
    2358:	ae 01       	movw	r20, r28
    235a:	4e 5f       	subi	r20, 0xFE	; 254
    235c:	5f 4f       	sbci	r21, 0xFF	; 255
    235e:	ce 01       	movw	r24, r28
    2360:	be 01       	movw	r22, r28
    2362:	21 e0       	ldi	r18, 0x01	; 1
    2364:	0e 94 9c 10 	call	0x2138	; 0x2138 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2368:	12 30       	cpi	r17, 0x02	; 2
    236a:	19 f0       	breq	.+6      	; 0x2372 <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    236c:	0c c0       	rjmp	.+24     	; 0x2386 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    236e:	66 23       	and	r22, r22
    2370:	51 f4       	brne	.+20     	; 0x2386 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2372:	be 01       	movw	r22, r28
    2374:	6c 5f       	subi	r22, 0xFC	; 252
    2376:	7f 4f       	sbci	r23, 0xFF	; 255
    2378:	ae 01       	movw	r20, r28
    237a:	4a 5f       	subi	r20, 0xFA	; 250
    237c:	5f 4f       	sbci	r21, 0xFF	; 255
    237e:	ce 01       	movw	r24, r28
    2380:	20 e0       	ldi	r18, 0x00	; 0
    2382:	0e 94 9c 10 	call	0x2138	; 0x2138 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2386:	df 91       	pop	r29
    2388:	cf 91       	pop	r28
    238a:	1f 91       	pop	r17
    238c:	08 95       	ret

0000238e <_ZN16PololuQTRSensorsD1Ev>:
    238e:	cf 93       	push	r28
    2390:	df 93       	push	r29
    2392:	ec 01       	movw	r28, r24
    2394:	8a 81       	ldd	r24, Y+2	; 0x02
    2396:	9b 81       	ldd	r25, Y+3	; 0x03
    2398:	00 97       	sbiw	r24, 0x00	; 0
    239a:	11 f0       	breq	.+4      	; 0x23a0 <_ZN16PololuQTRSensorsD1Ev+0x12>
    239c:	0e 94 59 13 	call	0x26b2	; 0x26b2 <free>
    23a0:	8e 81       	ldd	r24, Y+6	; 0x06
    23a2:	9f 81       	ldd	r25, Y+7	; 0x07
    23a4:	00 97       	sbiw	r24, 0x00	; 0
    23a6:	11 f0       	breq	.+4      	; 0x23ac <_ZN16PololuQTRSensorsD1Ev+0x1e>
    23a8:	0e 94 59 13 	call	0x26b2	; 0x26b2 <free>
    23ac:	88 81       	ld	r24, Y
    23ae:	99 81       	ldd	r25, Y+1	; 0x01
    23b0:	00 97       	sbiw	r24, 0x00	; 0
    23b2:	11 f0       	breq	.+4      	; 0x23b8 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    23b4:	0e 94 59 13 	call	0x26b2	; 0x26b2 <free>
    23b8:	8c 81       	ldd	r24, Y+4	; 0x04
    23ba:	9d 81       	ldd	r25, Y+5	; 0x05
    23bc:	00 97       	sbiw	r24, 0x00	; 0
    23be:	11 f0       	breq	.+4      	; 0x23c4 <_ZN16PololuQTRSensorsD1Ev+0x36>
    23c0:	0e 94 59 13 	call	0x26b2	; 0x26b2 <free>
    23c4:	df 91       	pop	r29
    23c6:	cf 91       	pop	r28
    23c8:	08 95       	ret

000023ca <__mulsi3>:
    23ca:	db 01       	movw	r26, r22
    23cc:	8f 93       	push	r24
    23ce:	9f 93       	push	r25
    23d0:	0e 94 6a 12 	call	0x24d4	; 0x24d4 <__muluhisi3>
    23d4:	bf 91       	pop	r27
    23d6:	af 91       	pop	r26
    23d8:	a2 9f       	mul	r26, r18
    23da:	80 0d       	add	r24, r0
    23dc:	91 1d       	adc	r25, r1
    23de:	a3 9f       	mul	r26, r19
    23e0:	90 0d       	add	r25, r0
    23e2:	b2 9f       	mul	r27, r18
    23e4:	90 0d       	add	r25, r0
    23e6:	11 24       	eor	r1, r1
    23e8:	08 95       	ret

000023ea <__udivmodqi4>:
    23ea:	99 1b       	sub	r25, r25
    23ec:	79 e0       	ldi	r23, 0x09	; 9
    23ee:	04 c0       	rjmp	.+8      	; 0x23f8 <__udivmodqi4_ep>

000023f0 <__udivmodqi4_loop>:
    23f0:	99 1f       	adc	r25, r25
    23f2:	96 17       	cp	r25, r22
    23f4:	08 f0       	brcs	.+2      	; 0x23f8 <__udivmodqi4_ep>
    23f6:	96 1b       	sub	r25, r22

000023f8 <__udivmodqi4_ep>:
    23f8:	88 1f       	adc	r24, r24
    23fa:	7a 95       	dec	r23
    23fc:	c9 f7       	brne	.-14     	; 0x23f0 <__udivmodqi4_loop>
    23fe:	80 95       	com	r24
    2400:	08 95       	ret

00002402 <__udivmodhi4>:
    2402:	aa 1b       	sub	r26, r26
    2404:	bb 1b       	sub	r27, r27
    2406:	51 e1       	ldi	r21, 0x11	; 17
    2408:	07 c0       	rjmp	.+14     	; 0x2418 <__udivmodhi4_ep>

0000240a <__udivmodhi4_loop>:
    240a:	aa 1f       	adc	r26, r26
    240c:	bb 1f       	adc	r27, r27
    240e:	a6 17       	cp	r26, r22
    2410:	b7 07       	cpc	r27, r23
    2412:	10 f0       	brcs	.+4      	; 0x2418 <__udivmodhi4_ep>
    2414:	a6 1b       	sub	r26, r22
    2416:	b7 0b       	sbc	r27, r23

00002418 <__udivmodhi4_ep>:
    2418:	88 1f       	adc	r24, r24
    241a:	99 1f       	adc	r25, r25
    241c:	5a 95       	dec	r21
    241e:	a9 f7       	brne	.-22     	; 0x240a <__udivmodhi4_loop>
    2420:	80 95       	com	r24
    2422:	90 95       	com	r25
    2424:	bc 01       	movw	r22, r24
    2426:	cd 01       	movw	r24, r26
    2428:	08 95       	ret

0000242a <__divmodhi4>:
    242a:	97 fb       	bst	r25, 7
    242c:	07 2e       	mov	r0, r23
    242e:	16 f4       	brtc	.+4      	; 0x2434 <__divmodhi4+0xa>
    2430:	00 94       	com	r0
    2432:	07 d0       	rcall	.+14     	; 0x2442 <__divmodhi4_neg1>
    2434:	77 fd       	sbrc	r23, 7
    2436:	09 d0       	rcall	.+18     	; 0x244a <__divmodhi4_neg2>
    2438:	0e 94 01 12 	call	0x2402	; 0x2402 <__udivmodhi4>
    243c:	07 fc       	sbrc	r0, 7
    243e:	05 d0       	rcall	.+10     	; 0x244a <__divmodhi4_neg2>
    2440:	3e f4       	brtc	.+14     	; 0x2450 <__divmodhi4_exit>

00002442 <__divmodhi4_neg1>:
    2442:	90 95       	com	r25
    2444:	81 95       	neg	r24
    2446:	9f 4f       	sbci	r25, 0xFF	; 255
    2448:	08 95       	ret

0000244a <__divmodhi4_neg2>:
    244a:	70 95       	com	r23
    244c:	61 95       	neg	r22
    244e:	7f 4f       	sbci	r23, 0xFF	; 255

00002450 <__divmodhi4_exit>:
    2450:	08 95       	ret

00002452 <__udivmodsi4>:
    2452:	a1 e2       	ldi	r26, 0x21	; 33
    2454:	1a 2e       	mov	r1, r26
    2456:	aa 1b       	sub	r26, r26
    2458:	bb 1b       	sub	r27, r27
    245a:	fd 01       	movw	r30, r26
    245c:	0d c0       	rjmp	.+26     	; 0x2478 <__udivmodsi4_ep>

0000245e <__udivmodsi4_loop>:
    245e:	aa 1f       	adc	r26, r26
    2460:	bb 1f       	adc	r27, r27
    2462:	ee 1f       	adc	r30, r30
    2464:	ff 1f       	adc	r31, r31
    2466:	a2 17       	cp	r26, r18
    2468:	b3 07       	cpc	r27, r19
    246a:	e4 07       	cpc	r30, r20
    246c:	f5 07       	cpc	r31, r21
    246e:	20 f0       	brcs	.+8      	; 0x2478 <__udivmodsi4_ep>
    2470:	a2 1b       	sub	r26, r18
    2472:	b3 0b       	sbc	r27, r19
    2474:	e4 0b       	sbc	r30, r20
    2476:	f5 0b       	sbc	r31, r21

00002478 <__udivmodsi4_ep>:
    2478:	66 1f       	adc	r22, r22
    247a:	77 1f       	adc	r23, r23
    247c:	88 1f       	adc	r24, r24
    247e:	99 1f       	adc	r25, r25
    2480:	1a 94       	dec	r1
    2482:	69 f7       	brne	.-38     	; 0x245e <__udivmodsi4_loop>
    2484:	60 95       	com	r22
    2486:	70 95       	com	r23
    2488:	80 95       	com	r24
    248a:	90 95       	com	r25
    248c:	9b 01       	movw	r18, r22
    248e:	ac 01       	movw	r20, r24
    2490:	bd 01       	movw	r22, r26
    2492:	cf 01       	movw	r24, r30
    2494:	08 95       	ret

00002496 <__divmodsi4>:
    2496:	05 2e       	mov	r0, r21
    2498:	97 fb       	bst	r25, 7
    249a:	1e f4       	brtc	.+6      	; 0x24a2 <__divmodsi4+0xc>
    249c:	00 94       	com	r0
    249e:	0e 94 62 12 	call	0x24c4	; 0x24c4 <__negsi2>
    24a2:	57 fd       	sbrc	r21, 7
    24a4:	07 d0       	rcall	.+14     	; 0x24b4 <__divmodsi4_neg2>
    24a6:	0e 94 29 12 	call	0x2452	; 0x2452 <__udivmodsi4>
    24aa:	07 fc       	sbrc	r0, 7
    24ac:	03 d0       	rcall	.+6      	; 0x24b4 <__divmodsi4_neg2>
    24ae:	4e f4       	brtc	.+18     	; 0x24c2 <__divmodsi4_exit>
    24b0:	0c 94 62 12 	jmp	0x24c4	; 0x24c4 <__negsi2>

000024b4 <__divmodsi4_neg2>:
    24b4:	50 95       	com	r21
    24b6:	40 95       	com	r20
    24b8:	30 95       	com	r19
    24ba:	21 95       	neg	r18
    24bc:	3f 4f       	sbci	r19, 0xFF	; 255
    24be:	4f 4f       	sbci	r20, 0xFF	; 255
    24c0:	5f 4f       	sbci	r21, 0xFF	; 255

000024c2 <__divmodsi4_exit>:
    24c2:	08 95       	ret

000024c4 <__negsi2>:
    24c4:	90 95       	com	r25
    24c6:	80 95       	com	r24
    24c8:	70 95       	com	r23
    24ca:	61 95       	neg	r22
    24cc:	7f 4f       	sbci	r23, 0xFF	; 255
    24ce:	8f 4f       	sbci	r24, 0xFF	; 255
    24d0:	9f 4f       	sbci	r25, 0xFF	; 255
    24d2:	08 95       	ret

000024d4 <__muluhisi3>:
    24d4:	0e 94 b2 12 	call	0x2564	; 0x2564 <__umulhisi3>
    24d8:	a5 9f       	mul	r26, r21
    24da:	90 0d       	add	r25, r0
    24dc:	b4 9f       	mul	r27, r20
    24de:	90 0d       	add	r25, r0
    24e0:	a4 9f       	mul	r26, r20
    24e2:	80 0d       	add	r24, r0
    24e4:	91 1d       	adc	r25, r1
    24e6:	11 24       	eor	r1, r1
    24e8:	08 95       	ret

000024ea <__prologue_saves__>:
    24ea:	2f 92       	push	r2
    24ec:	3f 92       	push	r3
    24ee:	4f 92       	push	r4
    24f0:	5f 92       	push	r5
    24f2:	6f 92       	push	r6
    24f4:	7f 92       	push	r7
    24f6:	8f 92       	push	r8
    24f8:	9f 92       	push	r9
    24fa:	af 92       	push	r10
    24fc:	bf 92       	push	r11
    24fe:	cf 92       	push	r12
    2500:	df 92       	push	r13
    2502:	ef 92       	push	r14
    2504:	ff 92       	push	r15
    2506:	0f 93       	push	r16
    2508:	1f 93       	push	r17
    250a:	cf 93       	push	r28
    250c:	df 93       	push	r29
    250e:	cd b7       	in	r28, 0x3d	; 61
    2510:	de b7       	in	r29, 0x3e	; 62
    2512:	ca 1b       	sub	r28, r26
    2514:	db 0b       	sbc	r29, r27
    2516:	0f b6       	in	r0, 0x3f	; 63
    2518:	f8 94       	cli
    251a:	de bf       	out	0x3e, r29	; 62
    251c:	0f be       	out	0x3f, r0	; 63
    251e:	cd bf       	out	0x3d, r28	; 61
    2520:	09 94       	ijmp

00002522 <__epilogue_restores__>:
    2522:	2a 88       	ldd	r2, Y+18	; 0x12
    2524:	39 88       	ldd	r3, Y+17	; 0x11
    2526:	48 88       	ldd	r4, Y+16	; 0x10
    2528:	5f 84       	ldd	r5, Y+15	; 0x0f
    252a:	6e 84       	ldd	r6, Y+14	; 0x0e
    252c:	7d 84       	ldd	r7, Y+13	; 0x0d
    252e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2530:	9b 84       	ldd	r9, Y+11	; 0x0b
    2532:	aa 84       	ldd	r10, Y+10	; 0x0a
    2534:	b9 84       	ldd	r11, Y+9	; 0x09
    2536:	c8 84       	ldd	r12, Y+8	; 0x08
    2538:	df 80       	ldd	r13, Y+7	; 0x07
    253a:	ee 80       	ldd	r14, Y+6	; 0x06
    253c:	fd 80       	ldd	r15, Y+5	; 0x05
    253e:	0c 81       	ldd	r16, Y+4	; 0x04
    2540:	1b 81       	ldd	r17, Y+3	; 0x03
    2542:	aa 81       	ldd	r26, Y+2	; 0x02
    2544:	b9 81       	ldd	r27, Y+1	; 0x01
    2546:	ce 0f       	add	r28, r30
    2548:	d1 1d       	adc	r29, r1
    254a:	0f b6       	in	r0, 0x3f	; 63
    254c:	f8 94       	cli
    254e:	de bf       	out	0x3e, r29	; 62
    2550:	0f be       	out	0x3f, r0	; 63
    2552:	cd bf       	out	0x3d, r28	; 61
    2554:	ed 01       	movw	r28, r26
    2556:	08 95       	ret

00002558 <__tablejump2__>:
    2558:	ee 0f       	add	r30, r30
    255a:	ff 1f       	adc	r31, r31

0000255c <__tablejump__>:
    255c:	05 90       	lpm	r0, Z+
    255e:	f4 91       	lpm	r31, Z
    2560:	e0 2d       	mov	r30, r0
    2562:	09 94       	ijmp

00002564 <__umulhisi3>:
    2564:	a2 9f       	mul	r26, r18
    2566:	b0 01       	movw	r22, r0
    2568:	b3 9f       	mul	r27, r19
    256a:	c0 01       	movw	r24, r0
    256c:	a3 9f       	mul	r26, r19
    256e:	70 0d       	add	r23, r0
    2570:	81 1d       	adc	r24, r1
    2572:	11 24       	eor	r1, r1
    2574:	91 1d       	adc	r25, r1
    2576:	b2 9f       	mul	r27, r18
    2578:	70 0d       	add	r23, r0
    257a:	81 1d       	adc	r24, r1
    257c:	11 24       	eor	r1, r1
    257e:	91 1d       	adc	r25, r1
    2580:	08 95       	ret

00002582 <malloc>:
    2582:	cf 93       	push	r28
    2584:	df 93       	push	r29
    2586:	82 30       	cpi	r24, 0x02	; 2
    2588:	91 05       	cpc	r25, r1
    258a:	10 f4       	brcc	.+4      	; 0x2590 <malloc+0xe>
    258c:	82 e0       	ldi	r24, 0x02	; 2
    258e:	90 e0       	ldi	r25, 0x00	; 0
    2590:	e0 91 bf 01 	lds	r30, 0x01BF
    2594:	f0 91 c0 01 	lds	r31, 0x01C0
    2598:	20 e0       	ldi	r18, 0x00	; 0
    259a:	30 e0       	ldi	r19, 0x00	; 0
    259c:	a0 e0       	ldi	r26, 0x00	; 0
    259e:	b0 e0       	ldi	r27, 0x00	; 0
    25a0:	30 97       	sbiw	r30, 0x00	; 0
    25a2:	39 f1       	breq	.+78     	; 0x25f2 <malloc+0x70>
    25a4:	40 81       	ld	r20, Z
    25a6:	51 81       	ldd	r21, Z+1	; 0x01
    25a8:	48 17       	cp	r20, r24
    25aa:	59 07       	cpc	r21, r25
    25ac:	b8 f0       	brcs	.+46     	; 0x25dc <malloc+0x5a>
    25ae:	48 17       	cp	r20, r24
    25b0:	59 07       	cpc	r21, r25
    25b2:	71 f4       	brne	.+28     	; 0x25d0 <malloc+0x4e>
    25b4:	82 81       	ldd	r24, Z+2	; 0x02
    25b6:	93 81       	ldd	r25, Z+3	; 0x03
    25b8:	10 97       	sbiw	r26, 0x00	; 0
    25ba:	29 f0       	breq	.+10     	; 0x25c6 <malloc+0x44>
    25bc:	13 96       	adiw	r26, 0x03	; 3
    25be:	9c 93       	st	X, r25
    25c0:	8e 93       	st	-X, r24
    25c2:	12 97       	sbiw	r26, 0x02	; 2
    25c4:	2c c0       	rjmp	.+88     	; 0x261e <malloc+0x9c>
    25c6:	90 93 c0 01 	sts	0x01C0, r25
    25ca:	80 93 bf 01 	sts	0x01BF, r24
    25ce:	27 c0       	rjmp	.+78     	; 0x261e <malloc+0x9c>
    25d0:	21 15       	cp	r18, r1
    25d2:	31 05       	cpc	r19, r1
    25d4:	31 f0       	breq	.+12     	; 0x25e2 <malloc+0x60>
    25d6:	42 17       	cp	r20, r18
    25d8:	53 07       	cpc	r21, r19
    25da:	18 f0       	brcs	.+6      	; 0x25e2 <malloc+0x60>
    25dc:	a9 01       	movw	r20, r18
    25de:	db 01       	movw	r26, r22
    25e0:	01 c0       	rjmp	.+2      	; 0x25e4 <malloc+0x62>
    25e2:	ef 01       	movw	r28, r30
    25e4:	9a 01       	movw	r18, r20
    25e6:	bd 01       	movw	r22, r26
    25e8:	df 01       	movw	r26, r30
    25ea:	02 80       	ldd	r0, Z+2	; 0x02
    25ec:	f3 81       	ldd	r31, Z+3	; 0x03
    25ee:	e0 2d       	mov	r30, r0
    25f0:	d7 cf       	rjmp	.-82     	; 0x25a0 <malloc+0x1e>
    25f2:	21 15       	cp	r18, r1
    25f4:	31 05       	cpc	r19, r1
    25f6:	f9 f0       	breq	.+62     	; 0x2636 <malloc+0xb4>
    25f8:	28 1b       	sub	r18, r24
    25fa:	39 0b       	sbc	r19, r25
    25fc:	24 30       	cpi	r18, 0x04	; 4
    25fe:	31 05       	cpc	r19, r1
    2600:	80 f4       	brcc	.+32     	; 0x2622 <malloc+0xa0>
    2602:	8a 81       	ldd	r24, Y+2	; 0x02
    2604:	9b 81       	ldd	r25, Y+3	; 0x03
    2606:	61 15       	cp	r22, r1
    2608:	71 05       	cpc	r23, r1
    260a:	21 f0       	breq	.+8      	; 0x2614 <malloc+0x92>
    260c:	fb 01       	movw	r30, r22
    260e:	93 83       	std	Z+3, r25	; 0x03
    2610:	82 83       	std	Z+2, r24	; 0x02
    2612:	04 c0       	rjmp	.+8      	; 0x261c <malloc+0x9a>
    2614:	90 93 c0 01 	sts	0x01C0, r25
    2618:	80 93 bf 01 	sts	0x01BF, r24
    261c:	fe 01       	movw	r30, r28
    261e:	32 96       	adiw	r30, 0x02	; 2
    2620:	44 c0       	rjmp	.+136    	; 0x26aa <malloc+0x128>
    2622:	fe 01       	movw	r30, r28
    2624:	e2 0f       	add	r30, r18
    2626:	f3 1f       	adc	r31, r19
    2628:	81 93       	st	Z+, r24
    262a:	91 93       	st	Z+, r25
    262c:	22 50       	subi	r18, 0x02	; 2
    262e:	31 09       	sbc	r19, r1
    2630:	39 83       	std	Y+1, r19	; 0x01
    2632:	28 83       	st	Y, r18
    2634:	3a c0       	rjmp	.+116    	; 0x26aa <malloc+0x128>
    2636:	20 91 bd 01 	lds	r18, 0x01BD
    263a:	30 91 be 01 	lds	r19, 0x01BE
    263e:	23 2b       	or	r18, r19
    2640:	41 f4       	brne	.+16     	; 0x2652 <malloc+0xd0>
    2642:	20 91 2d 01 	lds	r18, 0x012D
    2646:	30 91 2e 01 	lds	r19, 0x012E
    264a:	30 93 be 01 	sts	0x01BE, r19
    264e:	20 93 bd 01 	sts	0x01BD, r18
    2652:	20 91 2b 01 	lds	r18, 0x012B
    2656:	30 91 2c 01 	lds	r19, 0x012C
    265a:	21 15       	cp	r18, r1
    265c:	31 05       	cpc	r19, r1
    265e:	41 f4       	brne	.+16     	; 0x2670 <malloc+0xee>
    2660:	2d b7       	in	r18, 0x3d	; 61
    2662:	3e b7       	in	r19, 0x3e	; 62
    2664:	40 91 2f 01 	lds	r20, 0x012F
    2668:	50 91 30 01 	lds	r21, 0x0130
    266c:	24 1b       	sub	r18, r20
    266e:	35 0b       	sbc	r19, r21
    2670:	e0 91 bd 01 	lds	r30, 0x01BD
    2674:	f0 91 be 01 	lds	r31, 0x01BE
    2678:	e2 17       	cp	r30, r18
    267a:	f3 07       	cpc	r31, r19
    267c:	a0 f4       	brcc	.+40     	; 0x26a6 <malloc+0x124>
    267e:	2e 1b       	sub	r18, r30
    2680:	3f 0b       	sbc	r19, r31
    2682:	28 17       	cp	r18, r24
    2684:	39 07       	cpc	r19, r25
    2686:	78 f0       	brcs	.+30     	; 0x26a6 <malloc+0x124>
    2688:	ac 01       	movw	r20, r24
    268a:	4e 5f       	subi	r20, 0xFE	; 254
    268c:	5f 4f       	sbci	r21, 0xFF	; 255
    268e:	24 17       	cp	r18, r20
    2690:	35 07       	cpc	r19, r21
    2692:	48 f0       	brcs	.+18     	; 0x26a6 <malloc+0x124>
    2694:	4e 0f       	add	r20, r30
    2696:	5f 1f       	adc	r21, r31
    2698:	50 93 be 01 	sts	0x01BE, r21
    269c:	40 93 bd 01 	sts	0x01BD, r20
    26a0:	81 93       	st	Z+, r24
    26a2:	91 93       	st	Z+, r25
    26a4:	02 c0       	rjmp	.+4      	; 0x26aa <malloc+0x128>
    26a6:	e0 e0       	ldi	r30, 0x00	; 0
    26a8:	f0 e0       	ldi	r31, 0x00	; 0
    26aa:	cf 01       	movw	r24, r30
    26ac:	df 91       	pop	r29
    26ae:	cf 91       	pop	r28
    26b0:	08 95       	ret

000026b2 <free>:
    26b2:	cf 93       	push	r28
    26b4:	df 93       	push	r29
    26b6:	00 97       	sbiw	r24, 0x00	; 0
    26b8:	09 f4       	brne	.+2      	; 0x26bc <free+0xa>
    26ba:	87 c0       	rjmp	.+270    	; 0x27ca <free+0x118>
    26bc:	fc 01       	movw	r30, r24
    26be:	32 97       	sbiw	r30, 0x02	; 2
    26c0:	13 82       	std	Z+3, r1	; 0x03
    26c2:	12 82       	std	Z+2, r1	; 0x02
    26c4:	c0 91 bf 01 	lds	r28, 0x01BF
    26c8:	d0 91 c0 01 	lds	r29, 0x01C0
    26cc:	20 97       	sbiw	r28, 0x00	; 0
    26ce:	81 f4       	brne	.+32     	; 0x26f0 <free+0x3e>
    26d0:	20 81       	ld	r18, Z
    26d2:	31 81       	ldd	r19, Z+1	; 0x01
    26d4:	28 0f       	add	r18, r24
    26d6:	39 1f       	adc	r19, r25
    26d8:	80 91 bd 01 	lds	r24, 0x01BD
    26dc:	90 91 be 01 	lds	r25, 0x01BE
    26e0:	82 17       	cp	r24, r18
    26e2:	93 07       	cpc	r25, r19
    26e4:	79 f5       	brne	.+94     	; 0x2744 <free+0x92>
    26e6:	f0 93 be 01 	sts	0x01BE, r31
    26ea:	e0 93 bd 01 	sts	0x01BD, r30
    26ee:	6d c0       	rjmp	.+218    	; 0x27ca <free+0x118>
    26f0:	de 01       	movw	r26, r28
    26f2:	20 e0       	ldi	r18, 0x00	; 0
    26f4:	30 e0       	ldi	r19, 0x00	; 0
    26f6:	ae 17       	cp	r26, r30
    26f8:	bf 07       	cpc	r27, r31
    26fa:	50 f4       	brcc	.+20     	; 0x2710 <free+0x5e>
    26fc:	12 96       	adiw	r26, 0x02	; 2
    26fe:	4d 91       	ld	r20, X+
    2700:	5c 91       	ld	r21, X
    2702:	13 97       	sbiw	r26, 0x03	; 3
    2704:	9d 01       	movw	r18, r26
    2706:	41 15       	cp	r20, r1
    2708:	51 05       	cpc	r21, r1
    270a:	09 f1       	breq	.+66     	; 0x274e <free+0x9c>
    270c:	da 01       	movw	r26, r20
    270e:	f3 cf       	rjmp	.-26     	; 0x26f6 <free+0x44>
    2710:	b3 83       	std	Z+3, r27	; 0x03
    2712:	a2 83       	std	Z+2, r26	; 0x02
    2714:	40 81       	ld	r20, Z
    2716:	51 81       	ldd	r21, Z+1	; 0x01
    2718:	84 0f       	add	r24, r20
    271a:	95 1f       	adc	r25, r21
    271c:	8a 17       	cp	r24, r26
    271e:	9b 07       	cpc	r25, r27
    2720:	71 f4       	brne	.+28     	; 0x273e <free+0x8c>
    2722:	8d 91       	ld	r24, X+
    2724:	9c 91       	ld	r25, X
    2726:	11 97       	sbiw	r26, 0x01	; 1
    2728:	84 0f       	add	r24, r20
    272a:	95 1f       	adc	r25, r21
    272c:	02 96       	adiw	r24, 0x02	; 2
    272e:	91 83       	std	Z+1, r25	; 0x01
    2730:	80 83       	st	Z, r24
    2732:	12 96       	adiw	r26, 0x02	; 2
    2734:	8d 91       	ld	r24, X+
    2736:	9c 91       	ld	r25, X
    2738:	13 97       	sbiw	r26, 0x03	; 3
    273a:	93 83       	std	Z+3, r25	; 0x03
    273c:	82 83       	std	Z+2, r24	; 0x02
    273e:	21 15       	cp	r18, r1
    2740:	31 05       	cpc	r19, r1
    2742:	29 f4       	brne	.+10     	; 0x274e <free+0x9c>
    2744:	f0 93 c0 01 	sts	0x01C0, r31
    2748:	e0 93 bf 01 	sts	0x01BF, r30
    274c:	3e c0       	rjmp	.+124    	; 0x27ca <free+0x118>
    274e:	d9 01       	movw	r26, r18
    2750:	13 96       	adiw	r26, 0x03	; 3
    2752:	fc 93       	st	X, r31
    2754:	ee 93       	st	-X, r30
    2756:	12 97       	sbiw	r26, 0x02	; 2
    2758:	4d 91       	ld	r20, X+
    275a:	5d 91       	ld	r21, X+
    275c:	a4 0f       	add	r26, r20
    275e:	b5 1f       	adc	r27, r21
    2760:	ea 17       	cp	r30, r26
    2762:	fb 07       	cpc	r31, r27
    2764:	79 f4       	brne	.+30     	; 0x2784 <free+0xd2>
    2766:	80 81       	ld	r24, Z
    2768:	91 81       	ldd	r25, Z+1	; 0x01
    276a:	84 0f       	add	r24, r20
    276c:	95 1f       	adc	r25, r21
    276e:	02 96       	adiw	r24, 0x02	; 2
    2770:	d9 01       	movw	r26, r18
    2772:	11 96       	adiw	r26, 0x01	; 1
    2774:	9c 93       	st	X, r25
    2776:	8e 93       	st	-X, r24
    2778:	82 81       	ldd	r24, Z+2	; 0x02
    277a:	93 81       	ldd	r25, Z+3	; 0x03
    277c:	13 96       	adiw	r26, 0x03	; 3
    277e:	9c 93       	st	X, r25
    2780:	8e 93       	st	-X, r24
    2782:	12 97       	sbiw	r26, 0x02	; 2
    2784:	e0 e0       	ldi	r30, 0x00	; 0
    2786:	f0 e0       	ldi	r31, 0x00	; 0
    2788:	8a 81       	ldd	r24, Y+2	; 0x02
    278a:	9b 81       	ldd	r25, Y+3	; 0x03
    278c:	00 97       	sbiw	r24, 0x00	; 0
    278e:	19 f0       	breq	.+6      	; 0x2796 <free+0xe4>
    2790:	fe 01       	movw	r30, r28
    2792:	ec 01       	movw	r28, r24
    2794:	f9 cf       	rjmp	.-14     	; 0x2788 <free+0xd6>
    2796:	ce 01       	movw	r24, r28
    2798:	02 96       	adiw	r24, 0x02	; 2
    279a:	28 81       	ld	r18, Y
    279c:	39 81       	ldd	r19, Y+1	; 0x01
    279e:	82 0f       	add	r24, r18
    27a0:	93 1f       	adc	r25, r19
    27a2:	20 91 bd 01 	lds	r18, 0x01BD
    27a6:	30 91 be 01 	lds	r19, 0x01BE
    27aa:	28 17       	cp	r18, r24
    27ac:	39 07       	cpc	r19, r25
    27ae:	69 f4       	brne	.+26     	; 0x27ca <free+0x118>
    27b0:	30 97       	sbiw	r30, 0x00	; 0
    27b2:	29 f4       	brne	.+10     	; 0x27be <free+0x10c>
    27b4:	10 92 c0 01 	sts	0x01C0, r1
    27b8:	10 92 bf 01 	sts	0x01BF, r1
    27bc:	02 c0       	rjmp	.+4      	; 0x27c2 <free+0x110>
    27be:	13 82       	std	Z+3, r1	; 0x03
    27c0:	12 82       	std	Z+2, r1	; 0x02
    27c2:	d0 93 be 01 	sts	0x01BE, r29
    27c6:	c0 93 bd 01 	sts	0x01BD, r28
    27ca:	df 91       	pop	r29
    27cc:	cf 91       	pop	r28
    27ce:	08 95       	ret

000027d0 <__do_global_dtors>:
    27d0:	10 e0       	ldi	r17, 0x00	; 0
    27d2:	cc ea       	ldi	r28, 0xAC	; 172
    27d4:	d0 e0       	ldi	r29, 0x00	; 0
    27d6:	04 c0       	rjmp	.+8      	; 0x27e0 <__do_global_dtors+0x10>
    27d8:	fe 01       	movw	r30, r28
    27da:	0e 94 ae 12 	call	0x255c	; 0x255c <__tablejump__>
    27de:	22 96       	adiw	r28, 0x02	; 2
    27e0:	ce 3a       	cpi	r28, 0xAE	; 174
    27e2:	d1 07       	cpc	r29, r17
    27e4:	c9 f7       	brne	.-14     	; 0x27d8 <__do_global_dtors+0x8>
    27e6:	f8 94       	cli

000027e8 <__stop_program>:
    27e8:	ff cf       	rjmp	.-2      	; 0x27e8 <__stop_program>
