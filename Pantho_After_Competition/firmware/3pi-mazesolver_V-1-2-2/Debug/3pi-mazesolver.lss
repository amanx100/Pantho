
3pi-mazesolver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  00002794  00002828  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002794  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000077  0080014a  0080014a  00002872  2**0
                  ALLOC
  3 .stab         00006624  00000000  00000000  00002874  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008bbc  00000000  00000000  00008e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000030  00000000  00000000  00011a54  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000000e0  00000000  00000000  00011a84  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001425  00000000  00000000  00011b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000793  00000000  00000000  00012f89  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000fc9  00000000  00000000  0001371c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  000146e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000478  00000000  00000000  000148e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007cf  00000000  00000000  00014d60  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000000a8  00000000  00000000  0001552f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 57 00 	jmp	0xae	; 0xae <__dtors_end>
       4:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       8:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
       c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      10:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      14:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      18:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      1c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      20:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      24:	0c 94 c4 0b 	jmp	0x1788	; 0x1788 <__vector_9>
      28:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      2c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      30:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      34:	0c 94 0f 08 	jmp	0x101e	; 0x101e <__vector_13>
      38:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      3c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      40:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      44:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      48:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      4c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      50:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      54:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      58:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      5c:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      60:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>
      64:	0c 94 7f 00 	jmp	0xfe	; 0xfe <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 00       	nop
      6a:	00 00       	nop
      6c:	00 00       	nop
      6e:	00 1f       	adc	r16, r16
      70:	1f 1f       	adc	r17, r31
      72:	1f 1f       	adc	r17, r31
      74:	1f 1f       	adc	r17, r31

00000076 <go>:
      76:	4c 31 36 20 63 64 65 67 72 65 67 34 00              L16 cdegreg4.

00000083 <welcome>:
      83:	3e 67 33 32 3e 3e 63 33 32 00                       >g32>>c32.

0000008d <demo_name_line2>:
      8d:	73 6f 6c 76 65 72 00                                solver.

00000094 <demo_name_line1>:
      94:	4d 61 7a 65 00                                      Maze.

00000099 <welcome_line2>:
      99:	33 f7 20 52 6f 62 6f 74 00                          3. Robot.

000000a2 <welcome_line1>:
      a2:	20 50 6f 6c 6f 6c 75 00                              Pololu.

000000aa <__ctors_start>:
      aa:	8d 0c       	add	r8, r13

000000ac <__ctors_end>:
      ac:	8e 0c       	add	r8, r14

000000ae <__dtors_end>:
      ae:	11 24       	eor	r1, r1
      b0:	1f be       	out	0x3f, r1	; 63
      b2:	cf ef       	ldi	r28, 0xFF	; 255
      b4:	d8 e0       	ldi	r29, 0x08	; 8
      b6:	de bf       	out	0x3e, r29	; 62
      b8:	cd bf       	out	0x3d, r28	; 61

000000ba <__do_copy_data>:
      ba:	11 e0       	ldi	r17, 0x01	; 1
      bc:	a0 e0       	ldi	r26, 0x00	; 0
      be:	b1 e0       	ldi	r27, 0x01	; 1
      c0:	e4 e9       	ldi	r30, 0x94	; 148
      c2:	f7 e2       	ldi	r31, 0x27	; 39
      c4:	02 c0       	rjmp	.+4      	; 0xca <__do_copy_data+0x10>
      c6:	05 90       	lpm	r0, Z+
      c8:	0d 92       	st	X+, r0
      ca:	aa 34       	cpi	r26, 0x4A	; 74
      cc:	b1 07       	cpc	r27, r17
      ce:	d9 f7       	brne	.-10     	; 0xc6 <__do_copy_data+0xc>

000000d0 <__do_clear_bss>:
      d0:	21 e0       	ldi	r18, 0x01	; 1
      d2:	aa e4       	ldi	r26, 0x4A	; 74
      d4:	b1 e0       	ldi	r27, 0x01	; 1
      d6:	01 c0       	rjmp	.+2      	; 0xda <.do_clear_bss_start>

000000d8 <.do_clear_bss_loop>:
      d8:	1d 92       	st	X+, r1

000000da <.do_clear_bss_start>:
      da:	a1 3c       	cpi	r26, 0xC1	; 193
      dc:	b2 07       	cpc	r27, r18
      de:	e1 f7       	brne	.-8      	; 0xd8 <.do_clear_bss_loop>

000000e0 <__do_global_ctors>:
      e0:	10 e0       	ldi	r17, 0x00	; 0
      e2:	cc ea       	ldi	r28, 0xAC	; 172
      e4:	d0 e0       	ldi	r29, 0x00	; 0
      e6:	04 c0       	rjmp	.+8      	; 0xf0 <__do_global_ctors+0x10>
      e8:	22 97       	sbiw	r28, 0x02	; 2
      ea:	fe 01       	movw	r30, r28
      ec:	0e 94 83 12 	call	0x2506	; 0x2506 <__tablejump__>
      f0:	ca 3a       	cpi	r28, 0xAA	; 170
      f2:	d1 07       	cpc	r29, r17
      f4:	c9 f7       	brne	.-14     	; 0xe8 <__do_global_ctors+0x8>
      f6:	0e 94 44 02 	call	0x488	; 0x488 <main>
      fa:	0c 94 bd 13 	jmp	0x277a	; 0x277a <__do_global_dtors>

000000fe <__bad_interrupt>:
      fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000102 <load_custom_characters>:

// This function loads custom characters into the LCD.  Up to 8
// characters can be loaded; we use them for 7 levels of a bar graph.
void load_custom_characters()
{
	lcd_load_custom_character(levels+0,0); // no offset, e.g. one bar
     102:	60 e0       	ldi	r22, 0x00	; 0
     104:	88 e6       	ldi	r24, 0x68	; 104
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+1,1); // two bars
     10c:	61 e0       	ldi	r22, 0x01	; 1
     10e:	89 e6       	ldi	r24, 0x69	; 105
     110:	90 e0       	ldi	r25, 0x00	; 0
     112:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+2,2); // etc...
     116:	62 e0       	ldi	r22, 0x02	; 2
     118:	8a e6       	ldi	r24, 0x6A	; 106
     11a:	90 e0       	ldi	r25, 0x00	; 0
     11c:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+3,3);
     120:	63 e0       	ldi	r22, 0x03	; 3
     122:	8b e6       	ldi	r24, 0x6B	; 107
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+4,4);
     12a:	64 e0       	ldi	r22, 0x04	; 4
     12c:	8c e6       	ldi	r24, 0x6C	; 108
     12e:	90 e0       	ldi	r25, 0x00	; 0
     130:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+5,5);
     134:	65 e0       	ldi	r22, 0x05	; 5
     136:	8d e6       	ldi	r24, 0x6D	; 109
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	lcd_load_custom_character(levels+6,6);
     13e:	66 e0       	ldi	r22, 0x06	; 6
     140:	8e e6       	ldi	r24, 0x6E	; 110
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	0e 94 44 09 	call	0x1288	; 0x1288 <lcd_load_custom_character>
	clear(); // the LCD must be cleared for the characters to take effect
     148:	0c 94 c4 09 	jmp	0x1388	; 0x1388 <clear>

0000014c <display_readings>:
}

// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
     14c:	cf 92       	push	r12
     14e:	df 92       	push	r13
     150:	ef 92       	push	r14
     152:	ff 92       	push	r15
     154:	0f 93       	push	r16
     156:	1f 93       	push	r17
     158:	cf 93       	push	r28
     15a:	df 93       	push	r29
     15c:	cd b7       	in	r28, 0x3d	; 61
     15e:	de b7       	in	r29, 0x3e	; 62
     160:	2a 97       	sbiw	r28, 0x0a	; 10
     162:	0f b6       	in	r0, 0x3f	; 63
     164:	f8 94       	cli
     166:	de bf       	out	0x3e, r29	; 62
     168:	0f be       	out	0x3f, r0	; 63
     16a:	cd bf       	out	0x3d, r28	; 61
     16c:	8c 01       	movw	r16, r24
	unsigned char i;

	for(i=0;i<5;i++) {
     16e:	d1 2c       	mov	r13, r1
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     170:	8a e0       	ldi	r24, 0x0A	; 10
     172:	c8 2e       	mov	r12, r24

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     174:	95 e6       	ldi	r25, 0x65	; 101
     176:	e9 2e       	mov	r14, r25
     178:	f1 2c       	mov	r15, r1
	for(i=0;i<5;i++) {
		// Initialize the array of characters that we will use for the
		// graph.  Using the space, an extra copy of the one-bar
		// character, and character 255 (a full black box), we get 10
		// characters in the array.
		const char display_characters[10] = {' ',0,0,1,2,3,4,5,6,255};
     17a:	e1 e3       	ldi	r30, 0x31	; 49
     17c:	f1 e0       	ldi	r31, 0x01	; 1
     17e:	de 01       	movw	r26, r28
     180:	11 96       	adiw	r26, 0x01	; 1
     182:	8c 2d       	mov	r24, r12
     184:	01 90       	ld	r0, Z+
     186:	0d 92       	st	X+, r0
     188:	8a 95       	dec	r24
     18a:	e1 f7       	brne	.-8      	; 0x184 <display_readings+0x38>

		// The variable c will have values from 0 to 9, since
		// calibrated values are in the range of 0 to 1000, and
		// 1000/101 is 9 with integer math.
		char c = display_characters[calibrated_values[i]/101];
     18c:	f8 01       	movw	r30, r16
     18e:	81 91       	ld	r24, Z+
     190:	91 91       	ld	r25, Z+
     192:	8f 01       	movw	r16, r30
     194:	b7 01       	movw	r22, r14
     196:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     19a:	81 e0       	ldi	r24, 0x01	; 1
     19c:	90 e0       	ldi	r25, 0x00	; 0
     19e:	8c 0f       	add	r24, r28
     1a0:	9d 1f       	adc	r25, r29
     1a2:	68 0f       	add	r22, r24
     1a4:	79 1f       	adc	r23, r25

		// Display the bar graph character.
		print_character(c);
     1a6:	fb 01       	movw	r30, r22
     1a8:	80 81       	ld	r24, Z
     1aa:	0e 94 47 09 	call	0x128e	; 0x128e <print_character>
// This function displays the sensor readings using a bar graph.
void display_readings(const unsigned int *calibrated_values)
{
	unsigned char i;

	for(i=0;i<5;i++) {
     1ae:	d3 94       	inc	r13
     1b0:	f5 e0       	ldi	r31, 0x05	; 5
     1b2:	df 12       	cpse	r13, r31
     1b4:	e2 cf       	rjmp	.-60     	; 0x17a <display_readings+0x2e>
		char c = display_characters[calibrated_values[i]/101];

		// Display the bar graph character.
		print_character(c);
	}
}
     1b6:	2a 96       	adiw	r28, 0x0a	; 10
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
     1c2:	df 91       	pop	r29
     1c4:	cf 91       	pop	r28
     1c6:	1f 91       	pop	r17
     1c8:	0f 91       	pop	r16
     1ca:	ff 90       	pop	r15
     1cc:	ef 90       	pop	r14
     1ce:	df 90       	pop	r13
     1d0:	cf 90       	pop	r12
     1d2:	08 95       	ret

000001d4 <follow_segment>:
#include <pololu/3pi.h>

void follow_segment(int max)
{
     1d4:	2f 92       	push	r2
     1d6:	3f 92       	push	r3
     1d8:	4f 92       	push	r4
     1da:	5f 92       	push	r5
     1dc:	6f 92       	push	r6
     1de:	7f 92       	push	r7
     1e0:	8f 92       	push	r8
     1e2:	9f 92       	push	r9
     1e4:	af 92       	push	r10
     1e6:	bf 92       	push	r11
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
     1f4:	cf 93       	push	r28
     1f6:	df 93       	push	r29
     1f8:	cd b7       	in	r28, 0x3d	; 61
     1fa:	de b7       	in	r29, 0x3e	; 62
     1fc:	2a 97       	sbiw	r28, 0x0a	; 10
     1fe:	0f b6       	in	r0, 0x3f	; 63
     200:	f8 94       	cli
     202:	de bf       	out	0x3e, r29	; 62
     204:	0f be       	out	0x3f, r0	; 63
     206:	cd bf       	out	0x3d, r28	; 61
     208:	8c 01       	movw	r16, r24
	int last_proportional = 0;
	long integral=0;
     20a:	c1 2c       	mov	r12, r1
     20c:	d1 2c       	mov	r13, r1
     20e:	76 01       	movw	r14, r12
#include <pololu/3pi.h>

void follow_segment(int max)
{
	int last_proportional = 0;
     210:	21 2c       	mov	r2, r1
     212:	31 2c       	mov	r3, r1
		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     214:	50 e1       	ldi	r21, 0x10	; 16
     216:	45 2e       	mov	r4, r21
     218:	57 e2       	ldi	r21, 0x27	; 39
     21a:	55 2e       	mov	r5, r21
     21c:	61 2c       	mov	r6, r1
     21e:	71 2c       	mov	r7, r1

		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
     220:	88 24       	eor	r8, r8
     222:	99 24       	eor	r9, r9
     224:	88 1a       	sub	r8, r24
     226:	99 0a       	sbc	r9, r25
	long integral=0;

	while(1)
	{
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     228:	61 e0       	ldi	r22, 0x01	; 1
     22a:	ce 01       	movw	r24, r28
     22c:	01 96       	adiw	r24, 0x01	; 1
     22e:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>

		int proportional = ((int)position) - 2000;
     232:	80 5d       	subi	r24, 0xD0	; 208
     234:	97 40       	sbci	r25, 0x07	; 7
     236:	5c 01       	movw	r10, r24

		int derivative = proportional - last_proportional;
		integral += proportional;
     238:	aa 27       	eor	r26, r26
     23a:	97 fd       	sbrc	r25, 7
     23c:	a0 95       	com	r26
     23e:	ba 2f       	mov	r27, r26
     240:	c8 0e       	add	r12, r24
     242:	d9 1e       	adc	r13, r25
     244:	ea 1e       	adc	r14, r26
     246:	fb 1e       	adc	r15, r27

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     248:	c7 01       	movw	r24, r14
     24a:	b6 01       	movw	r22, r12
     24c:	a3 01       	movw	r20, r6
     24e:	92 01       	movw	r18, r4
     250:	0e 94 20 12 	call	0x2440	; 0x2440 <__divmodsi4>
		unsigned int sensors[5];
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);

		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
     254:	b5 01       	movw	r22, r10
     256:	62 19       	sub	r22, r2
     258:	73 09       	sbc	r23, r3
		integral += proportional;

		last_proportional = proportional;
		
		int power_difference = proportional/20 + integral/10000 + derivative*3/2;
     25a:	cb 01       	movw	r24, r22
     25c:	88 0f       	add	r24, r24
     25e:	99 1f       	adc	r25, r25
     260:	86 0f       	add	r24, r22
     262:	97 1f       	adc	r25, r23
     264:	97 fd       	sbrc	r25, 7
     266:	01 96       	adiw	r24, 0x01	; 1
     268:	fc 01       	movw	r30, r24
     26a:	f5 95       	asr	r31
     26c:	e7 95       	ror	r30
     26e:	e2 0f       	add	r30, r18
     270:	f3 1f       	adc	r31, r19
     272:	c5 01       	movw	r24, r10
     274:	64 e1       	ldi	r22, 0x14	; 20
     276:	70 e0       	ldi	r23, 0x00	; 0
     278:	0e 94 ea 11 	call	0x23d4	; 0x23d4 <__divmodhi4>
     27c:	e6 0f       	add	r30, r22
     27e:	f7 1f       	adc	r31, r23
     280:	0e 17       	cp	r16, r30
     282:	1f 07       	cpc	r17, r31
     284:	0c f4       	brge	.+2      	; 0x288 <follow_segment+0xb4>
     286:	f8 01       	movw	r30, r16
     288:	cf 01       	movw	r24, r30
     28a:	e8 15       	cp	r30, r8
     28c:	f9 05       	cpc	r31, r9
     28e:	0c f4       	brge	.+2      	; 0x292 <follow_segment+0xbe>
     290:	c4 01       	movw	r24, r8
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
			set_motors(max+power_difference,max);
     292:	b8 01       	movw	r22, r16
		if(power_difference > max)
			power_difference = max;
		if(power_difference < -max)
			power_difference = -max;
		
		if(power_difference < 0)
     294:	97 ff       	sbrs	r25, 7
     296:	03 c0       	rjmp	.+6      	; 0x29e <follow_segment+0xca>
			set_motors(max+power_difference,max);
     298:	80 0f       	add	r24, r16
     29a:	91 1f       	adc	r25, r17
     29c:	03 c0       	rjmp	.+6      	; 0x2a4 <follow_segment+0xd0>
		else
			set_motors(max,max-power_difference);
     29e:	68 1b       	sub	r22, r24
     2a0:	79 0b       	sbc	r23, r25
     2a2:	c8 01       	movw	r24, r16
     2a4:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>

		if(sensors[1] < 100 && sensors[2] < 100 && sensors[3] < 100)
     2a8:	8b 81       	ldd	r24, Y+3	; 0x03
     2aa:	9c 81       	ldd	r25, Y+4	; 0x04
     2ac:	84 36       	cpi	r24, 0x64	; 100
     2ae:	91 05       	cpc	r25, r1
     2b0:	50 f4       	brcc	.+20     	; 0x2c6 <follow_segment+0xf2>
     2b2:	8d 81       	ldd	r24, Y+5	; 0x05
     2b4:	9e 81       	ldd	r25, Y+6	; 0x06
     2b6:	84 36       	cpi	r24, 0x64	; 100
     2b8:	91 05       	cpc	r25, r1
     2ba:	28 f4       	brcc	.+10     	; 0x2c6 <follow_segment+0xf2>
     2bc:	8f 81       	ldd	r24, Y+7	; 0x07
     2be:	98 85       	ldd	r25, Y+8	; 0x08
     2c0:	84 36       	cpi	r24, 0x64	; 100
     2c2:	91 05       	cpc	r25, r1
     2c4:	60 f0       	brcs	.+24     	; 0x2de <follow_segment+0x10a>
		{
			return;
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
     2c6:	89 81       	ldd	r24, Y+1	; 0x01
     2c8:	9a 81       	ldd	r25, Y+2	; 0x02
     2ca:	89 3c       	cpi	r24, 0xC9	; 201
     2cc:	91 05       	cpc	r25, r1
     2ce:	38 f4       	brcc	.+14     	; 0x2de <follow_segment+0x10a>
     2d0:	89 85       	ldd	r24, Y+9	; 0x09
     2d2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2d4:	89 3c       	cpi	r24, 0xC9	; 201
     2d6:	91 05       	cpc	r25, r1
     2d8:	10 f4       	brcc	.+4      	; 0x2de <follow_segment+0x10a>
		int proportional = ((int)position) - 2000;

		int derivative = proportional - last_proportional;
		integral += proportional;

		last_proportional = proportional;
     2da:	15 01       	movw	r2, r10
		}
		else if(sensors[0] > 200 || sensors[4] > 200)
		{
			return;
		}
	}
     2dc:	a5 cf       	rjmp	.-182    	; 0x228 <follow_segment+0x54>
     2de:	2a 96       	adiw	r28, 0x0a	; 10
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	df 91       	pop	r29
     2ec:	cf 91       	pop	r28
     2ee:	1f 91       	pop	r17
     2f0:	0f 91       	pop	r16
     2f2:	ff 90       	pop	r15
     2f4:	ef 90       	pop	r14
     2f6:	df 90       	pop	r13
     2f8:	cf 90       	pop	r12
     2fa:	bf 90       	pop	r11
     2fc:	af 90       	pop	r10
     2fe:	9f 90       	pop	r9
     300:	8f 90       	pop	r8
     302:	7f 90       	pop	r7
     304:	6f 90       	pop	r6
     306:	5f 90       	pop	r5
     308:	4f 90       	pop	r4
     30a:	3f 90       	pop	r3
     30c:	2f 90       	pop	r2
     30e:	08 95       	ret

00000310 <initialize>:

const char welcome[] PROGMEM = ">g32>>c32";
const char go[] PROGMEM = "L16 cdegreg4";

void initialize()
{
     310:	0f 93       	push	r16
     312:	1f 93       	push	r17
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	cd b7       	in	r28, 0x3d	; 61
     31a:	de b7       	in	r29, 0x3e	; 62
     31c:	2a 97       	sbiw	r28, 0x0a	; 10
     31e:	0f b6       	in	r0, 0x3f	; 63
     320:	f8 94       	cli
     322:	de bf       	out	0x3e, r29	; 62
     324:	0f be       	out	0x3f, r0	; 63
     326:	cd bf       	out	0x3d, r28	; 61
	unsigned int counter; 
	unsigned int sensors[5]; 
	
	pololu_3pi_init(2000);
     328:	80 ed       	ldi	r24, 0xD0	; 208
     32a:	97 e0       	ldi	r25, 0x07	; 7
     32c:	0e 94 89 0c 	call	0x1912	; 0x1912 <pololu_3pi_init>
	load_custom_characters();
     330:	0e 94 81 00 	call	0x102	; 0x102 <load_custom_characters>
	
	print_from_program_space(welcome_line1);
     334:	82 ea       	ldi	r24, 0xA2	; 162
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <print_from_program_space>
	lcd_goto_xy(0,1);
     33c:	61 e0       	ldi	r22, 0x01	; 1
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <lcd_goto_xy>
	print_from_program_space(welcome_line2);
     344:	89 e9       	ldi	r24, 0x99	; 153
     346:	90 e0       	ldi	r25, 0x00	; 0
     348:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <print_from_program_space>
	play_from_program_space(welcome);
     34c:	83 e8       	ldi	r24, 0x83	; 131
     34e:	90 e0       	ldi	r25, 0x00	; 0
     350:	0e 94 81 08 	call	0x1102	; 0x1102 <play_from_program_space>
	delay_ms(1000);
     354:	88 ee       	ldi	r24, 0xE8	; 232
     356:	93 e0       	ldi	r25, 0x03	; 3
     358:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>

	clear();
     35c:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
	print_from_program_space(demo_name_line1);
     360:	84 e9       	ldi	r24, 0x94	; 148
     362:	90 e0       	ldi	r25, 0x00	; 0
     364:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <print_from_program_space>
	lcd_goto_xy(0,1);
     368:	61 e0       	ldi	r22, 0x01	; 1
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <lcd_goto_xy>
	print_from_program_space(demo_name_line2);
     370:	8d e8       	ldi	r24, 0x8D	; 141
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <print_from_program_space>
	delay_ms(1000);
     378:	88 ee       	ldi	r24, 0xE8	; 232
     37a:	93 e0       	ldi	r25, 0x03	; 3
		print_long(bat);
		print("mV");
		lcd_goto_xy(0,1);
		print("Press B");

		delay_ms(100);
     37c:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
	print_from_program_space(demo_name_line1);
	lcd_goto_xy(0,1);
	print_from_program_space(demo_name_line2);
	delay_ms(1000);

	while(!button_is_pressed(BUTTON_B))
     380:	80 e1       	ldi	r24, 0x10	; 16
     382:	0e 94 b9 0b 	call	0x1772	; 0x1772 <button_is_pressed>
     386:	81 11       	cpse	r24, r1
     388:	1b c0       	rjmp	.+54     	; 0x3c0 <initialize+0xb0>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     38a:	0e 94 3f 05 	call	0xa7e	; 0xa7e <read_battery_millivolts_3pi>
     38e:	8c 01       	movw	r16, r24
	{
		int bat = read_battery_millivolts();

		clear();
     390:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
		print_long(bat);
     394:	b8 01       	movw	r22, r16
     396:	88 27       	eor	r24, r24
     398:	77 fd       	sbrc	r23, 7
     39a:	80 95       	com	r24
     39c:	98 2f       	mov	r25, r24
     39e:	0e 94 49 0a 	call	0x1492	; 0x1492 <print_long>
		print("mV");
     3a2:	8b e3       	ldi	r24, 0x3B	; 59
     3a4:	91 e0       	ldi	r25, 0x01	; 1
     3a6:	0e 94 db 09 	call	0x13b6	; 0x13b6 <print>
		lcd_goto_xy(0,1);
     3aa:	61 e0       	ldi	r22, 0x01	; 1
     3ac:	80 e0       	ldi	r24, 0x00	; 0
     3ae:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <lcd_goto_xy>
		print("Press B");
     3b2:	8e e3       	ldi	r24, 0x3E	; 62
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	0e 94 db 09 	call	0x13b6	; 0x13b6 <print>

		delay_ms(100);
     3ba:	84 e6       	ldi	r24, 0x64	; 100
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	de cf       	rjmp	.-68     	; 0x37c <initialize+0x6c>
	}

	wait_for_button_release(BUTTON_B);
     3c0:	80 e1       	ldi	r24, 0x10	; 16
     3c2:	0e 94 a5 0b 	call	0x174a	; 0x174a <wait_for_button_release>
	delay_ms(1000);
     3c6:	88 ee       	ldi	r24, 0xE8	; 232
     3c8:	93 e0       	ldi	r25, 0x03	; 3
     3ca:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
     3ce:	0c ee       	ldi	r16, 0xEC	; 236
     3d0:	1f ef       	ldi	r17, 0xFF	; 255

	for(counter=0;counter<80;counter++)
	{
		if(counter < 20 || counter >= 60)
     3d2:	08 32       	cpi	r16, 0x28	; 40
     3d4:	11 05       	cpc	r17, r1
     3d6:	28 f0       	brcs	.+10     	; 0x3e2 <initialize+0xd2>
			set_motors(40,-40);
     3d8:	68 ed       	ldi	r22, 0xD8	; 216
     3da:	7f ef       	ldi	r23, 0xFF	; 255
     3dc:	88 e2       	ldi	r24, 0x28	; 40
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	04 c0       	rjmp	.+8      	; 0x3ea <initialize+0xda>
		else
			set_motors(-40,40);
     3e2:	68 e2       	ldi	r22, 0x28	; 40
     3e4:	70 e0       	ldi	r23, 0x00	; 0
     3e6:	88 ed       	ldi	r24, 0xD8	; 216
     3e8:	9f ef       	ldi	r25, 0xFF	; 255
     3ea:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		calibrate_line_sensors(IR_EMITTERS_ON);
     3ee:	81 e0       	ldi	r24, 0x01	; 1
     3f0:	0e 94 48 0c 	call	0x1890	; 0x1890 <calibrate_line_sensors>
		delay_ms(20);
     3f4:	84 e1       	ldi	r24, 0x14	; 20
     3f6:	90 e0       	ldi	r25, 0x00	; 0
     3f8:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
     3fc:	0f 5f       	subi	r16, 0xFF	; 255
     3fe:	1f 4f       	sbci	r17, 0xFF	; 255
	}

	wait_for_button_release(BUTTON_B);
	delay_ms(1000);

	for(counter=0;counter<80;counter++)
     400:	0c 33       	cpi	r16, 0x3C	; 60
     402:	11 05       	cpc	r17, r1
     404:	31 f7       	brne	.-52     	; 0x3d2 <initialize+0xc2>
		else
			set_motors(-40,40);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(20);
	}
	set_motors(0,0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>

	while(!button_is_pressed(BUTTON_B))
     412:	80 e1       	ldi	r24, 0x10	; 16
     414:	0e 94 b9 0b 	call	0x1772	; 0x1772 <button_is_pressed>
     418:	81 11       	cpse	r24, r1
     41a:	1a c0       	rjmp	.+52     	; 0x450 <initialize+0x140>
	{
		unsigned int position = read_line(sensors,IR_EMITTERS_ON);
     41c:	61 e0       	ldi	r22, 0x01	; 1
     41e:	ce 01       	movw	r24, r28
     420:	01 96       	adiw	r24, 0x01	; 1
     422:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
     426:	8c 01       	movw	r16, r24

		clear();
     428:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>
		print_long(position);
     42c:	b8 01       	movw	r22, r16
     42e:	80 e0       	ldi	r24, 0x00	; 0
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	0e 94 49 0a 	call	0x1492	; 0x1492 <print_long>
		lcd_goto_xy(0,1);
     436:	61 e0       	ldi	r22, 0x01	; 1
     438:	80 e0       	ldi	r24, 0x00	; 0
     43a:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <lcd_goto_xy>
		display_readings(sensors);
     43e:	ce 01       	movw	r24, r28
     440:	01 96       	adiw	r24, 0x01	; 1
     442:	0e 94 a6 00 	call	0x14c	; 0x14c <display_readings>

		delay_ms(100);
     446:	84 e6       	ldi	r24, 0x64	; 100
     448:	90 e0       	ldi	r25, 0x00	; 0
     44a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
     44e:	e1 cf       	rjmp	.-62     	; 0x412 <initialize+0x102>
	}
	wait_for_button_release(BUTTON_B);
     450:	80 e1       	ldi	r24, 0x10	; 16
     452:	0e 94 a5 0b 	call	0x174a	; 0x174a <wait_for_button_release>

	clear();
     456:	0e 94 c4 09 	call	0x1388	; 0x1388 <clear>

	print("Go!");		
     45a:	86 e4       	ldi	r24, 0x46	; 70
     45c:	91 e0       	ldi	r25, 0x01	; 1
     45e:	0e 94 db 09 	call	0x13b6	; 0x13b6 <print>

	play_from_program_space(go);
     462:	86 e7       	ldi	r24, 0x76	; 118
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 81 08 	call	0x1102	; 0x1102 <play_from_program_space>
	while(is_playing());
     46a:	0e 94 70 08 	call	0x10e0	; 0x10e0 <is_playing>
     46e:	81 11       	cpse	r24, r1
     470:	fc cf       	rjmp	.-8      	; 0x46a <initialize+0x15a>
}
     472:	2a 96       	adiw	r28, 0x0a	; 10
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	1f 91       	pop	r17
     484:	0f 91       	pop	r16
     486:	08 95       	ret

00000488 <main>:


int main()
{
	initialize();//3pi initialization
     488:	0e 94 88 01 	call	0x310	; 0x310 <initialize>
	
	maze_solve(180);
     48c:	84 eb       	ldi	r24, 0xB4	; 180
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 4b 02 	call	0x496	; 0x496 <maze_solve>
     494:	ff cf       	rjmp	.-2      	; 0x494 <main+0xc>

00000496 <maze_solve>:
#include "follow-segment.h"
#include "turn.h"


void maze_solve(int speed)
{
     496:	cf 93       	push	r28
     498:	df 93       	push	r29
     49a:	cd b7       	in	r28, 0x3d	; 61
     49c:	de b7       	in	r29, 0x3e	; 62
     49e:	2a 97       	sbiw	r28, 0x0a	; 10
     4a0:	0f b6       	in	r0, 0x3f	; 63
     4a2:	f8 94       	cli
     4a4:	de bf       	out	0x3e, r29	; 62
     4a6:	0f be       	out	0x3f, r0	; 63
     4a8:	cd bf       	out	0x3d, r28	; 61
     4aa:	8c 01       	movw	r16, r24
	unsigned int sensors[5];
	uint16_t destination = 0;
	const signed int line_th = 300, edge_th=500, speed_node = 50; //minimum 200
	char Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
     4ac:	b1 2c       	mov	r11, r1
     4ae:	91 2c       	mov	r9, r1
     4b0:	a1 2c       	mov	r10, r1
				Forward_trigged = 0;
			}
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     4b2:	82 e3       	ldi	r24, 0x32	; 50
     4b4:	c8 2e       	mov	r12, r24
     4b6:	d1 2c       	mov	r13, r1
	const signed int line_th = 300, edge_th=500, speed_node = 50; //minimum 200
	char Right_trigged = 0, Left_trigged = 0, Forward_trigged = 0; 
	
	while(1)
	{
		follow_segment(speed);
     4b8:	c8 01       	movw	r24, r16
     4ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <follow_segment>
		//delay_ms(10);
		
		read_line(sensors,IR_EMITTERS_ON);
     4be:	61 e0       	ldi	r22, 0x01	; 1
     4c0:	ce 01       	movw	r24, r28
     4c2:	01 96       	adiw	r24, 0x01	; 1
     4c4:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
	
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		if(sensors[0] > edge_th)  //left trigging 
     4c8:	89 81       	ldd	r24, Y+1	; 0x01
     4ca:	9a 81       	ldd	r25, Y+2	; 0x02
     4cc:	85 3f       	cpi	r24, 0xF5	; 245
     4ce:	91 40       	sbci	r25, 0x01	; 1
     4d0:	08 f4       	brcc	.+2      	; 0x4d4 <maze_solve+0x3e>
     4d2:	69 c0       	rjmp	.+210    	; 0x5a6 <maze_solve+0x110>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     4d4:	62 e3       	ldi	r22, 0x32	; 50
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	82 e3       	ldi	r24, 0x32	; 50
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
			destination = 0;
     4e0:	e1 2c       	mov	r14, r1
     4e2:	f1 2c       	mov	r15, r1
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     4e4:	89 81       	ldd	r24, Y+1	; 0x01
     4e6:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				read_line(sensors,IR_EMITTERS_ON);
     4e8:	61 e0       	ldi	r22, 0x01	; 1
		
		if(sensors[0] > edge_th)  //left trigging 
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     4ea:	85 3f       	cpi	r24, 0xF5	; 245
     4ec:	91 40       	sbci	r25, 0x01	; 1
     4ee:	68 f1       	brcs	.+90     	; 0x54a <maze_solve+0xb4>
			{
				read_line(sensors,IR_EMITTERS_ON);
     4f0:	ce 01       	movw	r24, r28
     4f2:	01 96       	adiw	r24, 0x01	; 1
     4f4:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
void time_reset(void);

// This is inline for efficiency:
static inline void delay_us(unsigned int microseconds)
{
  __asm__ volatile (
     4f8:	c6 01       	movw	r24, r12
     4fa:	6f 93       	push	r22
     4fc:	64 e0       	ldi	r22, 0x04	; 4
     4fe:	6a 95       	dec	r22
     500:	f1 f7       	brne	.-4      	; 0x4fe <maze_solve+0x68>
     502:	6f 91       	pop	r22
     504:	01 97       	sbiw	r24, 0x01	; 1
     506:	c9 f7       	brne	.-14     	; 0x4fa <maze_solve+0x64>
				delay_us(50);
				if ((sensors[4] > edge_th) && (Right_trigged == 0))
     508:	89 85       	ldd	r24, Y+9	; 0x09
     50a:	9a 85       	ldd	r25, Y+10	; 0x0a
     50c:	85 3f       	cpi	r24, 0xF5	; 245
     50e:	41 e0       	ldi	r20, 0x01	; 1
     510:	94 07       	cpc	r25, r20
     512:	20 f0       	brcs	.+8      	; 0x51c <maze_solve+0x86>
     514:	a1 10       	cpse	r10, r1
     516:	02 c0       	rjmp	.+4      	; 0x51c <maze_solve+0x86>
				{
					Right_trigged=1;
     518:	aa 24       	eor	r10, r10
     51a:	a3 94       	inc	r10
				}
				if ((sensors[0] > edge_th) && (sensors[4] > edge_th))
     51c:	29 81       	ldd	r18, Y+1	; 0x01
     51e:	3a 81       	ldd	r19, Y+2	; 0x02
     520:	25 3f       	cpi	r18, 0xF5	; 245
     522:	31 40       	sbci	r19, 0x01	; 1
     524:	f8 f2       	brcs	.-66     	; 0x4e4 <maze_solve+0x4e>
     526:	85 3f       	cpi	r24, 0xF5	; 245
     528:	91 40       	sbci	r25, 0x01	; 1
     52a:	e0 f2       	brcs	.-72     	; 0x4e4 <maze_solve+0x4e>
				{
					destination = destination + 1;
     52c:	4f ef       	ldi	r20, 0xFF	; 255
     52e:	e4 1a       	sub	r14, r20
     530:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     532:	89 e8       	ldi	r24, 0x89	; 137
     534:	e8 16       	cp	r14, r24
     536:	83 e1       	ldi	r24, 0x13	; 19
     538:	f8 06       	cpc	r15, r24
     53a:	a0 f2       	brcs	.-88     	; 0x4e4 <maze_solve+0x4e>
					{
						destination = 0x00;
						set_motors(0,0);
     53c:	60 e0       	ldi	r22, 0x00	; 0
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
     548:	ff cf       	rjmp	.-2      	; 0x548 <maze_solve+0xb2>
		
		if(sensors[0] > edge_th)  //left trigging 
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     54a:	89 85       	ldd	r24, Y+9	; 0x09
     54c:	9a 85       	ldd	r25, Y+10	; 0x0a
     54e:	85 3f       	cpi	r24, 0xF5	; 245
     550:	91 40       	sbci	r25, 0x01	; 1
     552:	70 f6       	brcc	.-100    	; 0x4f0 <maze_solve+0x5a>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
     554:	ce 01       	movw	r24, r28
     556:	01 96       	adiw	r24, 0x01	; 1
     558:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			if (sensors[2] > line_th)
     55c:	8d 81       	ldd	r24, Y+5	; 0x05
     55e:	9e 81       	ldd	r25, Y+6	; 0x06
     560:	8d 32       	cpi	r24, 0x2D	; 45
     562:	91 40       	sbci	r25, 0x01	; 1
     564:	08 f0       	brcs	.+2      	; 0x568 <maze_solve+0xd2>
     566:	a6 c0       	rjmp	.+332    	; 0x6b4 <maze_solve+0x21e>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     568:	a1 10       	cpse	r10, r1
     56a:	09 c0       	rjmp	.+18     	; 0x57e <maze_solve+0xe8>
     56c:	b1 10       	cpse	r11, r1
     56e:	03 c0       	rjmp	.+6      	; 0x576 <maze_solve+0xe0>
			{
				//left_operation(speed);
				turn('L',speed);
     570:	b8 01       	movw	r22, r16
     572:	8c e4       	ldi	r24, 0x4C	; 76
     574:	86 c0       	rjmp	.+268    	; 0x682 <maze_solve+0x1ec>
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 0) && (Forward_trigged == 1))
     576:	41 e0       	ldi	r20, 0x01	; 1
     578:	b4 12       	cpse	r11, r20
     57a:	9e cf       	rjmp	.-196    	; 0x4b8 <maze_solve+0x22>
     57c:	0e c0       	rjmp	.+28     	; 0x59a <maze_solve+0x104>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	a8 12       	cpse	r10, r24
     582:	9a cf       	rjmp	.-204    	; 0x4b8 <maze_solve+0x22>
     584:	b1 10       	cpse	r11, r1
     586:	06 c0       	rjmp	.+12     	; 0x594 <maze_solve+0xfe>
			{
				//left_right_operation(speed);
				turn('L',speed);
     588:	b8 01       	movw	r22, r16
     58a:	8c e4       	ldi	r24, 0x4C	; 76
     58c:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Right_trigged = 0;
     590:	a1 2c       	mov	r10, r1
				Forward_trigged = 0;
     592:	92 cf       	rjmp	.-220    	; 0x4b8 <maze_solve+0x22>
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 1))
     594:	21 e0       	ldi	r18, 0x01	; 1
     596:	b2 12       	cpse	r11, r18
     598:	8f cf       	rjmp	.-226    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     59a:	b8 01       	movw	r22, r16
     59c:	8c e4       	ldi	r24, 0x4C	; 76
     59e:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Right_trigged = 0;
				Forward_trigged = 0;
     5a2:	b1 2c       	mov	r11, r1
     5a4:	f5 cf       	rjmp	.-22     	; 0x590 <maze_solve+0xfa>
			}
		}
		else if (sensors[4] > edge_th) //right trigging
     5a6:	89 85       	ldd	r24, Y+9	; 0x09
     5a8:	9a 85       	ldd	r25, Y+10	; 0x0a
     5aa:	85 3f       	cpi	r24, 0xF5	; 245
     5ac:	91 40       	sbci	r25, 0x01	; 1
     5ae:	08 f4       	brcc	.+2      	; 0x5b2 <maze_solve+0x11c>
     5b0:	54 c0       	rjmp	.+168    	; 0x65a <maze_solve+0x1c4>
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
     5b2:	62 e3       	ldi	r22, 0x32	; 50
     5b4:	70 e0       	ldi	r23, 0x00	; 0
     5b6:	82 e3       	ldi	r24, 0x32	; 50
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
			destination = 0;
     5be:	e1 2c       	mov	r14, r1
     5c0:	f1 2c       	mov	r15, r1
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5c2:	89 81       	ldd	r24, Y+1	; 0x01
     5c4:	9a 81       	ldd	r25, Y+2	; 0x02
			{
				read_line(sensors,IR_EMITTERS_ON);
     5c6:	61 e0       	ldi	r22, 0x01	; 1
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5c8:	85 3f       	cpi	r24, 0xF5	; 245
     5ca:	91 40       	sbci	r25, 0x01	; 1
     5cc:	b0 f0       	brcs	.+44     	; 0x5fa <maze_solve+0x164>
			{
				read_line(sensors,IR_EMITTERS_ON);
     5ce:	ce 01       	movw	r24, r28
     5d0:	01 96       	adiw	r24, 0x01	; 1
     5d2:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
     5d6:	c6 01       	movw	r24, r12
     5d8:	6f 93       	push	r22
     5da:	64 e0       	ldi	r22, 0x04	; 4
     5dc:	6a 95       	dec	r22
     5de:	f1 f7       	brne	.-4      	; 0x5dc <maze_solve+0x146>
     5e0:	6f 91       	pop	r22
     5e2:	01 97       	sbiw	r24, 0x01	; 1
     5e4:	c9 f7       	brne	.-14     	; 0x5d8 <maze_solve+0x142>
				delay_us(50);
				if ((sensors[0] > edge_th) && (Left_trigged == 0))
     5e6:	89 81       	ldd	r24, Y+1	; 0x01
     5e8:	9a 81       	ldd	r25, Y+2	; 0x02
     5ea:	85 3f       	cpi	r24, 0xF5	; 245
     5ec:	91 40       	sbci	r25, 0x01	; 1
     5ee:	48 f3       	brcs	.-46     	; 0x5c2 <maze_solve+0x12c>
     5f0:	91 10       	cpse	r9, r1
     5f2:	4a c0       	rjmp	.+148    	; 0x688 <maze_solve+0x1f2>
				{
					Left_trigged=1;
     5f4:	99 24       	eor	r9, r9
     5f6:	93 94       	inc	r9
     5f8:	47 c0       	rjmp	.+142    	; 0x688 <maze_solve+0x1f2>
		}
		else if (sensors[4] > edge_th) //right trigging
		{
			set_motors(speed_node,speed_node);  //can be divide by a factor
			destination = 0;
			while ((sensors[0] > edge_th) || (sensors[4] > edge_th))
     5fa:	89 85       	ldd	r24, Y+9	; 0x09
     5fc:	9a 85       	ldd	r25, Y+10	; 0x0a
     5fe:	85 3f       	cpi	r24, 0xF5	; 245
     600:	91 40       	sbci	r25, 0x01	; 1
     602:	28 f7       	brcc	.-54     	; 0x5ce <maze_solve+0x138>
						//goto solv_maze;
					}
				}
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
     604:	ce 01       	movw	r24, r28
     606:	01 96       	adiw	r24, 0x01	; 1
     608:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			if (sensors[2] > line_th)
     60c:	8d 81       	ldd	r24, Y+5	; 0x05
     60e:	9e 81       	ldd	r25, Y+6	; 0x06
     610:	8d 32       	cpi	r24, 0x2D	; 45
     612:	91 40       	sbci	r25, 0x01	; 1
     614:	08 f0       	brcs	.+2      	; 0x618 <maze_solve+0x182>
     616:	52 c0       	rjmp	.+164    	; 0x6bc <maze_solve+0x226>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     618:	91 10       	cpse	r9, r1
     61a:	0b c0       	rjmp	.+22     	; 0x632 <maze_solve+0x19c>
     61c:	b1 10       	cpse	r11, r1
     61e:	03 c0       	rjmp	.+6      	; 0x626 <maze_solve+0x190>
			{
				//right_operation(speed);
				turn('R',speed);
     620:	b8 01       	movw	r22, r16
     622:	82 e5       	ldi	r24, 0x52	; 82
     624:	2e c0       	rjmp	.+92     	; 0x682 <maze_solve+0x1ec>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 0) && (Forward_trigged == 1))
     626:	41 e0       	ldi	r20, 0x01	; 1
     628:	b4 12       	cpse	r11, r20
     62a:	46 cf       	rjmp	.-372    	; 0x4b8 <maze_solve+0x22>
			{
				//right_forward_operation(speed);
				turn('S',speed);
     62c:	b8 01       	movw	r22, r16
     62e:	83 e5       	ldi	r24, 0x53	; 83
     630:	0f c0       	rjmp	.+30     	; 0x650 <maze_solve+0x1ba>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     632:	81 e0       	ldi	r24, 0x01	; 1
     634:	98 12       	cpse	r9, r24
     636:	40 cf       	rjmp	.-384    	; 0x4b8 <maze_solve+0x22>
     638:	b1 10       	cpse	r11, r1
     63a:	05 c0       	rjmp	.+10     	; 0x646 <maze_solve+0x1b0>
			{
				//left_right_operation(speed);
				turn('L',speed);
     63c:	b8 01       	movw	r22, r16
     63e:	8c e4       	ldi	r24, 0x4C	; 76
     640:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
     644:	08 c0       	rjmp	.+16     	; 0x656 <maze_solve+0x1c0>
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
     646:	21 e0       	ldi	r18, 0x01	; 1
     648:	b2 12       	cpse	r11, r18
     64a:	36 cf       	rjmp	.-404    	; 0x4b8 <maze_solve+0x22>
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
     64c:	b8 01       	movw	r22, r16
     64e:	8c e4       	ldi	r24, 0x4C	; 76
     650:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
				Left_trigged = 0;
				Forward_trigged = 0;
     654:	b1 2c       	mov	r11, r1
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 1))
			{
				//left_right_forward_operation(speed);
				turn('L',speed);
				Left_trigged = 0;
     656:	91 2c       	mov	r9, r1
     658:	2f cf       	rjmp	.-418    	; 0x4b8 <maze_solve+0x22>
				Forward_trigged = 0;
			}
		}
		else if ((sensors[1] < (line_th)) && (sensors[2] < (line_th)) && (sensors[3] < (line_th)))//-100
     65a:	8b 81       	ldd	r24, Y+3	; 0x03
     65c:	9c 81       	ldd	r25, Y+4	; 0x04
     65e:	8c 32       	cpi	r24, 0x2C	; 44
     660:	91 40       	sbci	r25, 0x01	; 1
     662:	08 f0       	brcs	.+2      	; 0x666 <maze_solve+0x1d0>
     664:	29 cf       	rjmp	.-430    	; 0x4b8 <maze_solve+0x22>
     666:	8d 81       	ldd	r24, Y+5	; 0x05
     668:	9e 81       	ldd	r25, Y+6	; 0x06
     66a:	8c 32       	cpi	r24, 0x2C	; 44
     66c:	91 40       	sbci	r25, 0x01	; 1
     66e:	08 f0       	brcs	.+2      	; 0x672 <maze_solve+0x1dc>
     670:	23 cf       	rjmp	.-442    	; 0x4b8 <maze_solve+0x22>
     672:	8f 81       	ldd	r24, Y+7	; 0x07
     674:	98 85       	ldd	r25, Y+8	; 0x08
     676:	8c 32       	cpi	r24, 0x2C	; 44
     678:	91 40       	sbci	r25, 0x01	; 1
     67a:	08 f0       	brcs	.+2      	; 0x67e <maze_solve+0x1e8>
     67c:	1d cf       	rjmp	.-454    	; 0x4b8 <maze_solve+0x22>
		{
			
			
			//reverse_operation(speed);
			turn('U',speed);
     67e:	b8 01       	movw	r22, r16
     680:	85 e5       	ldi	r24, 0x55	; 85
     682:	0e 94 78 03 	call	0x6f0	; 0x6f0 <turn>
     686:	18 cf       	rjmp	.-464    	; 0x4b8 <maze_solve+0x22>
				delay_us(50);
				if ((sensors[0] > edge_th) && (Left_trigged == 0))
				{
					Left_trigged=1;
				}
				if ((sensors[0] > edge_th) && (sensors[4] > edge_th))
     688:	89 85       	ldd	r24, Y+9	; 0x09
     68a:	9a 85       	ldd	r25, Y+10	; 0x0a
     68c:	85 3f       	cpi	r24, 0xF5	; 245
     68e:	91 40       	sbci	r25, 0x01	; 1
     690:	08 f4       	brcc	.+2      	; 0x694 <maze_solve+0x1fe>
     692:	97 cf       	rjmp	.-210    	; 0x5c2 <maze_solve+0x12c>
				{
					destination = destination + 1;
     694:	4f ef       	ldi	r20, 0xFF	; 255
     696:	e4 1a       	sub	r14, r20
     698:	f4 0a       	sbc	r15, r20
					if (destination > 5000)   // destination triggering
     69a:	89 e8       	ldi	r24, 0x89	; 137
     69c:	e8 16       	cp	r14, r24
     69e:	83 e1       	ldi	r24, 0x13	; 19
     6a0:	f8 06       	cpc	r15, r24
     6a2:	08 f4       	brcc	.+2      	; 0x6a6 <maze_solve+0x210>
     6a4:	8e cf       	rjmp	.-228    	; 0x5c2 <maze_solve+0x12c>
					{
						destination = 0x00;
						set_motors(0,0);
     6a6:	60 e0       	ldi	r22, 0x00	; 0
     6a8:	70 e0       	ldi	r23, 0x00	; 0
     6aa:	80 e0       	ldi	r24, 0x00	; 0
     6ac:	90 e0       	ldi	r25, 0x00	; 0
     6ae:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
     6b2:	ff cf       	rjmp	.-2      	; 0x6b2 <maze_solve+0x21c>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Right_trigged == 0) && (Forward_trigged == 0))
     6b4:	aa 20       	and	r10, r10
     6b6:	09 f4       	brne	.+2      	; 0x6ba <maze_solve+0x224>
     6b8:	70 cf       	rjmp	.-288    	; 0x59a <maze_solve+0x104>
     6ba:	04 c0       	rjmp	.+8      	; 0x6c4 <maze_solve+0x22e>
			}
			//temporary pgm
			
			
			//decide from probable 4 way
			if ((Left_trigged == 0) && (Forward_trigged == 0))
     6bc:	99 20       	and	r9, r9
     6be:	09 f4       	brne	.+2      	; 0x6c2 <maze_solve+0x22c>
     6c0:	b5 cf       	rjmp	.-150    	; 0x62c <maze_solve+0x196>
     6c2:	05 c0       	rjmp	.+10     	; 0x6ce <maze_solve+0x238>
				//left_forward_operation(speed);
				turn('L',speed);
				Right_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Right_trigged == 1) && (Forward_trigged == 0))
     6c4:	41 e0       	ldi	r20, 0x01	; 1
     6c6:	a4 16       	cp	r10, r20
     6c8:	09 f4       	brne	.+2      	; 0x6cc <maze_solve+0x236>
     6ca:	67 cf       	rjmp	.-306    	; 0x59a <maze_solve+0x104>
     6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <maze_solve+0x240>
				//right_forward_operation(speed);
				turn('S',speed);
				Left_trigged = 0;
				Forward_trigged = 0;
			}
			else if ((Left_trigged == 1) && (Forward_trigged == 0))
     6ce:	81 e0       	ldi	r24, 0x01	; 1
     6d0:	98 16       	cp	r9, r24
     6d2:	09 f4       	brne	.+2      	; 0x6d6 <maze_solve+0x240>
     6d4:	bb cf       	rjmp	.-138    	; 0x64c <maze_solve+0x1b6>
			}
			//delay_ms(20);  //delay can be changed  //******************************************************
			read_line(sensors,IR_EMITTERS_ON);
			if (sensors[2] > line_th)
			{
				Forward_trigged = 1;
     6d6:	bb 24       	eor	r11, r11
     6d8:	b3 94       	inc	r11
     6da:	ee ce       	rjmp	.-548    	; 0x4b8 <maze_solve+0x22>

000006dc <delay_us.constprop.0>:
     6dc:	8a e0       	ldi	r24, 0x0A	; 10
     6de:	90 e0       	ldi	r25, 0x00	; 0
     6e0:	6f 93       	push	r22
     6e2:	64 e0       	ldi	r22, 0x04	; 4
     6e4:	6a 95       	dec	r22
     6e6:	f1 f7       	brne	.-4      	; 0x6e4 <delay_us.constprop.0+0x8>
     6e8:	6f 91       	pop	r22
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	c9 f7       	brne	.-14     	; 0x6e0 <delay_us.constprop.0+0x4>
     6ee:	08 95       	ret

000006f0 <turn>:

#include <pololu/3pi.h>
#include "follow-segment.h"

void turn(char dir, int speed)
{
     6f0:	cf 93       	push	r28
     6f2:	df 93       	push	r29
     6f4:	cd b7       	in	r28, 0x3d	; 61
     6f6:	de b7       	in	r29, 0x3e	; 62
     6f8:	2a 97       	sbiw	r28, 0x0a	; 10
     6fa:	0f b6       	in	r0, 0x3f	; 63
     6fc:	f8 94       	cli
     6fe:	de bf       	out	0x3e, r29	; 62
     700:	0f be       	out	0x3f, r0	; 63
     702:	cd bf       	out	0x3d, r28	; 61
	const signed int speed_break = -230, break_time = 10, zero_time = 20, turn_th=300, edge_th=500, turn_speed = 60;
	unsigned int sensors[5];
	uint16_t align_time = 0, align_time_ld = 5;
	
	if (dir == 'L')
     704:	8c 34       	cpi	r24, 0x4C	; 76
     706:	09 f0       	breq	.+2      	; 0x70a <turn+0x1a>
     708:	3f c0       	rjmp	.+126    	; 0x788 <turn+0x98>
	{
		set_motors(0,0);
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	80 e0       	ldi	r24, 0x00	; 0
     710:	90 e0       	ldi	r25, 0x00	; 0
     712:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(zero_time);
     716:	84 e1       	ldi	r24, 0x14	; 20
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(speed_break,speed_break);
     71e:	6a e1       	ldi	r22, 0x1A	; 26
     720:	7f ef       	ldi	r23, 0xFF	; 255
     722:	8a e1       	ldi	r24, 0x1A	; 26
     724:	9f ef       	ldi	r25, 0xFF	; 255
     726:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     72a:	8a e0       	ldi	r24, 0x0A	; 10
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(0,0);
     732:	60 e0       	ldi	r22, 0x00	; 0
     734:	70 e0       	ldi	r23, 0x00	; 0
     736:	80 e0       	ldi	r24, 0x00	; 0
     738:	90 e0       	ldi	r25, 0x00	; 0
     73a:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     73e:	8a e0       	ldi	r24, 0x0A	; 10
     740:	90 e0       	ldi	r25, 0x00	; 0
     742:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		
		set_motors(-turn_speed,turn_speed);
     746:	6c e3       	ldi	r22, 0x3C	; 60
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	84 ec       	ldi	r24, 0xC4	; 196
     74c:	9f ef       	ldi	r25, 0xFF	; 255
     74e:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		
		while(sensors[0] < edge_th)
     752:	89 81       	ldd	r24, Y+1	; 0x01
     754:	9a 81       	ldd	r25, Y+2	; 0x02
     756:	84 3f       	cpi	r24, 0xF4	; 244
     758:	91 40       	sbci	r25, 0x01	; 1
     75a:	40 f4       	brcc	.+16     	; 0x76c <turn+0x7c>
		{
			read_line(sensors,IR_EMITTERS_ON);
     75c:	61 e0       	ldi	r22, 0x01	; 1
     75e:	ce 01       	movw	r24, r28
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     766:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     76a:	f3 cf       	rjmp	.-26     	; 0x752 <turn+0x62>
		}
		while(sensors[0] > edge_th)
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	9a 81       	ldd	r25, Y+2	; 0x02
     770:	85 3f       	cpi	r24, 0xF5	; 245
     772:	91 40       	sbci	r25, 0x01	; 1
     774:	08 f4       	brcc	.+2      	; 0x778 <turn+0x88>
     776:	8a c0       	rjmp	.+276    	; 0x88c <turn+0x19c>
		{
			read_line(sensors,IR_EMITTERS_ON);
     778:	61 e0       	ldi	r22, 0x01	; 1
     77a:	ce 01       	movw	r24, r28
     77c:	01 96       	adiw	r24, 0x01	; 1
     77e:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     782:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     786:	f2 cf       	rjmp	.-28     	; 0x76c <turn+0x7c>
		}
	}
	else if (dir == 'R')
     788:	82 35       	cpi	r24, 0x52	; 82
     78a:	09 f0       	breq	.+2      	; 0x78e <turn+0x9e>
     78c:	3f c0       	rjmp	.+126    	; 0x80c <turn+0x11c>
	{
		set_motors(0,0);
     78e:	60 e0       	ldi	r22, 0x00	; 0
     790:	70 e0       	ldi	r23, 0x00	; 0
     792:	80 e0       	ldi	r24, 0x00	; 0
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(zero_time);
     79a:	84 e1       	ldi	r24, 0x14	; 20
     79c:	90 e0       	ldi	r25, 0x00	; 0
     79e:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(speed_break,speed_break);
     7a2:	6a e1       	ldi	r22, 0x1A	; 26
     7a4:	7f ef       	ldi	r23, 0xFF	; 255
     7a6:	8a e1       	ldi	r24, 0x1A	; 26
     7a8:	9f ef       	ldi	r25, 0xFF	; 255
     7aa:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     7ae:	8a e0       	ldi	r24, 0x0A	; 10
     7b0:	90 e0       	ldi	r25, 0x00	; 0
     7b2:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(0,0);
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	70 e0       	ldi	r23, 0x00	; 0
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     7c2:	8a e0       	ldi	r24, 0x0A	; 10
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		
		set_motors(turn_speed,-turn_speed);
     7ca:	64 ec       	ldi	r22, 0xC4	; 196
     7cc:	7f ef       	ldi	r23, 0xFF	; 255
     7ce:	8c e3       	ldi	r24, 0x3C	; 60
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		
		while(sensors[4] < edge_th)
     7d6:	89 85       	ldd	r24, Y+9	; 0x09
     7d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     7da:	84 3f       	cpi	r24, 0xF4	; 244
     7dc:	91 40       	sbci	r25, 0x01	; 1
     7de:	40 f4       	brcc	.+16     	; 0x7f0 <turn+0x100>
		{
			read_line(sensors,IR_EMITTERS_ON);
     7e0:	61 e0       	ldi	r22, 0x01	; 1
     7e2:	ce 01       	movw	r24, r28
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     7ea:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     7ee:	f3 cf       	rjmp	.-26     	; 0x7d6 <turn+0xe6>
		}
		while(sensors[4] > edge_th)
     7f0:	89 85       	ldd	r24, Y+9	; 0x09
     7f2:	9a 85       	ldd	r25, Y+10	; 0x0a
     7f4:	85 3f       	cpi	r24, 0xF5	; 245
     7f6:	91 40       	sbci	r25, 0x01	; 1
     7f8:	08 f4       	brcc	.+2      	; 0x7fc <turn+0x10c>
     7fa:	48 c0       	rjmp	.+144    	; 0x88c <turn+0x19c>
		{
			read_line(sensors,IR_EMITTERS_ON);
     7fc:	61 e0       	ldi	r22, 0x01	; 1
     7fe:	ce 01       	movw	r24, r28
     800:	01 96       	adiw	r24, 0x01	; 1
     802:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     806:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     80a:	f2 cf       	rjmp	.-28     	; 0x7f0 <turn+0x100>
	}
	else if (dir == 'S')
	{

	}
	else if (dir == 'U')
     80c:	85 35       	cpi	r24, 0x55	; 85
     80e:	f1 f5       	brne	.+124    	; 0x88c <turn+0x19c>
	{
		set_motors(0,0);
     810:	60 e0       	ldi	r22, 0x00	; 0
     812:	70 e0       	ldi	r23, 0x00	; 0
     814:	80 e0       	ldi	r24, 0x00	; 0
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(zero_time);
     81c:	84 e1       	ldi	r24, 0x14	; 20
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(speed_break,speed_break);
     824:	6a e1       	ldi	r22, 0x1A	; 26
     826:	7f ef       	ldi	r23, 0xFF	; 255
     828:	8a e1       	ldi	r24, 0x1A	; 26
     82a:	9f ef       	ldi	r25, 0xFF	; 255
     82c:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     830:	8a e0       	ldi	r24, 0x0A	; 10
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		set_motors(0,0);
     838:	60 e0       	ldi	r22, 0x00	; 0
     83a:	70 e0       	ldi	r23, 0x00	; 0
     83c:	80 e0       	ldi	r24, 0x00	; 0
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		delay_ms(break_time);
     844:	8a e0       	ldi	r24, 0x0A	; 10
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
		
		set_motors(turn_speed,-turn_speed);
     84c:	64 ec       	ldi	r22, 0xC4	; 196
     84e:	7f ef       	ldi	r23, 0xFF	; 255
     850:	8c e3       	ldi	r24, 0x3C	; 60
     852:	90 e0       	ldi	r25, 0x00	; 0
     854:	0e 94 76 0b 	call	0x16ec	; 0x16ec <set_motors>
		
		while(sensors[4] < edge_th)
     858:	89 85       	ldd	r24, Y+9	; 0x09
     85a:	9a 85       	ldd	r25, Y+10	; 0x0a
     85c:	84 3f       	cpi	r24, 0xF4	; 244
     85e:	91 40       	sbci	r25, 0x01	; 1
     860:	40 f4       	brcc	.+16     	; 0x872 <turn+0x182>
		{
			read_line(sensors,IR_EMITTERS_ON);
     862:	61 e0       	ldi	r22, 0x01	; 1
     864:	ce 01       	movw	r24, r28
     866:	01 96       	adiw	r24, 0x01	; 1
     868:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     86c:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     870:	f3 cf       	rjmp	.-26     	; 0x858 <turn+0x168>
		}
		while(sensors[4] > edge_th)
     872:	89 85       	ldd	r24, Y+9	; 0x09
     874:	9a 85       	ldd	r25, Y+10	; 0x0a
     876:	85 3f       	cpi	r24, 0xF5	; 245
     878:	91 40       	sbci	r25, 0x01	; 1
     87a:	40 f0       	brcs	.+16     	; 0x88c <turn+0x19c>
		{
			read_line(sensors,IR_EMITTERS_ON);
     87c:	61 e0       	ldi	r22, 0x01	; 1
     87e:	ce 01       	movw	r24, r28
     880:	01 96       	adiw	r24, 0x01	; 1
     882:	0e 94 4e 0c 	call	0x189c	; 0x189c <read_line>
			delay_us(10);
     886:	0e 94 6e 03 	call	0x6dc	; 0x6dc <delay_us.constprop.0>
     88a:	f3 cf       	rjmp	.-26     	; 0x872 <turn+0x182>
	{
		
	}
	

     88c:	2a 96       	adiw	r28, 0x0a	; 10
     88e:	0f b6       	in	r0, 0x3f	; 63
     890:	f8 94       	cli
     892:	de bf       	out	0x3e, r29	; 62
     894:	0f be       	out	0x3f, r0	; 63
     896:	cd bf       	out	0x3d, r28	; 61
     898:	df 91       	pop	r29
     89a:	cf 91       	pop	r28
     89c:	08 95       	ret

0000089e <_ZN15OrangutanAnalog7setModeEh>:
     89e:	88 23       	and	r24, r24
     8a0:	21 f4       	brne	.+8      	; 0x8aa <_ZN15OrangutanAnalog7setModeEh+0xc>
     8a2:	80 91 7c 00 	lds	r24, 0x007C
     8a6:	8f 7d       	andi	r24, 0xDF	; 223
     8a8:	03 c0       	rjmp	.+6      	; 0x8b0 <_ZN15OrangutanAnalog7setModeEh+0x12>
     8aa:	80 91 7c 00 	lds	r24, 0x007C
     8ae:	80 62       	ori	r24, 0x20	; 32
     8b0:	80 93 7c 00 	sts	0x007C, r24
     8b4:	08 95       	ret

000008b6 <_ZN15OrangutanAnalog7getModeEv>:
     8b6:	80 91 7c 00 	lds	r24, 0x007C
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	25 e0       	ldi	r18, 0x05	; 5
     8be:	95 95       	asr	r25
     8c0:	87 95       	ror	r24
     8c2:	2a 95       	dec	r18
     8c4:	e1 f7       	brne	.-8      	; 0x8be <_ZN15OrangutanAnalog7getModeEv+0x8>
     8c6:	81 70       	andi	r24, 0x01	; 1
     8c8:	08 95       	ret

000008ca <_ZN15OrangutanAnalog12isConvertingEv>:
     8ca:	80 91 7a 00 	lds	r24, 0x007A
     8ce:	90 e0       	ldi	r25, 0x00	; 0
     8d0:	36 e0       	ldi	r19, 0x06	; 6
     8d2:	95 95       	asr	r25
     8d4:	87 95       	ror	r24
     8d6:	3a 95       	dec	r19
     8d8:	e1 f7       	brne	.-8      	; 0x8d2 <_ZN15OrangutanAnalog12isConvertingEv+0x8>
     8da:	81 70       	andi	r24, 0x01	; 1
     8dc:	08 95       	ret

000008de <_ZN15OrangutanAnalog16conversionResultEv>:
     8de:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <_ZN15OrangutanAnalog7getModeEv>
     8e2:	88 23       	and	r24, r24
     8e4:	21 f0       	breq	.+8      	; 0x8ee <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     8e6:	20 91 79 00 	lds	r18, 0x0079
     8ea:	30 e0       	ldi	r19, 0x00	; 0
     8ec:	04 c0       	rjmp	.+8      	; 0x8f6 <_ZN15OrangutanAnalog16conversionResultEv+0x18>
     8ee:	20 91 78 00 	lds	r18, 0x0078
     8f2:	30 91 79 00 	lds	r19, 0x0079
     8f6:	c9 01       	movw	r24, r18
     8f8:	08 95       	ret

000008fa <_ZN15OrangutanAnalog15startConversionEhh>:
     8fa:	80 32       	cpi	r24, 0x20	; 32
     8fc:	b0 f4       	brcc	.+44     	; 0x92a <__stack+0x2b>
     8fe:	97 e8       	ldi	r25, 0x87	; 135
     900:	90 93 7a 00 	sts	0x007A, r25
     904:	90 91 7c 00 	lds	r25, 0x007C
     908:	29 2f       	mov	r18, r25
     90a:	20 64       	ori	r18, 0x40	; 64
     90c:	66 23       	and	r22, r22
     90e:	11 f0       	breq	.+4      	; 0x914 <__stack+0x15>
     910:	90 6c       	ori	r25, 0xC0	; 192
     912:	02 c0       	rjmp	.+4      	; 0x918 <__stack+0x19>
     914:	92 2f       	mov	r25, r18
     916:	9f 77       	andi	r25, 0x7F	; 127
     918:	90 7e       	andi	r25, 0xE0	; 224
     91a:	98 2b       	or	r25, r24
     91c:	90 93 7c 00 	sts	0x007C, r25
     920:	80 91 7a 00 	lds	r24, 0x007A
     924:	80 64       	ori	r24, 0x40	; 64
     926:	80 93 7a 00 	sts	0x007A, r24
     92a:	08 95       	ret

0000092c <_ZN15OrangutanAnalog11readAverageEhj>:
     92c:	a0 e0       	ldi	r26, 0x00	; 0
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	ec e9       	ldi	r30, 0x9C	; 156
     932:	f4 e0       	ldi	r31, 0x04	; 4
     934:	0c 94 54 12 	jmp	0x24a8	; 0x24a8 <__prologue_saves__+0x14>
     938:	6b 01       	movw	r12, r22
     93a:	60 e0       	ldi	r22, 0x00	; 0
     93c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <_ZN15OrangutanAnalog15startConversionEhh>
     940:	0e 94 65 04 	call	0x8ca	; 0x8ca <_ZN15OrangutanAnalog12isConvertingEv>
     944:	88 23       	and	r24, r24
     946:	e1 f7       	brne	.-8      	; 0x940 <_ZN15OrangutanAnalog11readAverageEhj+0x14>
     948:	e6 01       	movw	r28, r12
     94a:	ee 24       	eor	r14, r14
     94c:	ff 24       	eor	r15, r15
     94e:	87 01       	movw	r16, r14
     950:	80 91 7a 00 	lds	r24, 0x007A
     954:	80 64       	ori	r24, 0x40	; 64
     956:	80 93 7a 00 	sts	0x007A, r24
     95a:	0e 94 65 04 	call	0x8ca	; 0x8ca <_ZN15OrangutanAnalog12isConvertingEv>
     95e:	88 23       	and	r24, r24
     960:	e1 f7       	brne	.-8      	; 0x95a <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
     962:	0e 94 6f 04 	call	0x8de	; 0x8de <_ZN15OrangutanAnalog16conversionResultEv>
     966:	a0 e0       	ldi	r26, 0x00	; 0
     968:	b0 e0       	ldi	r27, 0x00	; 0
     96a:	e8 0e       	add	r14, r24
     96c:	f9 1e       	adc	r15, r25
     96e:	0a 1f       	adc	r16, r26
     970:	1b 1f       	adc	r17, r27
     972:	21 97       	sbiw	r28, 0x01	; 1
     974:	69 f7       	brne	.-38     	; 0x950 <_ZN15OrangutanAnalog11readAverageEhj+0x24>
     976:	c6 01       	movw	r24, r12
     978:	96 95       	lsr	r25
     97a:	87 95       	ror	r24
     97c:	20 e4       	ldi	r18, 0x40	; 64
     97e:	c2 16       	cp	r12, r18
     980:	d1 04       	cpc	r13, r1
     982:	40 f4       	brcc	.+16     	; 0x994 <_ZN15OrangutanAnalog11readAverageEhj+0x68>
     984:	8e 0d       	add	r24, r14
     986:	9f 1d       	adc	r25, r15
     988:	6c 2d       	mov	r22, r12
     98a:	70 e0       	ldi	r23, 0x00	; 0
     98c:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     990:	cb 01       	movw	r24, r22
     992:	0d c0       	rjmp	.+26     	; 0x9ae <_ZN15OrangutanAnalog11readAverageEhj+0x82>
     994:	bc 01       	movw	r22, r24
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	6e 0d       	add	r22, r14
     99c:	7f 1d       	adc	r23, r15
     99e:	80 1f       	adc	r24, r16
     9a0:	91 1f       	adc	r25, r17
     9a2:	96 01       	movw	r18, r12
     9a4:	40 e0       	ldi	r20, 0x00	; 0
     9a6:	50 e0       	ldi	r21, 0x00	; 0
     9a8:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
     9ac:	c9 01       	movw	r24, r18
     9ae:	cd b7       	in	r28, 0x3d	; 61
     9b0:	de b7       	in	r29, 0x3e	; 62
     9b2:	e8 e0       	ldi	r30, 0x08	; 8
     9b4:	0c 94 70 12 	jmp	0x24e0	; 0x24e0 <__epilogue_restores__+0x14>

000009b8 <_ZN15OrangutanAnalog12toMillivoltsEj>:
     9b8:	a3 e0       	ldi	r26, 0x03	; 3
     9ba:	b0 e0       	ldi	r27, 0x00	; 0
     9bc:	e2 ee       	ldi	r30, 0xE2	; 226
     9be:	f4 e0       	ldi	r31, 0x04	; 4
     9c0:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__prologue_saves__+0x1e>
     9c4:	bc 01       	movw	r22, r24
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	20 91 00 01 	lds	r18, 0x0100
     9ce:	30 91 01 01 	lds	r19, 0x0101
     9d2:	40 e0       	ldi	r20, 0x00	; 0
     9d4:	50 e0       	ldi	r21, 0x00	; 0
     9d6:	0e 94 ba 11 	call	0x2374	; 0x2374 <__mulsi3>
     9da:	18 2f       	mov	r17, r24
     9dc:	69 83       	std	Y+1, r22	; 0x01
     9de:	7a 83       	std	Y+2, r23	; 0x02
     9e0:	9b 83       	std	Y+3, r25	; 0x03
     9e2:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <_ZN15OrangutanAnalog7getModeEv>
     9e6:	69 81       	ldd	r22, Y+1	; 0x01
     9e8:	7a 81       	ldd	r23, Y+2	; 0x02
     9ea:	9b 81       	ldd	r25, Y+3	; 0x03
     9ec:	88 23       	and	r24, r24
     9ee:	71 f0       	breq	.+28     	; 0xa0c <_ZN15OrangutanAnalog12toMillivoltsEj+0x54>
     9f0:	9b 01       	movw	r18, r22
     9f2:	41 2f       	mov	r20, r17
     9f4:	59 2f       	mov	r21, r25
     9f6:	ca 01       	movw	r24, r20
     9f8:	b9 01       	movw	r22, r18
     9fa:	61 58       	subi	r22, 0x81	; 129
     9fc:	7f 4f       	sbci	r23, 0xFF	; 255
     9fe:	8f 4f       	sbci	r24, 0xFF	; 255
     a00:	9f 4f       	sbci	r25, 0xFF	; 255
     a02:	2f ef       	ldi	r18, 0xFF	; 255
     a04:	30 e0       	ldi	r19, 0x00	; 0
     a06:	40 e0       	ldi	r20, 0x00	; 0
     a08:	50 e0       	ldi	r21, 0x00	; 0
     a0a:	0d c0       	rjmp	.+26     	; 0xa26 <_ZN15OrangutanAnalog12toMillivoltsEj+0x6e>
     a0c:	9b 01       	movw	r18, r22
     a0e:	41 2f       	mov	r20, r17
     a10:	59 2f       	mov	r21, r25
     a12:	ca 01       	movw	r24, r20
     a14:	b9 01       	movw	r22, r18
     a16:	61 50       	subi	r22, 0x01	; 1
     a18:	7e 4f       	sbci	r23, 0xFE	; 254
     a1a:	8f 4f       	sbci	r24, 0xFF	; 255
     a1c:	9f 4f       	sbci	r25, 0xFF	; 255
     a1e:	2f ef       	ldi	r18, 0xFF	; 255
     a20:	33 e0       	ldi	r19, 0x03	; 3
     a22:	40 e0       	ldi	r20, 0x00	; 0
     a24:	50 e0       	ldi	r21, 0x00	; 0
     a26:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
     a2a:	c9 01       	movw	r24, r18
     a2c:	23 96       	adiw	r28, 0x03	; 3
     a2e:	e3 e0       	ldi	r30, 0x03	; 3
     a30:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__epilogue_restores__+0x1e>

00000a34 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
     a34:	0e 94 96 04 	call	0x92c	; 0x92c <_ZN15OrangutanAnalog11readAverageEhj>
     a38:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <_ZN15OrangutanAnalog12toMillivoltsEj>
     a3c:	08 95       	ret

00000a3e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
     a3e:	1f 93       	push	r17
     a40:	cf 93       	push	r28
     a42:	df 93       	push	r29
     a44:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <_ZN15OrangutanAnalog7getModeEv>
     a48:	18 2f       	mov	r17, r24
     a4a:	80 e0       	ldi	r24, 0x00	; 0
     a4c:	0e 94 4f 04 	call	0x89e	; 0x89e <_ZN15OrangutanAnalog7setModeEh>
     a50:	86 e0       	ldi	r24, 0x06	; 6
     a52:	6a e0       	ldi	r22, 0x0A	; 10
     a54:	70 e0       	ldi	r23, 0x00	; 0
     a56:	0e 94 1a 05 	call	0xa34	; 0xa34 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
     a5a:	ec 01       	movw	r28, r24
     a5c:	81 2f       	mov	r24, r17
     a5e:	0e 94 4f 04 	call	0x89e	; 0x89e <_ZN15OrangutanAnalog7setModeEh>
     a62:	9e 01       	movw	r18, r28
     a64:	22 0f       	add	r18, r18
     a66:	33 1f       	adc	r19, r19
     a68:	2c 0f       	add	r18, r28
     a6a:	3d 1f       	adc	r19, r29
     a6c:	2f 5f       	subi	r18, 0xFF	; 255
     a6e:	3f 4f       	sbci	r19, 0xFF	; 255
     a70:	36 95       	lsr	r19
     a72:	27 95       	ror	r18
     a74:	c9 01       	movw	r24, r18
     a76:	df 91       	pop	r29
     a78:	cf 91       	pop	r28
     a7a:	1f 91       	pop	r17
     a7c:	08 95       	ret

00000a7e <read_battery_millivolts_3pi>:
     a7e:	0e 94 1f 05 	call	0xa3e	; 0xa3e <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
     a82:	08 95       	ret

00000a84 <_ZL16currentCharacterv>:
     a84:	90 91 4f 01 	lds	r25, 0x014F
     a88:	e0 91 4b 01 	lds	r30, 0x014B
     a8c:	f0 91 4c 01 	lds	r31, 0x014C
     a90:	99 23       	and	r25, r25
     a92:	11 f0       	breq	.+4      	; 0xa98 <_ZL16currentCharacterv+0x14>
     a94:	84 91       	lpm	r24, Z
     a96:	01 c0       	rjmp	.+2      	; 0xa9a <_ZL16currentCharacterv+0x16>
     a98:	80 81       	ld	r24, Z
     a9a:	28 2f       	mov	r18, r24
     a9c:	21 54       	subi	r18, 0x41	; 65
     a9e:	2a 31       	cpi	r18, 0x1A	; 26
     aa0:	10 f4       	brcc	.+4      	; 0xaa6 <_ZL16currentCharacterv+0x22>
     aa2:	80 5e       	subi	r24, 0xE0	; 224
     aa4:	08 95       	ret
     aa6:	80 32       	cpi	r24, 0x20	; 32
     aa8:	71 f4       	brne	.+28     	; 0xac6 <_ZL16currentCharacterv+0x42>
     aaa:	20 91 4b 01 	lds	r18, 0x014B
     aae:	30 91 4c 01 	lds	r19, 0x014C
     ab2:	a9 01       	movw	r20, r18
     ab4:	4f 5f       	subi	r20, 0xFF	; 255
     ab6:	5f 4f       	sbci	r21, 0xFF	; 255
     ab8:	50 93 4c 01 	sts	0x014C, r21
     abc:	40 93 4b 01 	sts	0x014B, r20
     ac0:	21 15       	cp	r18, r1
     ac2:	31 05       	cpc	r19, r1
     ac4:	09 f7       	brne	.-62     	; 0xa88 <_ZL16currentCharacterv+0x4>
     ac6:	08 95       	ret

00000ac8 <_ZL9getNumberv>:
     ac8:	ef 92       	push	r14
     aca:	ff 92       	push	r15
     acc:	cf 93       	push	r28
     ace:	df 93       	push	r29
     ad0:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     ad4:	c0 e0       	ldi	r28, 0x00	; 0
     ad6:	d0 e0       	ldi	r29, 0x00	; 0
     ad8:	1b c0       	rjmp	.+54     	; 0xb10 <_ZL9getNumberv+0x48>
     ada:	9e 01       	movw	r18, r28
     adc:	22 0f       	add	r18, r18
     ade:	33 1f       	adc	r19, r19
     ae0:	93 e0       	ldi	r25, 0x03	; 3
     ae2:	cc 0f       	add	r28, r28
     ae4:	dd 1f       	adc	r29, r29
     ae6:	9a 95       	dec	r25
     ae8:	e1 f7       	brne	.-8      	; 0xae2 <_ZL9getNumberv+0x1a>
     aea:	c2 0f       	add	r28, r18
     aec:	d3 1f       	adc	r29, r19
     aee:	99 27       	eor	r25, r25
     af0:	87 fd       	sbrc	r24, 7
     af2:	90 95       	com	r25
     af4:	c8 0f       	add	r28, r24
     af6:	d9 1f       	adc	r29, r25
     af8:	e0 97       	sbiw	r28, 0x30	; 48
     afa:	80 91 4b 01 	lds	r24, 0x014B
     afe:	90 91 4c 01 	lds	r25, 0x014C
     b02:	01 96       	adiw	r24, 0x01	; 1
     b04:	90 93 4c 01 	sts	0x014C, r25
     b08:	80 93 4b 01 	sts	0x014B, r24
     b0c:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     b10:	98 2f       	mov	r25, r24
     b12:	90 53       	subi	r25, 0x30	; 48
     b14:	9a 30       	cpi	r25, 0x0A	; 10
     b16:	08 f3       	brcs	.-62     	; 0xada <_ZL9getNumberv+0x12>
     b18:	ce 01       	movw	r24, r28
     b1a:	df 91       	pop	r29
     b1c:	cf 91       	pop	r28
     b1e:	ff 90       	pop	r15
     b20:	ef 90       	pop	r14
     b22:	08 95       	ret

00000b24 <_ZN15OrangutanBuzzer5init2Ev>:
     b24:	10 92 6f 00 	sts	0x006F, r1
     b28:	83 e2       	ldi	r24, 0x23	; 35
     b2a:	80 93 80 00 	sts	0x0080, r24
     b2e:	81 e1       	ldi	r24, 0x11	; 17
     b30:	80 93 81 00 	sts	0x0081, r24
     b34:	10 92 82 00 	sts	0x0082, r1
     b38:	80 e1       	ldi	r24, 0x10	; 16
     b3a:	97 e2       	ldi	r25, 0x27	; 39
     b3c:	90 93 89 00 	sts	0x0089, r25
     b40:	80 93 88 00 	sts	0x0088, r24
     b44:	10 92 8b 00 	sts	0x008B, r1
     b48:	10 92 8a 00 	sts	0x008A, r1
     b4c:	22 9a       	sbi	0x04, 2	; 4
     b4e:	78 94       	sei
     b50:	08 95       	ret

00000b52 <_ZN15OrangutanBuzzer4initEv>:
     b52:	80 91 4a 01 	lds	r24, 0x014A
     b56:	88 23       	and	r24, r24
     b58:	29 f4       	brne	.+10     	; 0xb64 <_ZN15OrangutanBuzzer4initEv+0x12>
     b5a:	81 e0       	ldi	r24, 0x01	; 1
     b5c:	80 93 4a 01 	sts	0x014A, r24
     b60:	0e 94 92 05 	call	0xb24	; 0xb24 <_ZN15OrangutanBuzzer5init2Ev>
     b64:	08 95       	ret

00000b66 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     b66:	a0 e0       	ldi	r26, 0x00	; 0
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	e9 eb       	ldi	r30, 0xB9	; 185
     b6c:	f5 e0       	ldi	r31, 0x05	; 5
     b6e:	0c 94 50 12 	jmp	0x24a0	; 0x24a0 <__prologue_saves__+0xc>
     b72:	8c 01       	movw	r16, r24
     b74:	5b 01       	movw	r10, r22
     b76:	e4 2e       	mov	r14, r20
     b78:	0e 94 a9 05 	call	0xb52	; 0xb52 <_ZN15OrangutanBuzzer4initEv>
     b7c:	10 92 02 01 	sts	0x0102, r1
     b80:	17 ff       	sbrs	r17, 7
     b82:	04 c0       	rjmp	.+8      	; 0xb8c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x26>
     b84:	1f 77       	andi	r17, 0x7F	; 127
     b86:	aa e0       	ldi	r26, 0x0A	; 10
     b88:	fa 2e       	mov	r15, r26
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2a>
     b8c:	ff 24       	eor	r15, r15
     b8e:	f3 94       	inc	r15
     b90:	c0 90 81 00 	lds	r12, 0x0081
     b94:	dd 24       	eor	r13, r13
     b96:	28 ef       	ldi	r18, 0xF8	; 248
     b98:	c2 22       	and	r12, r18
     b9a:	dd 24       	eor	r13, r13
     b9c:	88 ec       	ldi	r24, 0xC8	; 200
     b9e:	3f 2d       	mov	r19, r15
     ba0:	38 9f       	mul	r19, r24
     ba2:	c0 01       	movw	r24, r0
     ba4:	11 24       	eor	r1, r1
     ba6:	80 17       	cp	r24, r16
     ba8:	91 07       	cpc	r25, r17
     baa:	d8 f4       	brcc	.+54     	; 0xbe2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x7c>
     bac:	e8 01       	movw	r28, r16
     bae:	67 e2       	ldi	r22, 0x27	; 39
     bb0:	01 31       	cpi	r16, 0x11	; 17
     bb2:	16 07       	cpc	r17, r22
     bb4:	10 f0       	brcs	.+4      	; 0xbba <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x54>
     bb6:	c0 e1       	ldi	r28, 0x10	; 16
     bb8:	d7 e2       	ldi	r29, 0x27	; 39
     bba:	be 01       	movw	r22, r28
     bbc:	76 95       	lsr	r23
     bbe:	67 95       	ror	r22
     bc0:	80 e0       	ldi	r24, 0x00	; 0
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	60 58       	subi	r22, 0x80	; 128
     bc6:	79 46       	sbci	r23, 0x69	; 105
     bc8:	87 46       	sbci	r24, 0x67	; 103
     bca:	9f 4f       	sbci	r25, 0xFF	; 255
     bcc:	9e 01       	movw	r18, r28
     bce:	40 e0       	ldi	r20, 0x00	; 0
     bd0:	50 e0       	ldi	r21, 0x00	; 0
     bd2:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
     bd6:	89 01       	movw	r16, r18
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	c8 2a       	or	r12, r24
     bde:	d9 2a       	or	r13, r25
     be0:	2c c0       	rjmp	.+88     	; 0xc3a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd4>
     be2:	98 e2       	ldi	r25, 0x28	; 40
     be4:	f9 9e       	mul	r15, r25
     be6:	90 2d       	mov	r25, r0
     be8:	11 24       	eor	r1, r1
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	89 2e       	mov	r8, r25
     bee:	e4 01       	movw	r28, r8
     bf0:	4e 01       	movw	r8, r28
     bf2:	98 2e       	mov	r9, r24
     bf4:	e4 01       	movw	r28, r8
     bf6:	80 16       	cp	r8, r16
     bf8:	91 06       	cpc	r9, r17
     bfa:	08 f4       	brcc	.+2      	; 0xbfe <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x98>
     bfc:	e8 01       	movw	r28, r16
     bfe:	be 01       	movw	r22, r28
     c00:	76 95       	lsr	r23
     c02:	67 95       	ror	r22
     c04:	9e 01       	movw	r18, r28
     c06:	40 e0       	ldi	r20, 0x00	; 0
     c08:	50 e0       	ldi	r21, 0x00	; 0
     c0a:	8f 2d       	mov	r24, r15
     c0c:	8a 30       	cpi	r24, 0x0A	; 10
     c0e:	39 f4       	brne	.+14     	; 0xc1e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xb8>
     c10:	80 e0       	ldi	r24, 0x00	; 0
     c12:	90 e0       	ldi	r25, 0x00	; 0
     c14:	60 5e       	subi	r22, 0xE0	; 224
     c16:	73 44       	sbci	r23, 0x43	; 67
     c18:	81 44       	sbci	r24, 0x41	; 65
     c1a:	9f 4f       	sbci	r25, 0xFF	; 255
     c1c:	06 c0       	rjmp	.+12     	; 0xc2a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc4>
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	90 e0       	ldi	r25, 0x00	; 0
     c22:	60 53       	subi	r22, 0x30	; 48
     c24:	7d 4e       	sbci	r23, 0xED	; 237
     c26:	8c 4e       	sbci	r24, 0xEC	; 236
     c28:	9f 4f       	sbci	r25, 0xFF	; 255
     c2a:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
     c2e:	89 01       	movw	r16, r18
     c30:	52 e0       	ldi	r21, 0x02	; 2
     c32:	85 2e       	mov	r8, r21
     c34:	91 2c       	mov	r9, r1
     c36:	c8 28       	or	r12, r8
     c38:	d9 28       	or	r13, r9
     c3a:	2f 2d       	mov	r18, r15
     c3c:	2a 30       	cpi	r18, 0x0A	; 10
     c3e:	39 f4       	brne	.+14     	; 0xc4e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xe8>
     c40:	ce 01       	movw	r24, r28
     c42:	05 96       	adiw	r24, 0x05	; 5
     c44:	6a e0       	ldi	r22, 0x0A	; 10
     c46:	70 e0       	ldi	r23, 0x00	; 0
     c48:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     c4c:	eb 01       	movw	r28, r22
     c4e:	33 e0       	ldi	r19, 0x03	; 3
     c50:	c8 3e       	cpi	r28, 0xE8	; 232
     c52:	d3 07       	cpc	r29, r19
     c54:	79 f0       	breq	.+30     	; 0xc74 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x10e>
     c56:	be 01       	movw	r22, r28
     c58:	80 e0       	ldi	r24, 0x00	; 0
     c5a:	90 e0       	ldi	r25, 0x00	; 0
     c5c:	95 01       	movw	r18, r10
     c5e:	40 e0       	ldi	r20, 0x00	; 0
     c60:	50 e0       	ldi	r21, 0x00	; 0
     c62:	0e 94 ba 11 	call	0x2374	; 0x2374 <__mulsi3>
     c66:	28 ee       	ldi	r18, 0xE8	; 232
     c68:	33 e0       	ldi	r19, 0x03	; 3
     c6a:	40 e0       	ldi	r20, 0x00	; 0
     c6c:	50 e0       	ldi	r21, 0x00	; 0
     c6e:	0e 94 20 12 	call	0x2440	; 0x2440 <__divmodsi4>
     c72:	01 c0       	rjmp	.+2      	; 0xc76 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     c74:	95 01       	movw	r18, r10
     c76:	10 92 6f 00 	sts	0x006F, r1
     c7a:	c0 92 81 00 	sts	0x0081, r12
     c7e:	10 93 89 00 	sts	0x0089, r17
     c82:	00 93 88 00 	sts	0x0088, r16
     c86:	40 91 88 00 	lds	r20, 0x0088
     c8a:	50 91 89 00 	lds	r21, 0x0089
     c8e:	6e 2d       	mov	r22, r14
     c90:	60 31       	cpi	r22, 0x10	; 16
     c92:	08 f0       	brcs	.+2      	; 0xc96 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     c94:	6f e0       	ldi	r22, 0x0F	; 15
     c96:	80 e1       	ldi	r24, 0x10	; 16
     c98:	90 e0       	ldi	r25, 0x00	; 0
     c9a:	86 1b       	sub	r24, r22
     c9c:	91 09       	sbc	r25, r1
     c9e:	ba 01       	movw	r22, r20
     ca0:	02 c0       	rjmp	.+4      	; 0xca6 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     ca2:	76 95       	lsr	r23
     ca4:	67 95       	ror	r22
     ca6:	8a 95       	dec	r24
     ca8:	e2 f7       	brpl	.-8      	; 0xca2 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     caa:	70 93 8b 00 	sts	0x008B, r23
     cae:	60 93 8a 00 	sts	0x008A, r22
     cb2:	30 93 52 01 	sts	0x0152, r19
     cb6:	20 93 51 01 	sts	0x0151, r18
     cba:	86 b3       	in	r24, 0x16	; 22
     cbc:	8f ef       	ldi	r24, 0xFF	; 255
     cbe:	86 bb       	out	0x16, r24	; 22
     cc0:	81 e0       	ldi	r24, 0x01	; 1
     cc2:	80 93 6f 00 	sts	0x006F, r24
     cc6:	cd b7       	in	r28, 0x3d	; 61
     cc8:	de b7       	in	r29, 0x3e	; 62
     cca:	ec e0       	ldi	r30, 0x0C	; 12
     ccc:	0c 94 6c 12 	jmp	0x24d8	; 0x24d8 <__epilogue_restores__+0xc>

00000cd0 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     cd0:	9b 01       	movw	r18, r22
     cd2:	8f 3f       	cpi	r24, 0xFF	; 255
     cd4:	11 f0       	breq	.+4      	; 0xcda <_ZN15OrangutanBuzzer8playNoteEhjh+0xa>
     cd6:	44 23       	and	r20, r20
     cd8:	29 f4       	brne	.+10     	; 0xce4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x14>
     cda:	88 ee       	ldi	r24, 0xE8	; 232
     cdc:	93 e0       	ldi	r25, 0x03	; 3
     cde:	b9 01       	movw	r22, r18
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	49 c0       	rjmp	.+146    	; 0xd76 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa6>
     ce4:	81 31       	cpi	r24, 0x11	; 17
     ce6:	30 f0       	brcs	.+12     	; 0xcf4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x24>
     ce8:	58 2f       	mov	r21, r24
     cea:	50 51       	subi	r21, 0x10	; 16
     cec:	50 36       	cpi	r21, 0x60	; 96
     cee:	18 f0       	brcs	.+6      	; 0xcf6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cf0:	5f e5       	ldi	r21, 0x5F	; 95
     cf2:	01 c0       	rjmp	.+2      	; 0xcf6 <_ZN15OrangutanBuzzer8playNoteEhjh+0x26>
     cf4:	50 e0       	ldi	r21, 0x00	; 0
     cf6:	85 2f       	mov	r24, r21
     cf8:	6c e0       	ldi	r22, 0x0C	; 12
     cfa:	0e 94 ca 11 	call	0x2394	; 0x2394 <__udivmodqi4>
     cfe:	a8 2f       	mov	r26, r24
     d00:	b0 e0       	ldi	r27, 0x00	; 0
     d02:	e4 ef       	ldi	r30, 0xF4	; 244
     d04:	ff ef       	ldi	r31, 0xFF	; 255
     d06:	ae 9f       	mul	r26, r30
     d08:	b0 01       	movw	r22, r0
     d0a:	af 9f       	mul	r26, r31
     d0c:	70 0d       	add	r23, r0
     d0e:	be 9f       	mul	r27, r30
     d10:	70 0d       	add	r23, r0
     d12:	11 24       	eor	r1, r1
     d14:	65 0f       	add	r22, r21
     d16:	71 1d       	adc	r23, r1
     d18:	6c 30       	cpi	r22, 0x0C	; 12
     d1a:	71 05       	cpc	r23, r1
     d1c:	40 f4       	brcc	.+16     	; 0xd2e <_ZN15OrangutanBuzzer8playNoteEhjh+0x5e>
     d1e:	fb 01       	movw	r30, r22
     d20:	ee 0f       	add	r30, r30
     d22:	ff 1f       	adc	r31, r31
     d24:	e4 5f       	subi	r30, 0xF4	; 244
     d26:	fe 4f       	sbci	r31, 0xFE	; 254
     d28:	60 81       	ld	r22, Z
     d2a:	71 81       	ldd	r23, Z+1	; 0x01
     d2c:	02 c0       	rjmp	.+4      	; 0xd32 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     d2e:	60 e0       	ldi	r22, 0x00	; 0
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	87 30       	cpi	r24, 0x07	; 7
     d34:	81 f0       	breq	.+32     	; 0xd56 <_ZN15OrangutanBuzzer8playNoteEhjh+0x86>
     d36:	08 2e       	mov	r0, r24
     d38:	02 c0       	rjmp	.+4      	; 0xd3e <_ZN15OrangutanBuzzer8playNoteEhjh+0x6e>
     d3a:	66 0f       	add	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	0a 94       	dec	r0
     d40:	e2 f7       	brpl	.-8      	; 0xd3a <_ZN15OrangutanBuzzer8playNoteEhjh+0x6a>
     d42:	82 30       	cpi	r24, 0x02	; 2
     d44:	28 f0       	brcs	.+10     	; 0xd50 <_ZN15OrangutanBuzzer8playNoteEhjh+0x80>
     d46:	cb 01       	movw	r24, r22
     d48:	05 96       	adiw	r24, 0x05	; 5
     d4a:	6a e0       	ldi	r22, 0x0A	; 10
     d4c:	70 e0       	ldi	r23, 0x00	; 0
     d4e:	0c c0       	rjmp	.+24     	; 0xd68 <_ZN15OrangutanBuzzer8playNoteEhjh+0x98>
     d50:	60 50       	subi	r22, 0x00	; 0
     d52:	70 48       	sbci	r23, 0x80	; 128
     d54:	0b c0       	rjmp	.+22     	; 0xd6c <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     d56:	cb 01       	movw	r24, r22
     d58:	b6 e0       	ldi	r27, 0x06	; 6
     d5a:	88 0f       	add	r24, r24
     d5c:	99 1f       	adc	r25, r25
     d5e:	ba 95       	dec	r27
     d60:	e1 f7       	brne	.-8      	; 0xd5a <_ZN15OrangutanBuzzer8playNoteEhjh+0x8a>
     d62:	02 96       	adiw	r24, 0x02	; 2
     d64:	65 e0       	ldi	r22, 0x05	; 5
     d66:	70 e0       	ldi	r23, 0x00	; 0
     d68:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     d6c:	40 31       	cpi	r20, 0x10	; 16
     d6e:	08 f0       	brcs	.+2      	; 0xd72 <_ZN15OrangutanBuzzer8playNoteEhjh+0xa2>
     d70:	4f e0       	ldi	r20, 0x0F	; 15
     d72:	cb 01       	movw	r24, r22
     d74:	b9 01       	movw	r22, r18
     d76:	0e 94 b3 05 	call	0xb66	; 0xb66 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     d7a:	08 95       	ret

00000d7c <_ZL8nextNotev>:
     d7c:	a0 e0       	ldi	r26, 0x00	; 0
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	e4 ec       	ldi	r30, 0xC4	; 196
     d82:	f6 e0       	ldi	r31, 0x06	; 6
     d84:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__prologue_saves__+0xa>
     d88:	b0 90 03 01 	lds	r11, 0x0103
     d8c:	80 91 4d 01 	lds	r24, 0x014D
     d90:	88 23       	and	r24, r24
     d92:	61 f0       	breq	.+24     	; 0xdac <_ZL8nextNotev+0x30>
     d94:	60 91 4e 01 	lds	r22, 0x014E
     d98:	66 23       	and	r22, r22
     d9a:	41 f0       	breq	.+16     	; 0xdac <_ZL8nextNotev+0x30>
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN15OrangutanBuzzer8playNoteEhjh>
     da6:	10 92 4e 01 	sts	0x014E, r1
     daa:	34 c1       	rjmp	.+616    	; 0x1014 <_ZL8nextNotev+0x298>
     dac:	c0 ec       	ldi	r28, 0xC0	; 192
     dae:	dd e5       	ldi	r29, 0x5D	; 93
     db0:	aa 24       	eor	r10, r10
     db2:	a3 94       	inc	r10
     db4:	14 e0       	ldi	r17, 0x04	; 4
     db6:	71 2e       	mov	r7, r17
     db8:	00 ed       	ldi	r16, 0xD0	; 208
     dba:	17 e0       	ldi	r17, 0x07	; 7
     dbc:	b4 e0       	ldi	r27, 0x04	; 4
     dbe:	eb 2e       	mov	r14, r27
     dc0:	f1 2c       	mov	r15, r1
     dc2:	a4 ef       	ldi	r26, 0xF4	; 244
     dc4:	ca 2e       	mov	r12, r26
     dc6:	a1 e0       	ldi	r26, 0x01	; 1
     dc8:	da 2e       	mov	r13, r26
     dca:	ff e0       	ldi	r31, 0x0F	; 15
     dcc:	8f 2e       	mov	r8, r31
     dce:	91 2c       	mov	r9, r1
     dd0:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     dd4:	20 91 4b 01 	lds	r18, 0x014B
     dd8:	30 91 4c 01 	lds	r19, 0x014C
     ddc:	2f 5f       	subi	r18, 0xFF	; 255
     dde:	3f 4f       	sbci	r19, 0xFF	; 255
     de0:	30 93 4c 01 	sts	0x014C, r19
     de4:	20 93 4b 01 	sts	0x014B, r18
     de8:	86 36       	cpi	r24, 0x66	; 102
     dea:	f1 f1       	breq	.+124    	; 0xe68 <_ZL8nextNotev+0xec>
     dec:	87 36       	cpi	r24, 0x67	; 103
     dee:	cc f4       	brge	.+50     	; 0xe22 <_ZL8nextNotev+0xa6>
     df0:	82 36       	cpi	r24, 0x62	; 98
     df2:	09 f4       	brne	.+2      	; 0xdf6 <_ZL8nextNotev+0x7a>
     df4:	af c0       	rjmp	.+350    	; 0xf54 <_ZL8nextNotev+0x1d8>
     df6:	83 36       	cpi	r24, 0x63	; 99
     df8:	7c f4       	brge	.+30     	; 0xe18 <_ZL8nextNotev+0x9c>
     dfa:	8e 33       	cpi	r24, 0x3E	; 62
     dfc:	49 f1       	breq	.+82     	; 0xe50 <_ZL8nextNotev+0xd4>
     dfe:	8f 33       	cpi	r24, 0x3F	; 63
     e00:	3c f4       	brge	.+14     	; 0xe10 <_ZL8nextNotev+0x94>
     e02:	81 32       	cpi	r24, 0x21	; 33
     e04:	09 f4       	brne	.+2      	; 0xe08 <_ZL8nextNotev+0x8c>
     e06:	87 c0       	rjmp	.+270    	; 0xf16 <_ZL8nextNotev+0x19a>
     e08:	8c 33       	cpi	r24, 0x3C	; 60
     e0a:	09 f0       	breq	.+2      	; 0xe0e <_ZL8nextNotev+0x92>
     e0c:	9b c0       	rjmp	.+310    	; 0xf44 <_ZL8nextNotev+0x1c8>
     e0e:	22 c0       	rjmp	.+68     	; 0xe54 <_ZL8nextNotev+0xd8>
     e10:	81 36       	cpi	r24, 0x61	; 97
     e12:	09 f0       	breq	.+2      	; 0xe16 <_ZL8nextNotev+0x9a>
     e14:	97 c0       	rjmp	.+302    	; 0xf44 <_ZL8nextNotev+0x1c8>
     e16:	9b c0       	rjmp	.+310    	; 0xf4e <_ZL8nextNotev+0x1d2>
     e18:	84 36       	cpi	r24, 0x64	; 100
     e1a:	01 f1       	breq	.+64     	; 0xe5c <_ZL8nextNotev+0xe0>
     e1c:	85 36       	cpi	r24, 0x65	; 101
     e1e:	0c f5       	brge	.+66     	; 0xe62 <_ZL8nextNotev+0xe6>
     e20:	1b c0       	rjmp	.+54     	; 0xe58 <_ZL8nextNotev+0xdc>
     e22:	8f 36       	cpi	r24, 0x6F	; 111
     e24:	09 f4       	brne	.+2      	; 0xe28 <_ZL8nextNotev+0xac>
     e26:	47 c0       	rjmp	.+142    	; 0xeb6 <_ZL8nextNotev+0x13a>
     e28:	80 37       	cpi	r24, 0x70	; 112
     e2a:	44 f4       	brge	.+16     	; 0xe3c <_ZL8nextNotev+0xc0>
     e2c:	8c 36       	cpi	r24, 0x6C	; 108
     e2e:	11 f1       	breq	.+68     	; 0xe74 <_ZL8nextNotev+0xf8>
     e30:	8d 36       	cpi	r24, 0x6D	; 109
     e32:	61 f1       	breq	.+88     	; 0xe8c <_ZL8nextNotev+0x110>
     e34:	87 36       	cpi	r24, 0x67	; 103
     e36:	09 f0       	breq	.+2      	; 0xe3a <_ZL8nextNotev+0xbe>
     e38:	85 c0       	rjmp	.+266    	; 0xf44 <_ZL8nextNotev+0x1c8>
     e3a:	19 c0       	rjmp	.+50     	; 0xe6e <_ZL8nextNotev+0xf2>
     e3c:	84 37       	cpi	r24, 0x74	; 116
     e3e:	09 f4       	brne	.+2      	; 0xe42 <_ZL8nextNotev+0xc6>
     e40:	44 c0       	rjmp	.+136    	; 0xeca <_ZL8nextNotev+0x14e>
     e42:	86 37       	cpi	r24, 0x76	; 118
     e44:	09 f4       	brne	.+2      	; 0xe48 <_ZL8nextNotev+0xcc>
     e46:	60 c0       	rjmp	.+192    	; 0xf08 <_ZL8nextNotev+0x18c>
     e48:	82 37       	cpi	r24, 0x72	; 114
     e4a:	09 f0       	breq	.+2      	; 0xe4e <_ZL8nextNotev+0xd2>
     e4c:	7b c0       	rjmp	.+246    	; 0xf44 <_ZL8nextNotev+0x1c8>
     e4e:	39 c0       	rjmp	.+114    	; 0xec2 <_ZL8nextNotev+0x146>
     e50:	b3 94       	inc	r11
     e52:	be cf       	rjmp	.-132    	; 0xdd0 <_ZL8nextNotev+0x54>
     e54:	ba 94       	dec	r11
     e56:	bc cf       	rjmp	.-136    	; 0xdd0 <_ZL8nextNotev+0x54>
     e58:	ee 24       	eor	r14, r14
     e5a:	35 c0       	rjmp	.+106    	; 0xec6 <_ZL8nextNotev+0x14a>
     e5c:	ee 24       	eor	r14, r14
     e5e:	82 e0       	ldi	r24, 0x02	; 2
     e60:	7b c0       	rjmp	.+246    	; 0xf58 <_ZL8nextNotev+0x1dc>
     e62:	ee 24       	eor	r14, r14
     e64:	84 e0       	ldi	r24, 0x04	; 4
     e66:	78 c0       	rjmp	.+240    	; 0xf58 <_ZL8nextNotev+0x1dc>
     e68:	ee 24       	eor	r14, r14
     e6a:	85 e0       	ldi	r24, 0x05	; 5
     e6c:	75 c0       	rjmp	.+234    	; 0xf58 <_ZL8nextNotev+0x1dc>
     e6e:	ee 24       	eor	r14, r14
     e70:	87 e0       	ldi	r24, 0x07	; 7
     e72:	72 c0       	rjmp	.+228    	; 0xf58 <_ZL8nextNotev+0x1dc>
     e74:	0e 94 64 05 	call	0xac8	; 0xac8 <_ZL9getNumberv>
     e78:	bc 01       	movw	r22, r24
     e7a:	90 93 05 01 	sts	0x0105, r25
     e7e:	80 93 04 01 	sts	0x0104, r24
     e82:	80 91 06 01 	lds	r24, 0x0106
     e86:	90 91 07 01 	lds	r25, 0x0107
     e8a:	37 c0       	rjmp	.+110    	; 0xefa <_ZL8nextNotev+0x17e>
     e8c:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     e90:	8c 36       	cpi	r24, 0x6C	; 108
     e92:	19 f4       	brne	.+6      	; 0xe9a <_ZL8nextNotev+0x11e>
     e94:	10 92 4d 01 	sts	0x014D, r1
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <_ZL8nextNotev+0x126>
     e9a:	a0 92 4d 01 	sts	0x014D, r10
     e9e:	10 92 4e 01 	sts	0x014E, r1
     ea2:	80 91 4b 01 	lds	r24, 0x014B
     ea6:	90 91 4c 01 	lds	r25, 0x014C
     eaa:	01 96       	adiw	r24, 0x01	; 1
     eac:	90 93 4c 01 	sts	0x014C, r25
     eb0:	80 93 4b 01 	sts	0x014B, r24
     eb4:	8d cf       	rjmp	.-230    	; 0xdd0 <_ZL8nextNotev+0x54>
     eb6:	0e 94 64 05 	call	0xac8	; 0xac8 <_ZL9getNumberv>
     eba:	b8 2e       	mov	r11, r24
     ebc:	80 93 03 01 	sts	0x0103, r24
     ec0:	87 cf       	rjmp	.-242    	; 0xdd0 <_ZL8nextNotev+0x54>
     ec2:	ee 24       	eor	r14, r14
     ec4:	e3 94       	inc	r14
     ec6:	80 e0       	ldi	r24, 0x00	; 0
     ec8:	47 c0       	rjmp	.+142    	; 0xf58 <_ZL8nextNotev+0x1dc>
     eca:	0e 94 64 05 	call	0xac8	; 0xac8 <_ZL9getNumberv>
     ece:	bc 01       	movw	r22, r24
     ed0:	ce 01       	movw	r24, r28
     ed2:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     ed6:	cb 01       	movw	r24, r22
     ed8:	88 0f       	add	r24, r24
     eda:	99 1f       	adc	r25, r25
     edc:	53 e0       	ldi	r21, 0x03	; 3
     ede:	66 0f       	add	r22, r22
     ee0:	77 1f       	adc	r23, r23
     ee2:	5a 95       	dec	r21
     ee4:	e1 f7       	brne	.-8      	; 0xede <_ZL8nextNotev+0x162>
     ee6:	86 0f       	add	r24, r22
     ee8:	97 1f       	adc	r25, r23
     eea:	90 93 07 01 	sts	0x0107, r25
     eee:	80 93 06 01 	sts	0x0106, r24
     ef2:	60 91 04 01 	lds	r22, 0x0104
     ef6:	70 91 05 01 	lds	r23, 0x0105
     efa:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     efe:	70 93 09 01 	sts	0x0109, r23
     f02:	60 93 08 01 	sts	0x0108, r22
     f06:	64 cf       	rjmp	.-312    	; 0xdd0 <_ZL8nextNotev+0x54>
     f08:	0e 94 64 05 	call	0xac8	; 0xac8 <_ZL9getNumberv>
     f0c:	90 93 0b 01 	sts	0x010B, r25
     f10:	80 93 0a 01 	sts	0x010A, r24
     f14:	5d cf       	rjmp	.-326    	; 0xdd0 <_ZL8nextNotev+0x54>
     f16:	70 92 03 01 	sts	0x0103, r7
     f1a:	10 93 07 01 	sts	0x0107, r17
     f1e:	00 93 06 01 	sts	0x0106, r16
     f22:	f0 92 05 01 	sts	0x0105, r15
     f26:	e0 92 04 01 	sts	0x0104, r14
     f2a:	d0 92 09 01 	sts	0x0109, r13
     f2e:	c0 92 08 01 	sts	0x0108, r12
     f32:	90 92 0b 01 	sts	0x010B, r9
     f36:	80 92 0a 01 	sts	0x010A, r8
     f3a:	10 92 4d 01 	sts	0x014D, r1
     f3e:	44 e0       	ldi	r20, 0x04	; 4
     f40:	b4 2e       	mov	r11, r20
     f42:	46 cf       	rjmp	.-372    	; 0xdd0 <_ZL8nextNotev+0x54>
     f44:	10 92 4c 01 	sts	0x014C, r1
     f48:	10 92 4b 01 	sts	0x014B, r1
     f4c:	63 c0       	rjmp	.+198    	; 0x1014 <_ZL8nextNotev+0x298>
     f4e:	ee 24       	eor	r14, r14
     f50:	89 e0       	ldi	r24, 0x09	; 9
     f52:	02 c0       	rjmp	.+4      	; 0xf58 <_ZL8nextNotev+0x1dc>
     f54:	ee 24       	eor	r14, r14
     f56:	8b e0       	ldi	r24, 0x0B	; 11
     f58:	9c e0       	ldi	r25, 0x0C	; 12
     f5a:	b9 9e       	mul	r11, r25
     f5c:	b0 2c       	mov	r11, r0
     f5e:	11 24       	eor	r1, r1
     f60:	b8 0e       	add	r11, r24
     f62:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     f66:	8b 32       	cpi	r24, 0x2B	; 43
     f68:	11 f0       	breq	.+4      	; 0xf6e <_ZL8nextNotev+0x1f2>
     f6a:	83 32       	cpi	r24, 0x23	; 35
     f6c:	b9 f4       	brne	.+46     	; 0xf9c <_ZL8nextNotev+0x220>
     f6e:	80 91 4b 01 	lds	r24, 0x014B
     f72:	90 91 4c 01 	lds	r25, 0x014C
     f76:	01 96       	adiw	r24, 0x01	; 1
     f78:	90 93 4c 01 	sts	0x014C, r25
     f7c:	80 93 4b 01 	sts	0x014B, r24
     f80:	b3 94       	inc	r11
     f82:	ef cf       	rjmp	.-34     	; 0xf62 <_ZL8nextNotev+0x1e6>
     f84:	80 91 4b 01 	lds	r24, 0x014B
     f88:	90 91 4c 01 	lds	r25, 0x014C
     f8c:	01 96       	adiw	r24, 0x01	; 1
     f8e:	90 93 4c 01 	sts	0x014C, r25
     f92:	80 93 4b 01 	sts	0x014B, r24
     f96:	ba 94       	dec	r11
     f98:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     f9c:	8d 32       	cpi	r24, 0x2D	; 45
     f9e:	91 f3       	breq	.-28     	; 0xf84 <_ZL8nextNotev+0x208>
     fa0:	c0 91 08 01 	lds	r28, 0x0108
     fa4:	d0 91 09 01 	lds	r29, 0x0109
     fa8:	81 53       	subi	r24, 0x31	; 49
     faa:	88 30       	cpi	r24, 0x08	; 8
     fac:	58 f4       	brcc	.+22     	; 0xfc4 <_ZL8nextNotev+0x248>
     fae:	c0 91 06 01 	lds	r28, 0x0106
     fb2:	d0 91 07 01 	lds	r29, 0x0107
     fb6:	0e 94 64 05 	call	0xac8	; 0xac8 <_ZL9getNumberv>
     fba:	bc 01       	movw	r22, r24
     fbc:	ce 01       	movw	r24, r28
     fbe:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
     fc2:	eb 01       	movw	r28, r22
     fc4:	8e 01       	movw	r16, r28
     fc6:	0b c0       	rjmp	.+22     	; 0xfde <_ZL8nextNotev+0x262>
     fc8:	80 91 4b 01 	lds	r24, 0x014B
     fcc:	90 91 4c 01 	lds	r25, 0x014C
     fd0:	01 96       	adiw	r24, 0x01	; 1
     fd2:	90 93 4c 01 	sts	0x014C, r25
     fd6:	80 93 4b 01 	sts	0x014B, r24
     fda:	c0 0f       	add	r28, r16
     fdc:	d1 1f       	adc	r29, r17
     fde:	16 95       	lsr	r17
     fe0:	07 95       	ror	r16
     fe2:	0e 94 42 05 	call	0xa84	; 0xa84 <_ZL16currentCharacterv>
     fe6:	8e 32       	cpi	r24, 0x2E	; 46
     fe8:	79 f3       	breq	.-34     	; 0xfc8 <_ZL8nextNotev+0x24c>
     fea:	80 91 4d 01 	lds	r24, 0x014D
     fee:	88 23       	and	r24, r24
     ff0:	39 f0       	breq	.+14     	; 0x1000 <_ZL8nextNotev+0x284>
     ff2:	ce 01       	movw	r24, r28
     ff4:	96 95       	lsr	r25
     ff6:	87 95       	ror	r24
     ff8:	80 93 4e 01 	sts	0x014E, r24
     ffc:	c8 1b       	sub	r28, r24
     ffe:	d1 09       	sbc	r29, r1
    1000:	ee 20       	and	r14, r14
    1002:	11 f0       	breq	.+4      	; 0x1008 <_ZL8nextNotev+0x28c>
    1004:	bb 24       	eor	r11, r11
    1006:	ba 94       	dec	r11
    1008:	8b 2d       	mov	r24, r11
    100a:	be 01       	movw	r22, r28
    100c:	40 91 0a 01 	lds	r20, 0x010A
    1010:	0e 94 68 06 	call	0xcd0	; 0xcd0 <_ZN15OrangutanBuzzer8playNoteEhjh>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	ed e0       	ldi	r30, 0x0D	; 13
    101a:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__epilogue_restores__+0xa>

0000101e <__vector_13>:
    101e:	1f 92       	push	r1
    1020:	0f 92       	push	r0
    1022:	0f b6       	in	r0, 0x3f	; 63
    1024:	0f 92       	push	r0
    1026:	11 24       	eor	r1, r1
    1028:	2f 93       	push	r18
    102a:	3f 93       	push	r19
    102c:	4f 93       	push	r20
    102e:	5f 93       	push	r21
    1030:	6f 93       	push	r22
    1032:	7f 93       	push	r23
    1034:	8f 93       	push	r24
    1036:	9f 93       	push	r25
    1038:	af 93       	push	r26
    103a:	bf 93       	push	r27
    103c:	ef 93       	push	r30
    103e:	ff 93       	push	r31
    1040:	80 91 51 01 	lds	r24, 0x0151
    1044:	90 91 52 01 	lds	r25, 0x0152
    1048:	9c 01       	movw	r18, r24
    104a:	21 50       	subi	r18, 0x01	; 1
    104c:	30 40       	sbci	r19, 0x00	; 0
    104e:	30 93 52 01 	sts	0x0152, r19
    1052:	20 93 51 01 	sts	0x0151, r18
    1056:	00 97       	sbiw	r24, 0x00	; 0
    1058:	11 f5       	brne	.+68     	; 0x109e <__vector_13+0x80>
    105a:	10 92 6f 00 	sts	0x006F, r1
    105e:	78 94       	sei
    1060:	80 91 81 00 	lds	r24, 0x0081
    1064:	88 7f       	andi	r24, 0xF8	; 248
    1066:	81 60       	ori	r24, 0x01	; 1
    1068:	80 93 81 00 	sts	0x0081, r24
    106c:	80 e1       	ldi	r24, 0x10	; 16
    106e:	97 e2       	ldi	r25, 0x27	; 39
    1070:	90 93 89 00 	sts	0x0089, r25
    1074:	80 93 88 00 	sts	0x0088, r24
    1078:	10 92 8b 00 	sts	0x008B, r1
    107c:	10 92 8a 00 	sts	0x008A, r1
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	80 93 02 01 	sts	0x0102, r24
    1086:	80 91 4b 01 	lds	r24, 0x014B
    108a:	90 91 4c 01 	lds	r25, 0x014C
    108e:	00 97       	sbiw	r24, 0x00	; 0
    1090:	31 f0       	breq	.+12     	; 0x109e <__vector_13+0x80>
    1092:	80 91 50 01 	lds	r24, 0x0150
    1096:	88 23       	and	r24, r24
    1098:	11 f4       	brne	.+4      	; 0x109e <__vector_13+0x80>
    109a:	0e 94 be 06 	call	0xd7c	; 0xd7c <_ZL8nextNotev>
    109e:	ff 91       	pop	r31
    10a0:	ef 91       	pop	r30
    10a2:	bf 91       	pop	r27
    10a4:	af 91       	pop	r26
    10a6:	9f 91       	pop	r25
    10a8:	8f 91       	pop	r24
    10aa:	7f 91       	pop	r23
    10ac:	6f 91       	pop	r22
    10ae:	5f 91       	pop	r21
    10b0:	4f 91       	pop	r20
    10b2:	3f 91       	pop	r19
    10b4:	2f 91       	pop	r18
    10b6:	0f 90       	pop	r0
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	0f 90       	pop	r0
    10bc:	1f 90       	pop	r1
    10be:	18 95       	reti

000010c0 <_ZN15OrangutanBuzzer9isPlayingEv>:
    10c0:	80 91 02 01 	lds	r24, 0x0102
    10c4:	88 23       	and	r24, r24
    10c6:	51 f0       	breq	.+20     	; 0x10dc <_ZN15OrangutanBuzzer9isPlayingEv+0x1c>
    10c8:	81 e0       	ldi	r24, 0x01	; 1
    10ca:	20 91 4b 01 	lds	r18, 0x014B
    10ce:	30 91 4c 01 	lds	r19, 0x014C
    10d2:	21 15       	cp	r18, r1
    10d4:	31 05       	cpc	r19, r1
    10d6:	19 f4       	brne	.+6      	; 0x10de <_ZN15OrangutanBuzzer9isPlayingEv+0x1e>
    10d8:	80 e0       	ldi	r24, 0x00	; 0
    10da:	08 95       	ret
    10dc:	81 e0       	ldi	r24, 0x01	; 1
    10de:	08 95       	ret

000010e0 <is_playing>:
    10e0:	0e 94 60 08 	call	0x10c0	; 0x10c0 <_ZN15OrangutanBuzzer9isPlayingEv>
    10e4:	08 95       	ret

000010e6 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    10e6:	10 92 6f 00 	sts	0x006F, r1
    10ea:	90 93 4c 01 	sts	0x014C, r25
    10ee:	80 93 4b 01 	sts	0x014B, r24
    10f2:	81 e0       	ldi	r24, 0x01	; 1
    10f4:	80 93 4f 01 	sts	0x014F, r24
    10f8:	10 92 4e 01 	sts	0x014E, r1
    10fc:	0e 94 be 06 	call	0xd7c	; 0xd7c <_ZL8nextNotev>
    1100:	08 95       	ret

00001102 <play_from_program_space>:
    1102:	0e 94 73 08 	call	0x10e6	; 0x10e6 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    1106:	08 95       	ret

00001108 <delayMicroseconds.clone.0>:
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	6f 93       	push	r22
    110e:	64 e0       	ldi	r22, 0x04	; 4
    1110:	6a 95       	dec	r22
    1112:	f1 f7       	brne	.-4      	; 0x1110 <delayMicroseconds.clone.0+0x8>
    1114:	6f 91       	pop	r22
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	c9 f7       	brne	.-14     	; 0x110c <delayMicroseconds.clone.0+0x4>
    111a:	08 95       	ret

0000111c <_ZN12OrangutanLCD8busyWaitEv>:
    111c:	0f 93       	push	r16
    111e:	1f 93       	push	r17
    1120:	cf 93       	push	r28
    1122:	df 93       	push	r29
    1124:	1a b1       	in	r17, 0x0a	; 10
    1126:	57 98       	cbi	0x0a, 7	; 10
    1128:	5a 98       	cbi	0x0b, 2	; 11
    112a:	28 9a       	sbi	0x05, 0	; 5
    112c:	c0 e0       	ldi	r28, 0x00	; 0
    112e:	d0 e0       	ldi	r29, 0x00	; 0
    1130:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    1134:	5c 9a       	sbi	0x0b, 4	; 11
    1136:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    113a:	09 b1       	in	r16, 0x09	; 9
    113c:	5c 98       	cbi	0x0b, 4	; 11
    113e:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    1142:	5c 9a       	sbi	0x0b, 4	; 11
    1144:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    1148:	5c 98       	cbi	0x0b, 4	; 11
    114a:	07 ff       	sbrs	r16, 7
    114c:	11 c0       	rjmp	.+34     	; 0x1170 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    114e:	24 96       	adiw	r28, 0x04	; 4
    1150:	9e 01       	movw	r18, r28
    1152:	40 e0       	ldi	r20, 0x00	; 0
    1154:	50 e0       	ldi	r21, 0x00	; 0
    1156:	80 91 57 01 	lds	r24, 0x0157
    115a:	90 91 58 01 	lds	r25, 0x0158
    115e:	a0 91 59 01 	lds	r26, 0x0159
    1162:	b0 91 5a 01 	lds	r27, 0x015A
    1166:	28 17       	cp	r18, r24
    1168:	39 07       	cpc	r19, r25
    116a:	4a 07       	cpc	r20, r26
    116c:	5b 07       	cpc	r21, r27
    116e:	00 f3       	brcs	.-64     	; 0x1130 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    1170:	1a b9       	out	0x0a, r17	; 10
    1172:	df 91       	pop	r29
    1174:	cf 91       	pop	r28
    1176:	1f 91       	pop	r17
    1178:	0f 91       	pop	r16
    117a:	08 95       	ret

0000117c <_ZN12OrangutanLCD8sendDataEh>:
    117c:	65 b1       	in	r22, 0x05	; 5
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	ac 01       	movw	r20, r24
    1182:	41 70       	andi	r20, 0x01	; 1
    1184:	50 70       	andi	r21, 0x00	; 0
    1186:	44 0f       	add	r20, r20
    1188:	55 1f       	adc	r21, r21
    118a:	9c 01       	movw	r18, r24
    118c:	26 70       	andi	r18, 0x06	; 6
    118e:	30 70       	andi	r19, 0x00	; 0
    1190:	53 e0       	ldi	r21, 0x03	; 3
    1192:	22 0f       	add	r18, r18
    1194:	33 1f       	adc	r19, r19
    1196:	5a 95       	dec	r21
    1198:	e1 f7       	brne	.-8      	; 0x1192 <_ZN12OrangutanLCD8sendDataEh+0x16>
    119a:	24 2b       	or	r18, r20
    119c:	6d 7c       	andi	r22, 0xCD	; 205
    119e:	26 2b       	or	r18, r22
    11a0:	25 b9       	out	0x05, r18	; 5
    11a2:	2b b1       	in	r18, 0x0b	; 11
    11a4:	88 70       	andi	r24, 0x08	; 8
    11a6:	90 70       	andi	r25, 0x00	; 0
    11a8:	34 e0       	ldi	r19, 0x04	; 4
    11aa:	88 0f       	add	r24, r24
    11ac:	99 1f       	adc	r25, r25
    11ae:	3a 95       	dec	r19
    11b0:	e1 f7       	brne	.-8      	; 0x11aa <_ZN12OrangutanLCD8sendDataEh+0x2e>
    11b2:	2f 77       	andi	r18, 0x7F	; 127
    11b4:	28 2b       	or	r18, r24
    11b6:	2b b9       	out	0x0b, r18	; 11
    11b8:	5c 9a       	sbi	0x0b, 4	; 11
    11ba:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    11be:	5c 98       	cbi	0x0b, 4	; 11
    11c0:	0e 94 84 08 	call	0x1108	; 0x1108 <delayMicroseconds.clone.0>
    11c4:	08 95       	ret

000011c6 <_ZN12OrangutanLCD4sendEhhh>:
    11c6:	a2 e0       	ldi	r26, 0x02	; 2
    11c8:	b0 e0       	ldi	r27, 0x00	; 0
    11ca:	e9 ee       	ldi	r30, 0xE9	; 233
    11cc:	f8 e0       	ldi	r31, 0x08	; 8
    11ce:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__prologue_saves__+0x16>
    11d2:	18 2f       	mov	r17, r24
    11d4:	4a 83       	std	Y+2, r20	; 0x02
    11d6:	69 83       	std	Y+1, r22	; 0x01
    11d8:	0e 94 8e 09 	call	0x131c	; 0x131c <_ZN12OrangutanLCD4initEv>
    11dc:	0e 94 8e 08 	call	0x111c	; 0x111c <_ZN12OrangutanLCD8busyWaitEv>
    11e0:	f4 b0       	in	r15, 0x04	; 4
    11e2:	05 b1       	in	r16, 0x05	; 5
    11e4:	da b0       	in	r13, 0x0a	; 10
    11e6:	eb b0       	in	r14, 0x0b	; 11
    11e8:	28 98       	cbi	0x05, 0	; 5
    11ea:	69 81       	ldd	r22, Y+1	; 0x01
    11ec:	4a 81       	ldd	r20, Y+2	; 0x02
    11ee:	66 23       	and	r22, r22
    11f0:	11 f0       	breq	.+4      	; 0x11f6 <_ZN12OrangutanLCD4sendEhhh+0x30>
    11f2:	5a 9a       	sbi	0x0b, 2	; 11
    11f4:	01 c0       	rjmp	.+2      	; 0x11f8 <_ZN12OrangutanLCD4sendEhhh+0x32>
    11f6:	5a 98       	cbi	0x0b, 2	; 11
    11f8:	84 b1       	in	r24, 0x04	; 4
    11fa:	82 63       	ori	r24, 0x32	; 50
    11fc:	84 b9       	out	0x04, r24	; 4
    11fe:	57 9a       	sbi	0x0a, 7	; 10
    1200:	41 30       	cpi	r20, 0x01	; 1
    1202:	29 f0       	breq	.+10     	; 0x120e <_ZN12OrangutanLCD4sendEhhh+0x48>
    1204:	81 2f       	mov	r24, r17
    1206:	82 95       	swap	r24
    1208:	8f 70       	andi	r24, 0x0F	; 15
    120a:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN12OrangutanLCD8sendDataEh>
    120e:	81 2f       	mov	r24, r17
    1210:	8f 70       	andi	r24, 0x0F	; 15
    1212:	0e 94 be 08 	call	0x117c	; 0x117c <_ZN12OrangutanLCD8sendDataEh>
    1216:	da b8       	out	0x0a, r13	; 10
    1218:	eb b8       	out	0x0b, r14	; 11
    121a:	f4 b8       	out	0x04, r15	; 4
    121c:	05 b9       	out	0x05, r16	; 5
    121e:	22 96       	adiw	r28, 0x02	; 2
    1220:	e7 e0       	ldi	r30, 0x07	; 7
    1222:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__epilogue_restores__+0x16>

00001226 <_ZN12OrangutanLCD8send_cmdEh>:
    1226:	60 e0       	ldi	r22, 0x00	; 0
    1228:	42 e0       	ldi	r20, 0x02	; 2
    122a:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <_ZN12OrangutanLCD4sendEhhh>
    122e:	08 95       	ret

00001230 <_ZN12OrangutanLCD9send_dataEh>:
    1230:	61 e0       	ldi	r22, 0x01	; 1
    1232:	42 e0       	ldi	r20, 0x02	; 2
    1234:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <_ZN12OrangutanLCD4sendEhhh>
    1238:	08 95       	ret

0000123a <_ZN12OrangutanLCD19loadCustomCharacterEPKch>:
    123a:	ef 92       	push	r14
    123c:	ff 92       	push	r15
    123e:	1f 93       	push	r17
    1240:	df 93       	push	r29
    1242:	cf 93       	push	r28
    1244:	0f 92       	push	r0
    1246:	cd b7       	in	r28, 0x3d	; 61
    1248:	de b7       	in	r29, 0x3e	; 62
    124a:	66 0f       	add	r22, r22
    124c:	66 0f       	add	r22, r22
    124e:	66 0f       	add	r22, r22
    1250:	48 2f       	mov	r20, r24
    1252:	59 2f       	mov	r21, r25
    1254:	7a 01       	movw	r14, r20
    1256:	10 e0       	ldi	r17, 0x00	; 0
    1258:	81 2f       	mov	r24, r17
    125a:	86 0f       	add	r24, r22
    125c:	80 64       	ori	r24, 0x40	; 64
    125e:	69 83       	std	Y+1, r22	; 0x01
    1260:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    1264:	f7 01       	movw	r30, r14
    1266:	84 91       	lpm	r24, Z
    1268:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    126c:	1f 5f       	subi	r17, 0xFF	; 255
    126e:	08 94       	sec
    1270:	e1 1c       	adc	r14, r1
    1272:	f1 1c       	adc	r15, r1
    1274:	69 81       	ldd	r22, Y+1	; 0x01
    1276:	18 30       	cpi	r17, 0x08	; 8
    1278:	79 f7       	brne	.-34     	; 0x1258 <_ZN12OrangutanLCD19loadCustomCharacterEPKch+0x1e>
    127a:	0f 90       	pop	r0
    127c:	cf 91       	pop	r28
    127e:	df 91       	pop	r29
    1280:	1f 91       	pop	r17
    1282:	ff 90       	pop	r15
    1284:	ef 90       	pop	r14
    1286:	08 95       	ret

00001288 <lcd_load_custom_character>:
    1288:	0e 94 1d 09 	call	0x123a	; 0x123a <_ZN12OrangutanLCD19loadCustomCharacterEPKch>
    128c:	08 95       	ret

0000128e <print_character>:
    128e:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    1292:	08 95       	ret

00001294 <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    1294:	60 e0       	ldi	r22, 0x00	; 0
    1296:	41 e0       	ldi	r20, 0x01	; 1
    1298:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <_ZN12OrangutanLCD4sendEhhh>
    129c:	08 95       	ret

0000129e <_ZN12OrangutanLCD5init2Ev>:
    129e:	80 e1       	ldi	r24, 0x10	; 16
    12a0:	97 e2       	ldi	r25, 0x27	; 39
    12a2:	a0 e0       	ldi	r26, 0x00	; 0
    12a4:	b0 e0       	ldi	r27, 0x00	; 0
    12a6:	80 93 57 01 	sts	0x0157, r24
    12aa:	90 93 58 01 	sts	0x0158, r25
    12ae:	a0 93 59 01 	sts	0x0159, r26
    12b2:	b0 93 5a 01 	sts	0x015A, r27
    12b6:	52 9a       	sbi	0x0a, 2	; 10
    12b8:	20 9a       	sbi	0x04, 0	; 4
    12ba:	54 9a       	sbi	0x0a, 4	; 10
    12bc:	8e e1       	ldi	r24, 0x1E	; 30
    12be:	90 e0       	ldi	r25, 0x00	; 0
    12c0:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    12c4:	83 e0       	ldi	r24, 0x03	; 3
    12c6:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12ca:	86 e0       	ldi	r24, 0x06	; 6
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    12d2:	83 e0       	ldi	r24, 0x03	; 3
    12d4:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12d8:	82 e0       	ldi	r24, 0x02	; 2
    12da:	90 e0       	ldi	r25, 0x00	; 0
    12dc:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    12e0:	83 e0       	ldi	r24, 0x03	; 3
    12e2:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12e6:	82 e0       	ldi	r24, 0x02	; 2
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    12ee:	82 e0       	ldi	r24, 0x02	; 2
    12f0:	0e 94 4a 09 	call	0x1294	; 0x1294 <_ZN12OrangutanLCD13send_4bit_cmdEh>
    12f4:	82 e0       	ldi	r24, 0x02	; 2
    12f6:	90 e0       	ldi	r25, 0x00	; 0
    12f8:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    12fc:	88 e2       	ldi	r24, 0x28	; 40
    12fe:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    1302:	88 e0       	ldi	r24, 0x08	; 8
    1304:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    1308:	81 e0       	ldi	r24, 0x01	; 1
    130a:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    130e:	86 e0       	ldi	r24, 0x06	; 6
    1310:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    1314:	8c e0       	ldi	r24, 0x0C	; 12
    1316:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    131a:	08 95       	ret

0000131c <_ZN12OrangutanLCD4initEv>:
    131c:	80 91 5b 01 	lds	r24, 0x015B
    1320:	88 23       	and	r24, r24
    1322:	29 f4       	brne	.+10     	; 0x132e <_ZN12OrangutanLCD4initEv+0x12>
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	80 93 5b 01 	sts	0x015B, r24
    132a:	0e 94 4f 09 	call	0x129e	; 0x129e <_ZN12OrangutanLCD5init2Ev>
    132e:	08 95       	ret

00001330 <_ZN12OrangutanLCD5clearEv>:
    1330:	81 e0       	ldi	r24, 0x01	; 1
    1332:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    1336:	80 91 53 01 	lds	r24, 0x0153
    133a:	90 91 54 01 	lds	r25, 0x0154
    133e:	00 97       	sbiw	r24, 0x00	; 0
    1340:	11 f1       	breq	.+68     	; 0x1386 <_ZN12OrangutanLCD5clearEv+0x56>
    1342:	a0 e0       	ldi	r26, 0x00	; 0
    1344:	b0 e2       	ldi	r27, 0x20	; 32
    1346:	08 c0       	rjmp	.+16     	; 0x1358 <_ZN12OrangutanLCD5clearEv+0x28>
    1348:	e0 91 53 01 	lds	r30, 0x0153
    134c:	f0 91 54 01 	lds	r31, 0x0154
    1350:	e2 0f       	add	r30, r18
    1352:	f3 1f       	adc	r31, r19
    1354:	b0 83       	st	Z, r27
    1356:	af 5f       	subi	r26, 0xFF	; 255
    1358:	2a 2f       	mov	r18, r26
    135a:	30 e0       	ldi	r19, 0x00	; 0
    135c:	80 91 24 01 	lds	r24, 0x0124
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	01 97       	sbiw	r24, 0x01	; 1
    1364:	60 91 25 01 	lds	r22, 0x0125
    1368:	70 e0       	ldi	r23, 0x00	; 0
    136a:	86 9f       	mul	r24, r22
    136c:	a0 01       	movw	r20, r0
    136e:	87 9f       	mul	r24, r23
    1370:	50 0d       	add	r21, r0
    1372:	96 9f       	mul	r25, r22
    1374:	50 0d       	add	r21, r0
    1376:	11 24       	eor	r1, r1
    1378:	24 17       	cp	r18, r20
    137a:	35 07       	cpc	r19, r21
    137c:	2c f3       	brlt	.-54     	; 0x1348 <_ZN12OrangutanLCD5clearEv+0x18>
    137e:	10 92 56 01 	sts	0x0156, r1
    1382:	10 92 55 01 	sts	0x0155, r1
    1386:	08 95       	ret

00001388 <clear>:
    1388:	0e 94 98 09 	call	0x1330	; 0x1330 <_ZN12OrangutanLCD5clearEv>
    138c:	08 95       	ret

0000138e <_ZN12OrangutanLCD5printEPKc>:
    138e:	ef 92       	push	r14
    1390:	ff 92       	push	r15
    1392:	cf 93       	push	r28
    1394:	df 93       	push	r29
    1396:	e8 2e       	mov	r14, r24
    1398:	e7 01       	movw	r28, r14
    139a:	7e 01       	movw	r14, r28
    139c:	f9 2e       	mov	r15, r25
    139e:	e7 01       	movw	r28, r14
    13a0:	02 c0       	rjmp	.+4      	; 0x13a6 <_ZN12OrangutanLCD5printEPKc+0x18>
    13a2:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    13a6:	89 91       	ld	r24, Y+
    13a8:	88 23       	and	r24, r24
    13aa:	d9 f7       	brne	.-10     	; 0x13a2 <_ZN12OrangutanLCD5printEPKc+0x14>
    13ac:	df 91       	pop	r29
    13ae:	cf 91       	pop	r28
    13b0:	ff 90       	pop	r15
    13b2:	ef 90       	pop	r14
    13b4:	08 95       	ret

000013b6 <print>:
    13b6:	0e 94 c7 09 	call	0x138e	; 0x138e <_ZN12OrangutanLCD5printEPKc>
    13ba:	08 95       	ret

000013bc <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>:
    13bc:	cf 93       	push	r28
    13be:	df 93       	push	r29
    13c0:	ec 01       	movw	r28, r24
    13c2:	03 c0       	rjmp	.+6      	; 0x13ca <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0xe>
    13c4:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    13c8:	21 96       	adiw	r28, 0x01	; 1
    13ca:	fe 01       	movw	r30, r28
    13cc:	84 91       	lpm	r24, Z
    13ce:	88 23       	and	r24, r24
    13d0:	c9 f7       	brne	.-14     	; 0x13c4 <_ZN12OrangutanLCD21printFromProgramSpaceEPKc+0x8>
    13d2:	df 91       	pop	r29
    13d4:	cf 91       	pop	r28
    13d6:	08 95       	ret

000013d8 <print_from_program_space>:
    13d8:	0e 94 de 09 	call	0x13bc	; 0x13bc <_ZN12OrangutanLCD21printFromProgramSpaceEPKc>
    13dc:	08 95       	ret

000013de <_ZN12OrangutanLCD5printEm>:
    13de:	aa e0       	ldi	r26, 0x0A	; 10
    13e0:	b0 e0       	ldi	r27, 0x00	; 0
    13e2:	e5 ef       	ldi	r30, 0xF5	; 245
    13e4:	f9 e0       	ldi	r31, 0x09	; 9
    13e6:	0c 94 52 12 	jmp	0x24a4	; 0x24a4 <__prologue_saves__+0x10>
    13ea:	9b 01       	movw	r18, r22
    13ec:	ac 01       	movw	r20, r24
    13ee:	1a e0       	ldi	r17, 0x0A	; 10
    13f0:	ea e0       	ldi	r30, 0x0A	; 10
    13f2:	ce 2e       	mov	r12, r30
    13f4:	d1 2c       	mov	r13, r1
    13f6:	e1 2c       	mov	r14, r1
    13f8:	f1 2c       	mov	r15, r1
    13fa:	5e 01       	movw	r10, r28
    13fc:	08 94       	sec
    13fe:	a1 1c       	adc	r10, r1
    1400:	b1 1c       	adc	r11, r1
    1402:	02 2f       	mov	r16, r18
    1404:	ca 01       	movw	r24, r20
    1406:	b9 01       	movw	r22, r18
    1408:	a7 01       	movw	r20, r14
    140a:	96 01       	movw	r18, r12
    140c:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
    1410:	11 50       	subi	r17, 0x01	; 1
    1412:	f5 01       	movw	r30, r10
    1414:	e1 0f       	add	r30, r17
    1416:	f1 1d       	adc	r31, r1
    1418:	00 5d       	subi	r16, 0xD0	; 208
    141a:	92 2f       	mov	r25, r18
    141c:	99 0f       	add	r25, r25
    141e:	89 2f       	mov	r24, r25
    1420:	88 0f       	add	r24, r24
    1422:	88 0f       	add	r24, r24
    1424:	89 0f       	add	r24, r25
    1426:	08 1b       	sub	r16, r24
    1428:	00 83       	st	Z, r16
    142a:	21 15       	cp	r18, r1
    142c:	31 05       	cpc	r19, r1
    142e:	41 05       	cpc	r20, r1
    1430:	51 05       	cpc	r21, r1
    1432:	39 f7       	brne	.-50     	; 0x1402 <_ZN12OrangutanLCD5printEm+0x24>
    1434:	08 c0       	rjmp	.+16     	; 0x1446 <_ZN12OrangutanLCD5printEm+0x68>
    1436:	f6 01       	movw	r30, r12
    1438:	e1 0f       	add	r30, r17
    143a:	f1 1d       	adc	r31, r1
    143c:	80 81       	ld	r24, Z
    143e:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    1442:	1f 5f       	subi	r17, 0xFF	; 255
    1444:	04 c0       	rjmp	.+8      	; 0x144e <_ZN12OrangutanLCD5printEm+0x70>
    1446:	6e 01       	movw	r12, r28
    1448:	08 94       	sec
    144a:	c1 1c       	adc	r12, r1
    144c:	d1 1c       	adc	r13, r1
    144e:	1a 30       	cpi	r17, 0x0A	; 10
    1450:	90 f3       	brcs	.-28     	; 0x1436 <_ZN12OrangutanLCD5printEm+0x58>
    1452:	2a 96       	adiw	r28, 0x0a	; 10
    1454:	ea e0       	ldi	r30, 0x0A	; 10
    1456:	0c 94 6e 12 	jmp	0x24dc	; 0x24dc <__epilogue_restores__+0x10>

0000145a <_ZN12OrangutanLCD5printEl>:
    145a:	ef 92       	push	r14
    145c:	ff 92       	push	r15
    145e:	0f 93       	push	r16
    1460:	1f 93       	push	r17
    1462:	7b 01       	movw	r14, r22
    1464:	8c 01       	movw	r16, r24
    1466:	97 ff       	sbrs	r25, 7
    1468:	0b c0       	rjmp	.+22     	; 0x1480 <_ZN12OrangutanLCD5printEl+0x26>
    146a:	10 95       	com	r17
    146c:	00 95       	com	r16
    146e:	f0 94       	com	r15
    1470:	e0 94       	com	r14
    1472:	e1 1c       	adc	r14, r1
    1474:	f1 1c       	adc	r15, r1
    1476:	01 1d       	adc	r16, r1
    1478:	11 1d       	adc	r17, r1
    147a:	8d e2       	ldi	r24, 0x2D	; 45
    147c:	0e 94 18 09 	call	0x1230	; 0x1230 <_ZN12OrangutanLCD9send_dataEh>
    1480:	c8 01       	movw	r24, r16
    1482:	b7 01       	movw	r22, r14
    1484:	0e 94 ef 09 	call	0x13de	; 0x13de <_ZN12OrangutanLCD5printEm>
    1488:	1f 91       	pop	r17
    148a:	0f 91       	pop	r16
    148c:	ff 90       	pop	r15
    148e:	ef 90       	pop	r14
    1490:	08 95       	ret

00001492 <print_long>:
    1492:	0e 94 2d 0a 	call	0x145a	; 0x145a <_ZN12OrangutanLCD5printEl>
    1496:	08 95       	ret

00001498 <_ZN12OrangutanLCD6gotoXYEhh>:
    1498:	a5 e0       	ldi	r26, 0x05	; 5
    149a:	b0 e0       	ldi	r27, 0x00	; 0
    149c:	e2 e5       	ldi	r30, 0x52	; 82
    149e:	fa e0       	ldi	r31, 0x0A	; 10
    14a0:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__prologue_saves__+0x1e>
    14a4:	18 2f       	mov	r17, r24
    14a6:	80 e8       	ldi	r24, 0x80	; 128
    14a8:	89 83       	std	Y+1, r24	; 0x01
    14aa:	80 ec       	ldi	r24, 0xC0	; 192
    14ac:	8a 83       	std	Y+2, r24	; 0x02
    14ae:	84 e9       	ldi	r24, 0x94	; 148
    14b0:	8b 83       	std	Y+3, r24	; 0x03
    14b2:	84 ed       	ldi	r24, 0xD4	; 212
    14b4:	8c 83       	std	Y+4, r24	; 0x04
    14b6:	fe 01       	movw	r30, r28
    14b8:	e6 0f       	add	r30, r22
    14ba:	f1 1d       	adc	r31, r1
    14bc:	81 81       	ldd	r24, Z+1	; 0x01
    14be:	81 0f       	add	r24, r17
    14c0:	6d 83       	std	Y+5, r22	; 0x05
    14c2:	0e 94 13 09 	call	0x1226	; 0x1226 <_ZN12OrangutanLCD8send_cmdEh>
    14c6:	10 93 56 01 	sts	0x0156, r17
    14ca:	6d 81       	ldd	r22, Y+5	; 0x05
    14cc:	60 93 55 01 	sts	0x0155, r22
    14d0:	25 96       	adiw	r28, 0x05	; 5
    14d2:	e3 e0       	ldi	r30, 0x03	; 3
    14d4:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__epilogue_restores__+0x1e>

000014d8 <lcd_goto_xy>:
    14d8:	0e 94 4c 0a 	call	0x1498	; 0x1498 <_ZN12OrangutanLCD6gotoXYEhh>
    14dc:	08 95       	ret

000014de <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    14de:	fc 01       	movw	r30, r24
    14e0:	11 82       	std	Z+1, r1	; 0x01
    14e2:	10 82       	st	Z, r1
    14e4:	13 82       	std	Z+3, r1	; 0x03
    14e6:	12 82       	std	Z+2, r1	; 0x02
    14e8:	15 82       	std	Z+5, r1	; 0x05
    14ea:	14 82       	std	Z+4, r1	; 0x04
    14ec:	16 82       	std	Z+6, r1	; 0x06
    14ee:	68 30       	cpi	r22, 0x08	; 8
    14f0:	68 f4       	brcc	.+26     	; 0x150c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    14f2:	89 e2       	ldi	r24, 0x29	; 41
    14f4:	90 e0       	ldi	r25, 0x00	; 0
    14f6:	91 83       	std	Z+1, r25	; 0x01
    14f8:	80 83       	st	Z, r24
    14fa:	8b e2       	ldi	r24, 0x2B	; 43
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	93 83       	std	Z+3, r25	; 0x03
    1500:	82 83       	std	Z+2, r24	; 0x02
    1502:	8a e2       	ldi	r24, 0x2A	; 42
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	95 83       	std	Z+5, r25	; 0x05
    1508:	84 83       	std	Z+4, r24	; 0x04
    150a:	11 c0       	rjmp	.+34     	; 0x152e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x50>
    150c:	6e 30       	cpi	r22, 0x0E	; 14
    150e:	c0 f4       	brcc	.+48     	; 0x1540 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x62>
    1510:	83 e2       	ldi	r24, 0x23	; 35
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	91 83       	std	Z+1, r25	; 0x01
    1516:	80 83       	st	Z, r24
    1518:	85 e2       	ldi	r24, 0x25	; 37
    151a:	90 e0       	ldi	r25, 0x00	; 0
    151c:	93 83       	std	Z+3, r25	; 0x03
    151e:	82 83       	std	Z+2, r24	; 0x02
    1520:	84 e2       	ldi	r24, 0x24	; 36
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	95 83       	std	Z+5, r25	; 0x05
    1526:	84 83       	std	Z+4, r24	; 0x04
    1528:	70 e0       	ldi	r23, 0x00	; 0
    152a:	68 50       	subi	r22, 0x08	; 8
    152c:	70 40       	sbci	r23, 0x00	; 0
    152e:	81 e0       	ldi	r24, 0x01	; 1
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	02 c0       	rjmp	.+4      	; 0x1538 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x5a>
    1534:	88 0f       	add	r24, r24
    1536:	99 1f       	adc	r25, r25
    1538:	6a 95       	dec	r22
    153a:	e2 f7       	brpl	.-8      	; 0x1534 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x56>
    153c:	86 83       	std	Z+6, r24	; 0x06
    153e:	08 95       	ret
    1540:	65 31       	cpi	r22, 0x15	; 21
    1542:	b8 f4       	brcc	.+46     	; 0x1572 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x94>
    1544:	86 e2       	ldi	r24, 0x26	; 38
    1546:	90 e0       	ldi	r25, 0x00	; 0
    1548:	91 83       	std	Z+1, r25	; 0x01
    154a:	80 83       	st	Z, r24
    154c:	88 e2       	ldi	r24, 0x28	; 40
    154e:	90 e0       	ldi	r25, 0x00	; 0
    1550:	93 83       	std	Z+3, r25	; 0x03
    1552:	82 83       	std	Z+2, r24	; 0x02
    1554:	87 e2       	ldi	r24, 0x27	; 39
    1556:	90 e0       	ldi	r25, 0x00	; 0
    1558:	95 83       	std	Z+5, r25	; 0x05
    155a:	84 83       	std	Z+4, r24	; 0x04
    155c:	70 e0       	ldi	r23, 0x00	; 0
    155e:	6e 50       	subi	r22, 0x0E	; 14
    1560:	70 40       	sbci	r23, 0x00	; 0
    1562:	81 e0       	ldi	r24, 0x01	; 1
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	02 c0       	rjmp	.+4      	; 0x156c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8e>
    1568:	88 0f       	add	r24, r24
    156a:	99 1f       	adc	r25, r25
    156c:	6a 95       	dec	r22
    156e:	e2 f7       	brpl	.-8      	; 0x1568 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x8a>
    1570:	86 83       	std	Z+6, r24	; 0x06
    1572:	08 95       	ret

00001574 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>:
    1574:	fc 01       	movw	r30, r24
    1576:	a4 81       	ldd	r26, Z+4	; 0x04
    1578:	b5 81       	ldd	r27, Z+5	; 0x05
    157a:	86 81       	ldd	r24, Z+6	; 0x06
    157c:	66 23       	and	r22, r22
    157e:	21 f0       	breq	.+8      	; 0x1588 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh+0x14>
    1580:	9c 91       	ld	r25, X
    1582:	98 2b       	or	r25, r24
    1584:	9c 93       	st	X, r25
    1586:	08 95       	ret
    1588:	9c 91       	ld	r25, X
    158a:	80 95       	com	r24
    158c:	89 23       	and	r24, r25
    158e:	8c 93       	st	X, r24
    1590:	08 95       	ret

00001592 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>:
    1592:	fc 01       	movw	r30, r24
    1594:	6f 3f       	cpi	r22, 0xFF	; 255
    1596:	31 f4       	brne	.+12     	; 0x15a4 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x12>
    1598:	a2 81       	ldd	r26, Z+2	; 0x02
    159a:	b3 81       	ldd	r27, Z+3	; 0x03
    159c:	8c 91       	ld	r24, X
    159e:	96 81       	ldd	r25, Z+6	; 0x06
    15a0:	89 27       	eor	r24, r25
    15a2:	0c c0       	rjmp	.+24     	; 0x15bc <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x2a>
    15a4:	a2 81       	ldd	r26, Z+2	; 0x02
    15a6:	b3 81       	ldd	r27, Z+3	; 0x03
    15a8:	86 81       	ldd	r24, Z+6	; 0x06
    15aa:	66 23       	and	r22, r22
    15ac:	21 f0       	breq	.+8      	; 0x15b6 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh+0x24>
    15ae:	9c 91       	ld	r25, X
    15b0:	98 2b       	or	r25, r24
    15b2:	9c 93       	st	X, r25
    15b4:	08 95       	ret
    15b6:	9c 91       	ld	r25, X
    15b8:	80 95       	com	r24
    15ba:	89 23       	and	r24, r25
    15bc:	8c 93       	st	X, r24
    15be:	08 95       	ret

000015c0 <_ZN16OrangutanDigital9setOutputEhh>:
    15c0:	a7 e0       	ldi	r26, 0x07	; 7
    15c2:	b0 e0       	ldi	r27, 0x00	; 0
    15c4:	e6 ee       	ldi	r30, 0xE6	; 230
    15c6:	fa e0       	ldi	r31, 0x0A	; 10
    15c8:	0c 94 57 12 	jmp	0x24ae	; 0x24ae <__prologue_saves__+0x1a>
    15cc:	28 2f       	mov	r18, r24
    15ce:	f6 2e       	mov	r15, r22
    15d0:	8e 01       	movw	r16, r28
    15d2:	0f 5f       	subi	r16, 0xFF	; 255
    15d4:	1f 4f       	sbci	r17, 0xFF	; 255
    15d6:	c8 01       	movw	r24, r16
    15d8:	62 2f       	mov	r22, r18
    15da:	0e 94 6f 0a 	call	0x14de	; 0x14de <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    15de:	c8 01       	movw	r24, r16
    15e0:	6f 2d       	mov	r22, r15
    15e2:	0e 94 c9 0a 	call	0x1592	; 0x1592 <_ZN16OrangutanDigital14setOutputValueEP8IOStructh>
    15e6:	c8 01       	movw	r24, r16
    15e8:	61 e0       	ldi	r22, 0x01	; 1
    15ea:	0e 94 ba 0a 	call	0x1574	; 0x1574 <_ZN16OrangutanDigital16setDataDirectionEP8IOStructh>
    15ee:	27 96       	adiw	r28, 0x07	; 7
    15f0:	e5 e0       	ldi	r30, 0x05	; 5
    15f2:	0c 94 73 12 	jmp	0x24e6	; 0x24e6 <__epilogue_restores__+0x1a>

000015f6 <_ZN15OrangutanMotors5init2Ev>:
    15f6:	e0 eb       	ldi	r30, 0xB0	; 176
    15f8:	f0 e0       	ldi	r31, 0x00	; 0
    15fa:	83 ef       	ldi	r24, 0xF3	; 243
    15fc:	80 83       	st	Z, r24
    15fe:	80 81       	ld	r24, Z
    1600:	84 bd       	out	0x24, r24	; 36
    1602:	e1 eb       	ldi	r30, 0xB1	; 177
    1604:	f0 e0       	ldi	r31, 0x00	; 0
    1606:	82 e0       	ldi	r24, 0x02	; 2
    1608:	80 83       	st	Z, r24
    160a:	80 81       	ld	r24, Z
    160c:	85 bd       	out	0x25, r24	; 37
    160e:	e4 eb       	ldi	r30, 0xB4	; 180
    1610:	f0 e0       	ldi	r31, 0x00	; 0
    1612:	10 82       	st	Z, r1
    1614:	80 81       	ld	r24, Z
    1616:	e3 eb       	ldi	r30, 0xB3	; 179
    1618:	f0 e0       	ldi	r31, 0x00	; 0
    161a:	80 83       	st	Z, r24
    161c:	80 81       	ld	r24, Z
    161e:	88 bd       	out	0x28, r24	; 40
    1620:	88 b5       	in	r24, 0x28	; 40
    1622:	87 bd       	out	0x27, r24	; 39
    1624:	86 e0       	ldi	r24, 0x06	; 6
    1626:	60 e0       	ldi	r22, 0x00	; 0
    1628:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <_ZN16OrangutanDigital9setOutputEhh>
    162c:	85 e0       	ldi	r24, 0x05	; 5
    162e:	60 e0       	ldi	r22, 0x00	; 0
    1630:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <_ZN16OrangutanDigital9setOutputEhh>
    1634:	8b e0       	ldi	r24, 0x0B	; 11
    1636:	60 e0       	ldi	r22, 0x00	; 0
    1638:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <_ZN16OrangutanDigital9setOutputEhh>
    163c:	83 e0       	ldi	r24, 0x03	; 3
    163e:	60 e0       	ldi	r22, 0x00	; 0
    1640:	0e 94 e0 0a 	call	0x15c0	; 0x15c0 <_ZN16OrangutanDigital9setOutputEhh>
    1644:	08 95       	ret

00001646 <_ZN15OrangutanMotors4initEv>:
    1646:	80 91 5c 01 	lds	r24, 0x015C
    164a:	88 23       	and	r24, r24
    164c:	29 f4       	brne	.+10     	; 0x1658 <_ZN15OrangutanMotors4initEv+0x12>
    164e:	81 e0       	ldi	r24, 0x01	; 1
    1650:	80 93 5c 01 	sts	0x015C, r24
    1654:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <_ZN15OrangutanMotors5init2Ev>
    1658:	08 95       	ret

0000165a <_ZN15OrangutanMotors10setM1SpeedEi>:
    165a:	cf 93       	push	r28
    165c:	df 93       	push	r29
    165e:	ec 01       	movw	r28, r24
    1660:	0e 94 23 0b 	call	0x1646	; 0x1646 <_ZN15OrangutanMotors4initEv>
    1664:	d7 ff       	sbrs	r29, 7
    1666:	05 c0       	rjmp	.+10     	; 0x1672 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    1668:	d0 95       	com	r29
    166a:	c1 95       	neg	r28
    166c:	df 4f       	sbci	r29, 0xFF	; 255
    166e:	81 e0       	ldi	r24, 0x01	; 1
    1670:	01 c0       	rjmp	.+2      	; 0x1674 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1672:	80 e0       	ldi	r24, 0x00	; 0
    1674:	cf 3f       	cpi	r28, 0xFF	; 255
    1676:	d1 05       	cpc	r29, r1
    1678:	19 f0       	breq	.+6      	; 0x1680 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    167a:	14 f0       	brlt	.+4      	; 0x1680 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    167c:	cf ef       	ldi	r28, 0xFF	; 255
    167e:	d0 e0       	ldi	r29, 0x00	; 0
    1680:	88 23       	and	r24, r24
    1682:	19 f0       	breq	.+6      	; 0x168a <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    1684:	18 bc       	out	0x28, r1	; 40
    1686:	c7 bd       	out	0x27, r28	; 39
    1688:	02 c0       	rjmp	.+4      	; 0x168e <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    168a:	c8 bd       	out	0x28, r28	; 40
    168c:	17 bc       	out	0x27, r1	; 39
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	08 95       	ret

00001694 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1694:	cf 93       	push	r28
    1696:	df 93       	push	r29
    1698:	ec 01       	movw	r28, r24
    169a:	0e 94 23 0b 	call	0x1646	; 0x1646 <_ZN15OrangutanMotors4initEv>
    169e:	d7 ff       	sbrs	r29, 7
    16a0:	05 c0       	rjmp	.+10     	; 0x16ac <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    16a2:	d0 95       	com	r29
    16a4:	c1 95       	neg	r28
    16a6:	df 4f       	sbci	r29, 0xFF	; 255
    16a8:	81 e0       	ldi	r24, 0x01	; 1
    16aa:	01 c0       	rjmp	.+2      	; 0x16ae <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    16ac:	80 e0       	ldi	r24, 0x00	; 0
    16ae:	cf 3f       	cpi	r28, 0xFF	; 255
    16b0:	d1 05       	cpc	r29, r1
    16b2:	19 f0       	breq	.+6      	; 0x16ba <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    16b4:	14 f0       	brlt	.+4      	; 0x16ba <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    16b6:	cf ef       	ldi	r28, 0xFF	; 255
    16b8:	d0 e0       	ldi	r29, 0x00	; 0
    16ba:	88 23       	and	r24, r24
    16bc:	29 f0       	breq	.+10     	; 0x16c8 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    16be:	10 92 b4 00 	sts	0x00B4, r1
    16c2:	c0 93 b3 00 	sts	0x00B3, r28
    16c6:	04 c0       	rjmp	.+8      	; 0x16d0 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    16c8:	c0 93 b4 00 	sts	0x00B4, r28
    16cc:	10 92 b3 00 	sts	0x00B3, r1
    16d0:	df 91       	pop	r29
    16d2:	cf 91       	pop	r28
    16d4:	08 95       	ret

000016d6 <_ZN15OrangutanMotors9setSpeedsEii>:
    16d6:	cf 93       	push	r28
    16d8:	df 93       	push	r29
    16da:	eb 01       	movw	r28, r22
    16dc:	0e 94 2d 0b 	call	0x165a	; 0x165a <_ZN15OrangutanMotors10setM1SpeedEi>
    16e0:	ce 01       	movw	r24, r28
    16e2:	0e 94 4a 0b 	call	0x1694	; 0x1694 <_ZN15OrangutanMotors10setM2SpeedEi>
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	08 95       	ret

000016ec <set_motors>:
    16ec:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <_ZN15OrangutanMotors9setSpeedsEii>
    16f0:	08 95       	ret

000016f2 <_ZN20OrangutanPushbuttons5init2Ev>:
    16f2:	84 b1       	in	r24, 0x04	; 4
    16f4:	8d 7c       	andi	r24, 0xCD	; 205
    16f6:	84 b9       	out	0x04, r24	; 4
    16f8:	85 b1       	in	r24, 0x05	; 5
    16fa:	82 63       	ori	r24, 0x32	; 50
    16fc:	85 b9       	out	0x05, r24	; 5
    16fe:	85 e0       	ldi	r24, 0x05	; 5
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	6f 93       	push	r22
    1704:	64 e0       	ldi	r22, 0x04	; 4
    1706:	6a 95       	dec	r22
    1708:	f1 f7       	brne	.-4      	; 0x1706 <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    170a:	6f 91       	pop	r22
    170c:	01 97       	sbiw	r24, 0x01	; 1
    170e:	c9 f7       	brne	.-14     	; 0x1702 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1710:	08 95       	ret

00001712 <_ZN20OrangutanPushbuttons4initEv>:
    1712:	80 91 5d 01 	lds	r24, 0x015D
    1716:	88 23       	and	r24, r24
    1718:	29 f4       	brne	.+10     	; 0x1724 <_ZN20OrangutanPushbuttons4initEv+0x12>
    171a:	81 e0       	ldi	r24, 0x01	; 1
    171c:	80 93 5d 01 	sts	0x015D, r24
    1720:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <_ZN20OrangutanPushbuttons5init2Ev>
    1724:	08 95       	ret

00001726 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1726:	1f 93       	push	r17
    1728:	18 2f       	mov	r17, r24
    172a:	0e 94 89 0b 	call	0x1712	; 0x1712 <_ZN20OrangutanPushbuttons4initEv>
    172e:	83 b1       	in	r24, 0x03	; 3
    1730:	81 23       	and	r24, r17
    1732:	e9 f3       	breq	.-6      	; 0x172e <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1734:	8a e0       	ldi	r24, 0x0A	; 10
    1736:	90 e0       	ldi	r25, 0x00	; 0
    1738:	0e 94 0c 0c 	call	0x1818	; 0x1818 <delay_ms>
    173c:	83 b1       	in	r24, 0x03	; 3
    173e:	81 23       	and	r24, r17
    1740:	b1 f3       	breq	.-20     	; 0x172e <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1742:	83 b1       	in	r24, 0x03	; 3
    1744:	81 23       	and	r24, r17
    1746:	1f 91       	pop	r17
    1748:	08 95       	ret

0000174a <wait_for_button_release>:
    174a:	0e 94 93 0b 	call	0x1726	; 0x1726 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    174e:	08 95       	ret

00001750 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1750:	a1 e0       	ldi	r26, 0x01	; 1
    1752:	b0 e0       	ldi	r27, 0x00	; 0
    1754:	ee ea       	ldi	r30, 0xAE	; 174
    1756:	fb e0       	ldi	r31, 0x0B	; 11
    1758:	0c 94 5a 12 	jmp	0x24b4	; 0x24b4 <__prologue_saves__+0x20>
    175c:	89 83       	std	Y+1, r24	; 0x01
    175e:	0e 94 89 0b 	call	0x1712	; 0x1712 <_ZN20OrangutanPushbuttons4initEv>
    1762:	93 b1       	in	r25, 0x03	; 3
    1764:	90 95       	com	r25
    1766:	89 81       	ldd	r24, Y+1	; 0x01
    1768:	89 23       	and	r24, r25
    176a:	21 96       	adiw	r28, 0x01	; 1
    176c:	e2 e0       	ldi	r30, 0x02	; 2
    176e:	0c 94 76 12 	jmp	0x24ec	; 0x24ec <__epilogue_restores__+0x20>

00001772 <button_is_pressed>:
    1772:	0e 94 a8 0b 	call	0x1750	; 0x1750 <_ZN20OrangutanPushbuttons9isPressedEh>
    1776:	08 95       	ret

00001778 <_ZN13OrangutanTime17delayMicrosecondsEj>:
    1778:	6f 93       	push	r22
    177a:	64 e0       	ldi	r22, 0x04	; 4
    177c:	6a 95       	dec	r22
    177e:	f1 f7       	brne	.-4      	; 0x177c <_ZN13OrangutanTime17delayMicrosecondsEj+0x4>
    1780:	6f 91       	pop	r22
    1782:	01 97       	sbiw	r24, 0x01	; 1
    1784:	c9 f7       	brne	.-14     	; 0x1778 <_ZN13OrangutanTime17delayMicrosecondsEj>
    1786:	08 95       	ret

00001788 <__vector_9>:
    1788:	2f 92       	push	r2
    178a:	8f 93       	push	r24
    178c:	9f 93       	push	r25
    178e:	2f b6       	in	r2, 0x3f	; 63
    1790:	80 91 6b 01 	lds	r24, 0x016B
    1794:	90 91 6c 01 	lds	r25, 0x016C
    1798:	01 96       	adiw	r24, 0x01	; 1
    179a:	80 93 6b 01 	sts	0x016B, r24
    179e:	90 93 6c 01 	sts	0x016C, r25
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	80 91 6d 01 	lds	r24, 0x016D
    17a8:	89 1f       	adc	r24, r25
    17aa:	80 93 6d 01 	sts	0x016D, r24
    17ae:	90 91 73 01 	lds	r25, 0x0173
    17b2:	9c 5f       	subi	r25, 0xFC	; 252
    17b4:	90 93 73 01 	sts	0x0173, r25
    17b8:	80 91 72 01 	lds	r24, 0x0172
    17bc:	80 51       	subi	r24, 0x10	; 16
    17be:	97 42       	sbci	r25, 0x27	; 39
    17c0:	c0 f0       	brcs	.+48     	; 0x17f2 <end>
    17c2:	90 93 73 01 	sts	0x0173, r25
    17c6:	80 93 72 01 	sts	0x0172, r24
    17ca:	80 91 6e 01 	lds	r24, 0x016E
    17ce:	90 91 6f 01 	lds	r25, 0x016F
    17d2:	01 96       	adiw	r24, 0x01	; 1
    17d4:	80 93 6e 01 	sts	0x016E, r24
    17d8:	90 93 6f 01 	sts	0x016F, r25
    17dc:	90 e0       	ldi	r25, 0x00	; 0
    17de:	80 91 70 01 	lds	r24, 0x0170
    17e2:	89 1f       	adc	r24, r25
    17e4:	80 93 70 01 	sts	0x0170, r24
    17e8:	80 91 71 01 	lds	r24, 0x0171
    17ec:	89 1f       	adc	r24, r25
    17ee:	80 93 71 01 	sts	0x0171, r24

000017f2 <end>:
    17f2:	2f be       	out	0x3f, r2	; 63
    17f4:	9f 91       	pop	r25
    17f6:	8f 91       	pop	r24
    17f8:	2f 90       	pop	r2
    17fa:	18 95       	reti

000017fc <_ZN13OrangutanTime17delayMillisecondsEj>:
    17fc:	cf 93       	push	r28
    17fe:	df 93       	push	r29
    1800:	ec 01       	movw	r28, r24
    1802:	05 c0       	rjmp	.+10     	; 0x180e <_ZN13OrangutanTime17delayMillisecondsEj+0x12>
    1804:	88 ee       	ldi	r24, 0xE8	; 232
    1806:	93 e0       	ldi	r25, 0x03	; 3
    1808:	0e 94 bc 0b 	call	0x1778	; 0x1778 <_ZN13OrangutanTime17delayMicrosecondsEj>
    180c:	21 97       	sbiw	r28, 0x01	; 1
    180e:	20 97       	sbiw	r28, 0x00	; 0
    1810:	c9 f7       	brne	.-14     	; 0x1804 <_ZN13OrangutanTime17delayMillisecondsEj+0x8>
    1812:	df 91       	pop	r29
    1814:	cf 91       	pop	r28
    1816:	08 95       	ret

00001818 <delay_ms>:
    1818:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <_ZN13OrangutanTime17delayMillisecondsEj>
    181c:	08 95       	ret

0000181e <_ZN13OrangutanTime5init2Ev>:
    181e:	e0 e7       	ldi	r30, 0x70	; 112
    1820:	f0 e0       	ldi	r31, 0x00	; 0
    1822:	80 81       	ld	r24, Z
    1824:	8e 7f       	andi	r24, 0xFE	; 254
    1826:	80 83       	st	Z, r24
    1828:	a0 eb       	ldi	r26, 0xB0	; 176
    182a:	b0 e0       	ldi	r27, 0x00	; 0
    182c:	8c 91       	ld	r24, X
    182e:	83 60       	ori	r24, 0x03	; 3
    1830:	8c 93       	st	X, r24
    1832:	a1 eb       	ldi	r26, 0xB1	; 177
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	8c 91       	ld	r24, X
    1838:	80 7f       	andi	r24, 0xF0	; 240
    183a:	8c 93       	st	X, r24
    183c:	8c 91       	ld	r24, X
    183e:	82 60       	ori	r24, 0x02	; 2
    1840:	8c 93       	st	X, r24
    1842:	b8 9a       	sbi	0x17, 0	; 23
    1844:	80 81       	ld	r24, Z
    1846:	81 60       	ori	r24, 0x01	; 1
    1848:	80 83       	st	Z, r24
    184a:	78 94       	sei
    184c:	08 95       	ret

0000184e <_ZN13OrangutanTime4initEv>:
    184e:	80 91 74 01 	lds	r24, 0x0174
    1852:	88 23       	and	r24, r24
    1854:	29 f4       	brne	.+10     	; 0x1860 <_ZN13OrangutanTime4initEv+0x12>
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	80 93 74 01 	sts	0x0174, r24
    185c:	0e 94 0f 0c 	call	0x181e	; 0x181e <_ZN13OrangutanTime5init2Ev>
    1860:	08 95       	ret

00001862 <_ZN13OrangutanTime5resetEv>:
    1862:	0e 94 27 0c 	call	0x184e	; 0x184e <_ZN13OrangutanTime4initEv>
    1866:	e0 e7       	ldi	r30, 0x70	; 112
    1868:	f0 e0       	ldi	r31, 0x00	; 0
    186a:	80 81       	ld	r24, Z
    186c:	8e 7f       	andi	r24, 0xFE	; 254
    186e:	80 83       	st	Z, r24
    1870:	10 92 6e 01 	sts	0x016E, r1
    1874:	10 92 6f 01 	sts	0x016F, r1
    1878:	10 92 70 01 	sts	0x0170, r1
    187c:	10 92 71 01 	sts	0x0171, r1
    1880:	10 92 73 01 	sts	0x0173, r1
    1884:	10 92 72 01 	sts	0x0172, r1
    1888:	80 81       	ld	r24, Z
    188a:	81 60       	ori	r24, 0x01	; 1
    188c:	80 83       	st	Z, r24
    188e:	08 95       	ret

00001890 <calibrate_line_sensors>:
    1890:	68 2f       	mov	r22, r24
    1892:	85 e7       	ldi	r24, 0x75	; 117
    1894:	91 e0       	ldi	r25, 0x01	; 1
    1896:	0e 94 78 11 	call	0x22f0	; 0x22f0 <_ZN16PololuQTRSensors9calibrateEh>
    189a:	08 95       	ret

0000189c <read_line>:
    189c:	9c 01       	movw	r18, r24
    189e:	46 2f       	mov	r20, r22
    18a0:	85 e7       	ldi	r24, 0x75	; 117
    18a2:	91 e0       	ldi	r25, 0x01	; 1
    18a4:	b9 01       	movw	r22, r18
    18a6:	20 e0       	ldi	r18, 0x00	; 0
    18a8:	0e 94 d6 0f 	call	0x1fac	; 0x1fac <_ZN16PololuQTRSensors8readLineEPjhh>
    18ac:	08 95       	ret

000018ae <_ZN9Pololu3pi4initEjh>:
    18ae:	0f 93       	push	r16
    18b0:	df 93       	push	r29
    18b2:	cf 93       	push	r28
    18b4:	00 d0       	rcall	.+0      	; 0x18b6 <_ZN9Pololu3pi4initEjh+0x8>
    18b6:	00 d0       	rcall	.+0      	; 0x18b8 <_ZN9Pololu3pi4initEjh+0xa>
    18b8:	0f 92       	push	r0
    18ba:	cd b7       	in	r28, 0x3d	; 61
    18bc:	de b7       	in	r29, 0x3e	; 62
    18be:	9c 01       	movw	r18, r24
    18c0:	96 2f       	mov	r25, r22
    18c2:	de 01       	movw	r26, r28
    18c4:	11 96       	adiw	r26, 0x01	; 1
    18c6:	e6 e2       	ldi	r30, 0x26	; 38
    18c8:	f1 e0       	ldi	r31, 0x01	; 1
    18ca:	85 e0       	ldi	r24, 0x05	; 5
    18cc:	01 90       	ld	r0, Z+
    18ce:	0d 92       	st	X+, r0
    18d0:	81 50       	subi	r24, 0x01	; 1
    18d2:	e1 f7       	brne	.-8      	; 0x18cc <_ZN9Pololu3pi4initEjh+0x1e>
    18d4:	be 01       	movw	r22, r28
    18d6:	6f 5f       	subi	r22, 0xFF	; 255
    18d8:	7f 4f       	sbci	r23, 0xFF	; 255
    18da:	99 23       	and	r25, r25
    18dc:	29 f0       	breq	.+10     	; 0x18e8 <_ZN9Pololu3pi4initEjh+0x3a>
    18de:	85 e7       	ldi	r24, 0x75	; 117
    18e0:	91 e0       	ldi	r25, 0x01	; 1
    18e2:	45 e0       	ldi	r20, 0x05	; 5
    18e4:	0f ef       	ldi	r16, 0xFF	; 255
    18e6:	04 c0       	rjmp	.+8      	; 0x18f0 <_ZN9Pololu3pi4initEjh+0x42>
    18e8:	85 e7       	ldi	r24, 0x75	; 117
    18ea:	91 e0       	ldi	r25, 0x01	; 1
    18ec:	45 e0       	ldi	r20, 0x05	; 5
    18ee:	03 e1       	ldi	r16, 0x13	; 19
    18f0:	0e 94 f1 0c 	call	0x19e2	; 0x19e2 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    18f4:	85 e7       	ldi	r24, 0x75	; 117
    18f6:	91 e0       	ldi	r25, 0x01	; 1
    18f8:	0e 94 c8 0c 	call	0x1990	; 0x1990 <_ZN16PololuQTRSensors11emittersOffEv>
    18fc:	0e 94 31 0c 	call	0x1862	; 0x1862 <_ZN13OrangutanTime5resetEv>
    1900:	0f 90       	pop	r0
    1902:	0f 90       	pop	r0
    1904:	0f 90       	pop	r0
    1906:	0f 90       	pop	r0
    1908:	0f 90       	pop	r0
    190a:	cf 91       	pop	r28
    190c:	df 91       	pop	r29
    190e:	0f 91       	pop	r16
    1910:	08 95       	ret

00001912 <pololu_3pi_init>:
    1912:	60 e0       	ldi	r22, 0x00	; 0
    1914:	0e 94 57 0c 	call	0x18ae	; 0x18ae <_ZN9Pololu3pi4initEjh>
    1918:	08 95       	ret

0000191a <_GLOBAL__I_pololu_3pi_init>:
    191a:	08 95       	ret

0000191c <_GLOBAL__D_pololu_3pi_init>:
    191c:	85 e7       	ldi	r24, 0x75	; 117
    191e:	91 e0       	ldi	r25, 0x01	; 1
    1920:	0e 94 9c 11 	call	0x2338	; 0x2338 <_ZN16PololuQTRSensorsD1Ev>
    1924:	08 95       	ret

00001926 <delayMicroseconds>:
    1926:	6f 93       	push	r22
    1928:	64 e0       	ldi	r22, 0x04	; 4
    192a:	6a 95       	dec	r22
    192c:	f1 f7       	brne	.-4      	; 0x192a <delayMicroseconds+0x4>
    192e:	6f 91       	pop	r22
    1930:	01 97       	sbiw	r24, 0x01	; 1
    1932:	c9 f7       	brne	.-14     	; 0x1926 <delayMicroseconds>
    1934:	08 95       	ret

00001936 <_ZN16PololuQTRSensors4initEhhh>:
    1936:	a7 e0       	ldi	r26, 0x07	; 7
    1938:	b0 e0       	ldi	r27, 0x00	; 0
    193a:	e1 ea       	ldi	r30, 0xA1	; 161
    193c:	fc e0       	ldi	r31, 0x0C	; 12
    193e:	0c 94 58 12 	jmp	0x24b0	; 0x24b0 <__prologue_saves__+0x1c>
    1942:	8c 01       	movw	r16, r24
    1944:	fc 01       	movw	r30, r24
    1946:	11 82       	std	Z+1, r1	; 0x01
    1948:	10 82       	st	Z, r1
    194a:	13 82       	std	Z+3, r1	; 0x03
    194c:	12 82       	std	Z+2, r1	; 0x02
    194e:	15 82       	std	Z+5, r1	; 0x05
    1950:	14 82       	std	Z+4, r1	; 0x04
    1952:	17 82       	std	Z+7, r1	; 0x07
    1954:	16 82       	std	Z+6, r1	; 0x06
    1956:	61 31       	cpi	r22, 0x11	; 17
    1958:	18 f0       	brcs	.+6      	; 0x1960 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    195a:	80 e1       	ldi	r24, 0x10	; 16
    195c:	80 87       	std	Z+8, r24	; 0x08
    195e:	02 c0       	rjmp	.+4      	; 0x1964 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1960:	fc 01       	movw	r30, r24
    1962:	60 87       	std	Z+8, r22	; 0x08
    1964:	f8 01       	movw	r30, r16
    1966:	20 8b       	std	Z+16, r18	; 0x10
    1968:	ce 01       	movw	r24, r28
    196a:	01 96       	adiw	r24, 0x01	; 1
    196c:	64 2f       	mov	r22, r20
    196e:	0e 94 6f 0a 	call	0x14de	; 0x14de <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1972:	8f 81       	ldd	r24, Y+7	; 0x07
    1974:	f8 01       	movw	r30, r16
    1976:	81 87       	std	Z+9, r24	; 0x09
    1978:	8b 81       	ldd	r24, Y+3	; 0x03
    197a:	9c 81       	ldd	r25, Y+4	; 0x04
    197c:	93 87       	std	Z+11, r25	; 0x0b
    197e:	82 87       	std	Z+10, r24	; 0x0a
    1980:	8d 81       	ldd	r24, Y+5	; 0x05
    1982:	9e 81       	ldd	r25, Y+6	; 0x06
    1984:	95 87       	std	Z+13, r25	; 0x0d
    1986:	84 87       	std	Z+12, r24	; 0x0c
    1988:	27 96       	adiw	r28, 0x07	; 7
    198a:	e4 e0       	ldi	r30, 0x04	; 4
    198c:	0c 94 74 12 	jmp	0x24e8	; 0x24e8 <__epilogue_restores__+0x1c>

00001990 <_ZN16PololuQTRSensors11emittersOffEv>:
    1990:	fc 01       	movw	r30, r24
    1992:	a4 85       	ldd	r26, Z+12	; 0x0c
    1994:	b5 85       	ldd	r27, Z+13	; 0x0d
    1996:	10 97       	sbiw	r26, 0x00	; 0
    1998:	79 f0       	breq	.+30     	; 0x19b8 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    199a:	8c 91       	ld	r24, X
    199c:	91 85       	ldd	r25, Z+9	; 0x09
    199e:	89 2b       	or	r24, r25
    19a0:	8c 93       	st	X, r24
    19a2:	a2 85       	ldd	r26, Z+10	; 0x0a
    19a4:	b3 85       	ldd	r27, Z+11	; 0x0b
    19a6:	9c 91       	ld	r25, X
    19a8:	81 85       	ldd	r24, Z+9	; 0x09
    19aa:	80 95       	com	r24
    19ac:	89 23       	and	r24, r25
    19ae:	8c 93       	st	X, r24
    19b0:	88 ec       	ldi	r24, 0xC8	; 200
    19b2:	90 e0       	ldi	r25, 0x00	; 0
    19b4:	0e 94 93 0c 	call	0x1926	; 0x1926 <delayMicroseconds>
    19b8:	08 95       	ret

000019ba <_ZN16PololuQTRSensors10emittersOnEv>:
    19ba:	fc 01       	movw	r30, r24
    19bc:	a4 85       	ldd	r26, Z+12	; 0x0c
    19be:	b5 85       	ldd	r27, Z+13	; 0x0d
    19c0:	10 97       	sbiw	r26, 0x00	; 0
    19c2:	71 f0       	breq	.+28     	; 0x19e0 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    19c4:	8c 91       	ld	r24, X
    19c6:	91 85       	ldd	r25, Z+9	; 0x09
    19c8:	89 2b       	or	r24, r25
    19ca:	8c 93       	st	X, r24
    19cc:	a2 85       	ldd	r26, Z+10	; 0x0a
    19ce:	b3 85       	ldd	r27, Z+11	; 0x0b
    19d0:	8c 91       	ld	r24, X
    19d2:	91 85       	ldd	r25, Z+9	; 0x09
    19d4:	89 2b       	or	r24, r25
    19d6:	8c 93       	st	X, r24
    19d8:	88 ec       	ldi	r24, 0xC8	; 200
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 94 93 0c 	call	0x1926	; 0x1926 <delayMicroseconds>
    19e0:	08 95       	ret

000019e2 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    19e2:	a7 e0       	ldi	r26, 0x07	; 7
    19e4:	b0 e0       	ldi	r27, 0x00	; 0
    19e6:	e7 ef       	ldi	r30, 0xF7	; 247
    19e8:	fc e0       	ldi	r31, 0x0C	; 12
    19ea:	0c 94 4a 12 	jmp	0x2494	; 0x2494 <__prologue_saves__>
    19ee:	7c 01       	movw	r14, r24
    19f0:	1b 01       	movw	r2, r22
    19f2:	64 2f       	mov	r22, r20
    19f4:	39 01       	movw	r6, r18
    19f6:	40 2f       	mov	r20, r16
    19f8:	20 e0       	ldi	r18, 0x00	; 0
    19fa:	0e 94 9b 0c 	call	0x1936	; 0x1936 <_ZN16PololuQTRSensors4initEhhh>
    19fe:	97 01       	movw	r18, r14
    1a00:	2f 5b       	subi	r18, 0xBF	; 191
    1a02:	3f 4f       	sbci	r19, 0xFF	; 255
    1a04:	f9 01       	movw	r30, r18
    1a06:	10 82       	st	Z, r1
    1a08:	d7 01       	movw	r26, r14
    1a0a:	ae 5b       	subi	r26, 0xBE	; 190
    1a0c:	bf 4f       	sbci	r27, 0xFF	; 255
    1a0e:	1c 92       	st	X, r1
    1a10:	c7 01       	movw	r24, r14
    1a12:	8d 5b       	subi	r24, 0xBD	; 189
    1a14:	9f 4f       	sbci	r25, 0xFF	; 255
    1a16:	fc 01       	movw	r30, r24
    1a18:	10 82       	st	Z, r1
    1a1a:	f7 01       	movw	r30, r14
    1a1c:	77 86       	std	Z+15, r7	; 0x0f
    1a1e:	66 86       	std	Z+14, r6	; 0x0e
    1a20:	66 24       	eor	r6, r6
    1a22:	2e 01       	movw	r4, r28
    1a24:	08 94       	sec
    1a26:	41 1c       	adc	r4, r1
    1a28:	51 1c       	adc	r5, r1
    1a2a:	6c 01       	movw	r12, r24
    1a2c:	5d 01       	movw	r10, r26
    1a2e:	49 01       	movw	r8, r18
    1a30:	29 c0       	rjmp	.+82     	; 0x1a84 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1a32:	06 2d       	mov	r16, r6
    1a34:	10 e0       	ldi	r17, 0x00	; 0
    1a36:	f1 01       	movw	r30, r2
    1a38:	e0 0f       	add	r30, r16
    1a3a:	f1 1f       	adc	r31, r17
    1a3c:	c2 01       	movw	r24, r4
    1a3e:	60 81       	ld	r22, Z
    1a40:	0e 94 6f 0a 	call	0x14de	; 0x14de <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1a44:	2f 81       	ldd	r18, Y+7	; 0x07
    1a46:	f7 01       	movw	r30, r14
    1a48:	e0 0f       	add	r30, r16
    1a4a:	f1 1f       	adc	r31, r17
    1a4c:	21 8b       	std	Z+17, r18	; 0x11
    1a4e:	89 81       	ldd	r24, Y+1	; 0x01
    1a50:	9a 81       	ldd	r25, Y+2	; 0x02
    1a52:	f8 01       	movw	r30, r16
    1a54:	ee 0f       	add	r30, r30
    1a56:	ff 1f       	adc	r31, r31
    1a58:	ee 0d       	add	r30, r14
    1a5a:	ff 1d       	adc	r31, r15
    1a5c:	92 a3       	std	Z+34, r25	; 0x22
    1a5e:	81 a3       	std	Z+33, r24	; 0x21
    1a60:	83 32       	cpi	r24, 0x23	; 35
    1a62:	91 05       	cpc	r25, r1
    1a64:	11 f4       	brne	.+4      	; 0x1a6a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1a66:	f4 01       	movw	r30, r8
    1a68:	09 c0       	rjmp	.+18     	; 0x1a7c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1a6a:	86 32       	cpi	r24, 0x26	; 38
    1a6c:	91 05       	cpc	r25, r1
    1a6e:	11 f4       	brne	.+4      	; 0x1a74 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1a70:	f5 01       	movw	r30, r10
    1a72:	04 c0       	rjmp	.+8      	; 0x1a7c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9a>
    1a74:	89 32       	cpi	r24, 0x29	; 41
    1a76:	91 05       	cpc	r25, r1
    1a78:	21 f4       	brne	.+8      	; 0x1a82 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa0>
    1a7a:	f6 01       	movw	r30, r12
    1a7c:	80 81       	ld	r24, Z
    1a7e:	82 2b       	or	r24, r18
    1a80:	80 83       	st	Z, r24
    1a82:	63 94       	inc	r6
    1a84:	f7 01       	movw	r30, r14
    1a86:	80 85       	ldd	r24, Z+8	; 0x08
    1a88:	68 16       	cp	r6, r24
    1a8a:	98 f2       	brcs	.-90     	; 0x1a32 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x50>
    1a8c:	27 96       	adiw	r28, 0x07	; 7
    1a8e:	e2 e1       	ldi	r30, 0x12	; 18
    1a90:	0c 94 66 12 	jmp	0x24cc	; 0x24cc <__epilogue_restores__>

00001a94 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1a94:	a0 e0       	ldi	r26, 0x00	; 0
    1a96:	b0 e0       	ldi	r27, 0x00	; 0
    1a98:	e0 e5       	ldi	r30, 0x50	; 80
    1a9a:	fd e0       	ldi	r31, 0x0D	; 13
    1a9c:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__prologue_saves__+0xa>
    1aa0:	ec 01       	movw	r28, r24
    1aa2:	5b 01       	movw	r10, r22
    1aa4:	fc 01       	movw	r30, r24
    1aa6:	ef 5b       	subi	r30, 0xBF	; 191
    1aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aaa:	90 80       	ld	r9, Z
    1aac:	fc 01       	movw	r30, r24
    1aae:	ee 5b       	subi	r30, 0xBE	; 190
    1ab0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ab2:	80 80       	ld	r8, Z
    1ab4:	fc 01       	movw	r30, r24
    1ab6:	ed 5b       	subi	r30, 0xBD	; 189
    1ab8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aba:	70 80       	ld	r7, Z
    1abc:	80 e0       	ldi	r24, 0x00	; 0
    1abe:	09 c0       	rjmp	.+18     	; 0x1ad2 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x3e>
    1ac0:	e8 2f       	mov	r30, r24
    1ac2:	f0 e0       	ldi	r31, 0x00	; 0
    1ac4:	ee 0f       	add	r30, r30
    1ac6:	ff 1f       	adc	r31, r31
    1ac8:	ea 0d       	add	r30, r10
    1aca:	fb 1d       	adc	r31, r11
    1acc:	11 82       	std	Z+1, r1	; 0x01
    1ace:	10 82       	st	Z, r1
    1ad0:	8f 5f       	subi	r24, 0xFF	; 255
    1ad2:	98 85       	ldd	r25, Y+8	; 0x08
    1ad4:	89 17       	cp	r24, r25
    1ad6:	a0 f3       	brcs	.-24     	; 0x1ac0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x2c>
    1ad8:	84 b1       	in	r24, 0x04	; 4
    1ada:	21 e4       	ldi	r18, 0x41	; 65
    1adc:	e2 2e       	mov	r14, r18
    1ade:	f1 2c       	mov	r15, r1
    1ae0:	ec 0e       	add	r14, r28
    1ae2:	fd 1e       	adc	r15, r29
    1ae4:	d7 01       	movw	r26, r14
    1ae6:	9c 91       	ld	r25, X
    1ae8:	89 2b       	or	r24, r25
    1aea:	84 b9       	out	0x04, r24	; 4
    1aec:	87 b1       	in	r24, 0x07	; 7
    1aee:	8e 01       	movw	r16, r28
    1af0:	0e 5b       	subi	r16, 0xBE	; 190
    1af2:	1f 4f       	sbci	r17, 0xFF	; 255
    1af4:	f8 01       	movw	r30, r16
    1af6:	90 81       	ld	r25, Z
    1af8:	89 2b       	or	r24, r25
    1afa:	87 b9       	out	0x07, r24	; 7
    1afc:	8a b1       	in	r24, 0x0a	; 10
    1afe:	93 e4       	ldi	r25, 0x43	; 67
    1b00:	c9 2e       	mov	r12, r25
    1b02:	d1 2c       	mov	r13, r1
    1b04:	cc 0e       	add	r12, r28
    1b06:	dd 1e       	adc	r13, r29
    1b08:	d6 01       	movw	r26, r12
    1b0a:	9c 91       	ld	r25, X
    1b0c:	89 2b       	or	r24, r25
    1b0e:	8a b9       	out	0x0a, r24	; 10
    1b10:	85 b1       	in	r24, 0x05	; 5
    1b12:	f7 01       	movw	r30, r14
    1b14:	90 81       	ld	r25, Z
    1b16:	89 2b       	or	r24, r25
    1b18:	85 b9       	out	0x05, r24	; 5
    1b1a:	88 b1       	in	r24, 0x08	; 8
    1b1c:	d8 01       	movw	r26, r16
    1b1e:	9c 91       	ld	r25, X
    1b20:	89 2b       	or	r24, r25
    1b22:	88 b9       	out	0x08, r24	; 8
    1b24:	8b b1       	in	r24, 0x0b	; 11
    1b26:	f6 01       	movw	r30, r12
    1b28:	90 81       	ld	r25, Z
    1b2a:	89 2b       	or	r24, r25
    1b2c:	8b b9       	out	0x0b, r24	; 11
    1b2e:	8a e0       	ldi	r24, 0x0A	; 10
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	0e 94 93 0c 	call	0x1926	; 0x1926 <delayMicroseconds>
    1b36:	94 b1       	in	r25, 0x04	; 4
    1b38:	d7 01       	movw	r26, r14
    1b3a:	8c 91       	ld	r24, X
    1b3c:	80 95       	com	r24
    1b3e:	89 23       	and	r24, r25
    1b40:	84 b9       	out	0x04, r24	; 4
    1b42:	97 b1       	in	r25, 0x07	; 7
    1b44:	f8 01       	movw	r30, r16
    1b46:	80 81       	ld	r24, Z
    1b48:	80 95       	com	r24
    1b4a:	89 23       	and	r24, r25
    1b4c:	87 b9       	out	0x07, r24	; 7
    1b4e:	9a b1       	in	r25, 0x0a	; 10
    1b50:	d6 01       	movw	r26, r12
    1b52:	8c 91       	ld	r24, X
    1b54:	80 95       	com	r24
    1b56:	89 23       	and	r24, r25
    1b58:	8a b9       	out	0x0a, r24	; 10
    1b5a:	95 b1       	in	r25, 0x05	; 5
    1b5c:	f7 01       	movw	r30, r14
    1b5e:	80 81       	ld	r24, Z
    1b60:	80 95       	com	r24
    1b62:	89 23       	and	r24, r25
    1b64:	85 b9       	out	0x05, r24	; 5
    1b66:	98 b1       	in	r25, 0x08	; 8
    1b68:	d8 01       	movw	r26, r16
    1b6a:	8c 91       	ld	r24, X
    1b6c:	80 95       	com	r24
    1b6e:	89 23       	and	r24, r25
    1b70:	88 b9       	out	0x08, r24	; 8
    1b72:	9b b1       	in	r25, 0x0b	; 11
    1b74:	f6 01       	movw	r30, r12
    1b76:	80 81       	ld	r24, Z
    1b78:	80 95       	com	r24
    1b7a:	89 23       	and	r24, r25
    1b7c:	8b b9       	out	0x0b, r24	; 11
    1b7e:	c0 90 b0 00 	lds	r12, 0x00B0
    1b82:	e0 90 b1 00 	lds	r14, 0x00B1
    1b86:	80 91 b0 00 	lds	r24, 0x00B0
    1b8a:	83 60       	ori	r24, 0x03	; 3
    1b8c:	80 93 b0 00 	sts	0x00B0, r24
    1b90:	82 e0       	ldi	r24, 0x02	; 2
    1b92:	80 93 b1 00 	sts	0x00B1, r24
    1b96:	00 91 b2 00 	lds	r16, 0x00B2
    1b9a:	80 e0       	ldi	r24, 0x00	; 0
    1b9c:	90 e0       	ldi	r25, 0x00	; 0
    1b9e:	39 c0       	rjmp	.+114    	; 0x1c12 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17e>
    1ba0:	20 91 b2 00 	lds	r18, 0x00B2
    1ba4:	20 1b       	sub	r18, r16
    1ba6:	82 0f       	add	r24, r18
    1ba8:	91 1d       	adc	r25, r1
    1baa:	02 0f       	add	r16, r18
    1bac:	f3 b0       	in	r15, 0x03	; 3
    1bae:	f9 14       	cp	r15, r9
    1bb0:	09 f0       	breq	.+2      	; 0x1bb4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x120>
    1bb2:	4d c0       	rjmp	.+154    	; 0x1c4e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1bb4:	96 b0       	in	r9, 0x06	; 6
    1bb6:	98 14       	cp	r9, r8
    1bb8:	09 f0       	breq	.+2      	; 0x1bbc <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x128>
    1bba:	49 c0       	rjmp	.+146    	; 0x1c4e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1bbc:	29 b1       	in	r18, 0x09	; 9
    1bbe:	27 15       	cp	r18, r7
    1bc0:	09 f0       	breq	.+2      	; 0x1bc4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x130>
    1bc2:	45 c0       	rjmp	.+138    	; 0x1c4e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1ba>
    1bc4:	24 c0       	rjmp	.+72     	; 0x1c0e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x17a>
    1bc6:	21 2f       	mov	r18, r17
    1bc8:	30 e0       	ldi	r19, 0x00	; 0
    1bca:	a9 01       	movw	r20, r18
    1bcc:	44 0f       	add	r20, r20
    1bce:	55 1f       	adc	r21, r21
    1bd0:	f5 01       	movw	r30, r10
    1bd2:	e4 0f       	add	r30, r20
    1bd4:	f5 1f       	adc	r31, r21
    1bd6:	60 81       	ld	r22, Z
    1bd8:	71 81       	ldd	r23, Z+1	; 0x01
    1bda:	61 15       	cp	r22, r1
    1bdc:	71 05       	cpc	r23, r1
    1bde:	99 f4       	brne	.+38     	; 0x1c06 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1be0:	4c 0f       	add	r20, r28
    1be2:	5d 1f       	adc	r21, r29
    1be4:	da 01       	movw	r26, r20
    1be6:	91 96       	adiw	r26, 0x21	; 33
    1be8:	4d 91       	ld	r20, X+
    1bea:	5c 91       	ld	r21, X
    1bec:	92 97       	sbiw	r26, 0x22	; 34
    1bee:	da 01       	movw	r26, r20
    1bf0:	4c 91       	ld	r20, X
    1bf2:	2c 0f       	add	r18, r28
    1bf4:	3d 1f       	adc	r19, r29
    1bf6:	d9 01       	movw	r26, r18
    1bf8:	51 96       	adiw	r26, 0x11	; 17
    1bfa:	2c 91       	ld	r18, X
    1bfc:	51 97       	sbiw	r26, 0x11	; 17
    1bfe:	42 23       	and	r20, r18
    1c00:	11 f4       	brne	.+4      	; 0x1c06 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x172>
    1c02:	91 83       	std	Z+1, r25	; 0x01
    1c04:	80 83       	st	Z, r24
    1c06:	1f 5f       	subi	r17, 0xFF	; 255
    1c08:	28 85       	ldd	r18, Y+8	; 0x08
    1c0a:	12 17       	cp	r17, r18
    1c0c:	e0 f2       	brcs	.-72     	; 0x1bc6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x132>
    1c0e:	89 2c       	mov	r8, r9
    1c10:	9f 2c       	mov	r9, r15
    1c12:	2e 85       	ldd	r18, Y+14	; 0x0e
    1c14:	3f 85       	ldd	r19, Y+15	; 0x0f
    1c16:	82 17       	cp	r24, r18
    1c18:	93 07       	cpc	r25, r19
    1c1a:	10 f2       	brcs	.-124    	; 0x1ba0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x10c>
    1c1c:	c0 92 b0 00 	sts	0x00B0, r12
    1c20:	e0 92 b1 00 	sts	0x00B1, r14
    1c24:	20 e0       	ldi	r18, 0x00	; 0
    1c26:	0f c0       	rjmp	.+30     	; 0x1c46 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b2>
    1c28:	e2 2f       	mov	r30, r18
    1c2a:	f0 e0       	ldi	r31, 0x00	; 0
    1c2c:	ee 0f       	add	r30, r30
    1c2e:	ff 1f       	adc	r31, r31
    1c30:	ea 0d       	add	r30, r10
    1c32:	fb 1d       	adc	r31, r11
    1c34:	80 81       	ld	r24, Z
    1c36:	91 81       	ldd	r25, Z+1	; 0x01
    1c38:	00 97       	sbiw	r24, 0x00	; 0
    1c3a:	21 f4       	brne	.+8      	; 0x1c44 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1b0>
    1c3c:	8e 85       	ldd	r24, Y+14	; 0x0e
    1c3e:	9f 85       	ldd	r25, Y+15	; 0x0f
    1c40:	91 83       	std	Z+1, r25	; 0x01
    1c42:	80 83       	st	Z, r24
    1c44:	2f 5f       	subi	r18, 0xFF	; 255
    1c46:	88 85       	ldd	r24, Y+8	; 0x08
    1c48:	28 17       	cp	r18, r24
    1c4a:	70 f3       	brcs	.-36     	; 0x1c28 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x194>
    1c4c:	05 c0       	rjmp	.+10     	; 0x1c58 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1c4>
    1c4e:	f3 b0       	in	r15, 0x03	; 3
    1c50:	96 b0       	in	r9, 0x06	; 6
    1c52:	79 b0       	in	r7, 0x09	; 9
    1c54:	10 e0       	ldi	r17, 0x00	; 0
    1c56:	d8 cf       	rjmp	.-80     	; 0x1c08 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    1c58:	cd b7       	in	r28, 0x3d	; 61
    1c5a:	de b7       	in	r29, 0x3e	; 62
    1c5c:	ed e0       	ldi	r30, 0x0D	; 13
    1c5e:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__epilogue_restores__+0xa>

00001c62 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    1c62:	ef 92       	push	r14
    1c64:	ff 92       	push	r15
    1c66:	0f 93       	push	r16
    1c68:	1f 93       	push	r17
    1c6a:	cf 93       	push	r28
    1c6c:	df 93       	push	r29
    1c6e:	fc 01       	movw	r30, r24
    1c70:	9b 01       	movw	r18, r22
    1c72:	00 91 7c 00 	lds	r16, 0x007C
    1c76:	10 91 7a 00 	lds	r17, 0x007A
    1c7a:	e7 b0       	in	r14, 0x07	; 7
    1c7c:	f8 b0       	in	r15, 0x08	; 8
    1c7e:	80 91 7a 00 	lds	r24, 0x007A
    1c82:	86 fd       	sbrc	r24, 6
    1c84:	fc cf       	rjmp	.-8      	; 0x1c7e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    1c86:	80 e0       	ldi	r24, 0x00	; 0
    1c88:	0a c0       	rjmp	.+20     	; 0x1c9e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3c>
    1c8a:	a8 2f       	mov	r26, r24
    1c8c:	b0 e0       	ldi	r27, 0x00	; 0
    1c8e:	aa 0f       	add	r26, r26
    1c90:	bb 1f       	adc	r27, r27
    1c92:	a2 0f       	add	r26, r18
    1c94:	b3 1f       	adc	r27, r19
    1c96:	11 96       	adiw	r26, 0x01	; 1
    1c98:	1c 92       	st	X, r1
    1c9a:	1e 92       	st	-X, r1
    1c9c:	8f 5f       	subi	r24, 0xFF	; 255
    1c9e:	90 85       	ldd	r25, Z+8	; 0x08
    1ca0:	89 17       	cp	r24, r25
    1ca2:	98 f3       	brcs	.-26     	; 0x1c8a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x28>
    1ca4:	97 b1       	in	r25, 0x07	; 7
    1ca6:	82 a1       	ldd	r24, Z+34	; 0x22
    1ca8:	80 95       	com	r24
    1caa:	89 23       	and	r24, r25
    1cac:	87 b9       	out	0x07, r24	; 7
    1cae:	98 b1       	in	r25, 0x08	; 8
    1cb0:	82 a1       	ldd	r24, Z+34	; 0x22
    1cb2:	80 95       	com	r24
    1cb4:	89 23       	and	r24, r25
    1cb6:	88 b9       	out	0x08, r24	; 8
    1cb8:	87 e8       	ldi	r24, 0x87	; 135
    1cba:	80 93 7a 00 	sts	0x007A, r24
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	29 c0       	rjmp	.+82     	; 0x1d14 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    1cc2:	df 01       	movw	r26, r30
    1cc4:	a6 0f       	add	r26, r22
    1cc6:	b1 1d       	adc	r27, r1
    1cc8:	51 96       	adiw	r26, 0x11	; 17
    1cca:	8c 91       	ld	r24, X
    1ccc:	51 97       	sbiw	r26, 0x11	; 17
    1cce:	80 64       	ori	r24, 0x40	; 64
    1cd0:	80 93 7c 00 	sts	0x007C, r24
    1cd4:	80 91 7a 00 	lds	r24, 0x007A
    1cd8:	80 64       	ori	r24, 0x40	; 64
    1cda:	80 93 7a 00 	sts	0x007A, r24
    1cde:	80 91 7a 00 	lds	r24, 0x007A
    1ce2:	86 fd       	sbrc	r24, 6
    1ce4:	fc cf       	rjmp	.-8      	; 0x1cde <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x7c>
    1ce6:	a6 2f       	mov	r26, r22
    1ce8:	b0 e0       	ldi	r27, 0x00	; 0
    1cea:	aa 0f       	add	r26, r26
    1cec:	bb 1f       	adc	r27, r27
    1cee:	a2 0f       	add	r26, r18
    1cf0:	b3 1f       	adc	r27, r19
    1cf2:	40 91 78 00 	lds	r20, 0x0078
    1cf6:	50 91 79 00 	lds	r21, 0x0079
    1cfa:	8d 91       	ld	r24, X+
    1cfc:	9c 91       	ld	r25, X
    1cfe:	11 97       	sbiw	r26, 0x01	; 1
    1d00:	84 0f       	add	r24, r20
    1d02:	95 1f       	adc	r25, r21
    1d04:	11 96       	adiw	r26, 0x01	; 1
    1d06:	9c 93       	st	X, r25
    1d08:	8e 93       	st	-X, r24
    1d0a:	6f 5f       	subi	r22, 0xFF	; 255
    1d0c:	80 85       	ldd	r24, Z+8	; 0x08
    1d0e:	68 17       	cp	r22, r24
    1d10:	c0 f2       	brcs	.-80     	; 0x1cc2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x60>
    1d12:	7f 5f       	subi	r23, 0xFF	; 255
    1d14:	81 a1       	ldd	r24, Z+33	; 0x21
    1d16:	78 17       	cp	r23, r24
    1d18:	10 f4       	brcc	.+4      	; 0x1d1e <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xbc>
    1d1a:	60 e0       	ldi	r22, 0x00	; 0
    1d1c:	f7 cf       	rjmp	.-18     	; 0x1d0c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xaa>
    1d1e:	40 e0       	ldi	r20, 0x00	; 0
    1d20:	14 c0       	rjmp	.+40     	; 0x1d4a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe8>
    1d22:	c4 2f       	mov	r28, r20
    1d24:	d0 e0       	ldi	r29, 0x00	; 0
    1d26:	cc 0f       	add	r28, r28
    1d28:	dd 1f       	adc	r29, r29
    1d2a:	c2 0f       	add	r28, r18
    1d2c:	d3 1f       	adc	r29, r19
    1d2e:	61 a1       	ldd	r22, Z+33	; 0x21
    1d30:	70 e0       	ldi	r23, 0x00	; 0
    1d32:	cb 01       	movw	r24, r22
    1d34:	95 95       	asr	r25
    1d36:	87 95       	ror	r24
    1d38:	a8 81       	ld	r26, Y
    1d3a:	b9 81       	ldd	r27, Y+1	; 0x01
    1d3c:	8a 0f       	add	r24, r26
    1d3e:	9b 1f       	adc	r25, r27
    1d40:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
    1d44:	79 83       	std	Y+1, r23	; 0x01
    1d46:	68 83       	st	Y, r22
    1d48:	4f 5f       	subi	r20, 0xFF	; 255
    1d4a:	80 85       	ldd	r24, Z+8	; 0x08
    1d4c:	48 17       	cp	r20, r24
    1d4e:	48 f3       	brcs	.-46     	; 0x1d22 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xc0>
    1d50:	00 93 7c 00 	sts	0x007C, r16
    1d54:	10 93 7a 00 	sts	0x007A, r17
    1d58:	f8 b8       	out	0x08, r15	; 8
    1d5a:	e7 b8       	out	0x07, r14	; 7
    1d5c:	cd b7       	in	r28, 0x3d	; 61
    1d5e:	de b7       	in	r29, 0x3e	; 62
    1d60:	e6 e0       	ldi	r30, 0x06	; 6
    1d62:	0c 94 72 12 	jmp	0x24e4	; 0x24e4 <__epilogue_restores__+0x18>

00001d66 <_ZN16PololuQTRSensors4readEPjh>:
    1d66:	a0 e2       	ldi	r26, 0x20	; 32
    1d68:	b0 e0       	ldi	r27, 0x00	; 0
    1d6a:	e9 eb       	ldi	r30, 0xB9	; 185
    1d6c:	fe e0       	ldi	r31, 0x0E	; 14
    1d6e:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__prologue_saves__+0x16>
    1d72:	8c 01       	movw	r16, r24
    1d74:	7b 01       	movw	r14, r22
    1d76:	d4 2e       	mov	r13, r20
    1d78:	84 2f       	mov	r24, r20
    1d7a:	81 50       	subi	r24, 0x01	; 1
    1d7c:	82 30       	cpi	r24, 0x02	; 2
    1d7e:	18 f4       	brcc	.+6      	; 0x1d86 <_ZN16PololuQTRSensors4readEPjh+0x20>
    1d80:	c8 01       	movw	r24, r16
    1d82:	0e 94 dd 0c 	call	0x19ba	; 0x19ba <_ZN16PololuQTRSensors10emittersOnEv>
    1d86:	d8 01       	movw	r26, r16
    1d88:	50 96       	adiw	r26, 0x10	; 16
    1d8a:	8c 91       	ld	r24, X
    1d8c:	50 97       	sbiw	r26, 0x10	; 16
    1d8e:	88 23       	and	r24, r24
    1d90:	89 f4       	brne	.+34     	; 0x1db4 <_ZN16PololuQTRSensors4readEPjh+0x4e>
    1d92:	c8 01       	movw	r24, r16
    1d94:	b7 01       	movw	r22, r14
    1d96:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1d9a:	c8 01       	movw	r24, r16
    1d9c:	0e 94 c8 0c 	call	0x1990	; 0x1990 <_ZN16PololuQTRSensors11emittersOffEv>
    1da0:	bd 2d       	mov	r27, r13
    1da2:	b2 30       	cpi	r27, 0x02	; 2
    1da4:	d9 f5       	brne	.+118    	; 0x1e1c <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1da6:	c8 01       	movw	r24, r16
    1da8:	be 01       	movw	r22, r28
    1daa:	6f 5f       	subi	r22, 0xFF	; 255
    1dac:	7f 4f       	sbci	r23, 0xFF	; 255
    1dae:	0e 94 4a 0d 	call	0x1a94	; 0x1a94 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    1db2:	10 c0       	rjmp	.+32     	; 0x1dd4 <_ZN16PololuQTRSensors4readEPjh+0x6e>
    1db4:	c8 01       	movw	r24, r16
    1db6:	b7 01       	movw	r22, r14
    1db8:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1dbc:	c8 01       	movw	r24, r16
    1dbe:	0e 94 c8 0c 	call	0x1990	; 0x1990 <_ZN16PololuQTRSensors11emittersOffEv>
    1dc2:	ed 2d       	mov	r30, r13
    1dc4:	e2 30       	cpi	r30, 0x02	; 2
    1dc6:	51 f5       	brne	.+84     	; 0x1e1c <_ZN16PololuQTRSensors4readEPjh+0xb6>
    1dc8:	c8 01       	movw	r24, r16
    1dca:	be 01       	movw	r22, r28
    1dcc:	6f 5f       	subi	r22, 0xFF	; 255
    1dce:	7f 4f       	sbci	r23, 0xFF	; 255
    1dd0:	0e 94 31 0e 	call	0x1c62	; 0x1c62 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    1dd4:	60 e0       	ldi	r22, 0x00	; 0
    1dd6:	ae 01       	movw	r20, r28
    1dd8:	4f 5f       	subi	r20, 0xFF	; 255
    1dda:	5f 4f       	sbci	r21, 0xFF	; 255
    1ddc:	1b c0       	rjmp	.+54     	; 0x1e14 <_ZN16PololuQTRSensors4readEPjh+0xae>
    1dde:	86 2f       	mov	r24, r22
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	88 0f       	add	r24, r24
    1de4:	99 1f       	adc	r25, r25
    1de6:	f7 01       	movw	r30, r14
    1de8:	e8 0f       	add	r30, r24
    1dea:	f9 1f       	adc	r31, r25
    1dec:	84 0f       	add	r24, r20
    1dee:	95 1f       	adc	r25, r21
    1df0:	d8 01       	movw	r26, r16
    1df2:	1e 96       	adiw	r26, 0x0e	; 14
    1df4:	2d 91       	ld	r18, X+
    1df6:	3c 91       	ld	r19, X
    1df8:	1f 97       	sbiw	r26, 0x0f	; 15
    1dfa:	dc 01       	movw	r26, r24
    1dfc:	8d 91       	ld	r24, X+
    1dfe:	9c 91       	ld	r25, X
    1e00:	11 97       	sbiw	r26, 0x01	; 1
    1e02:	28 1b       	sub	r18, r24
    1e04:	39 0b       	sbc	r19, r25
    1e06:	80 81       	ld	r24, Z
    1e08:	91 81       	ldd	r25, Z+1	; 0x01
    1e0a:	82 0f       	add	r24, r18
    1e0c:	93 1f       	adc	r25, r19
    1e0e:	91 83       	std	Z+1, r25	; 0x01
    1e10:	80 83       	st	Z, r24
    1e12:	6f 5f       	subi	r22, 0xFF	; 255
    1e14:	f8 01       	movw	r30, r16
    1e16:	80 85       	ldd	r24, Z+8	; 0x08
    1e18:	68 17       	cp	r22, r24
    1e1a:	08 f3       	brcs	.-62     	; 0x1dde <_ZN16PololuQTRSensors4readEPjh+0x78>
    1e1c:	a0 96       	adiw	r28, 0x20	; 32
    1e1e:	e7 e0       	ldi	r30, 0x07	; 7
    1e20:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__epilogue_restores__+0x16>

00001e24 <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    1e24:	8f 92       	push	r8
    1e26:	9f 92       	push	r9
    1e28:	af 92       	push	r10
    1e2a:	bf 92       	push	r11
    1e2c:	cf 92       	push	r12
    1e2e:	df 92       	push	r13
    1e30:	ff 92       	push	r15
    1e32:	0f 93       	push	r16
    1e34:	1f 93       	push	r17
    1e36:	cf 93       	push	r28
    1e38:	df 93       	push	r29
    1e3a:	ec 01       	movw	r28, r24
    1e3c:	c6 2e       	mov	r12, r22
    1e3e:	07 2f       	mov	r16, r23
    1e40:	f4 2e       	mov	r15, r20
    1e42:	42 30       	cpi	r20, 0x02	; 2
    1e44:	11 f0       	breq	.+4      	; 0x1e4a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x26>
    1e46:	ff 20       	and	r15, r15
    1e48:	51 f4       	brne	.+20     	; 0x1e5e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1e4a:	8c 81       	ldd	r24, Y+4	; 0x04
    1e4c:	9d 81       	ldd	r25, Y+5	; 0x05
    1e4e:	00 97       	sbiw	r24, 0x00	; 0
    1e50:	09 f4       	brne	.+2      	; 0x1e54 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x30>
    1e52:	a0 c0       	rjmp	.+320    	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e54:	8e 81       	ldd	r24, Y+6	; 0x06
    1e56:	9f 81       	ldd	r25, Y+7	; 0x07
    1e58:	00 97       	sbiw	r24, 0x00	; 0
    1e5a:	09 f4       	brne	.+2      	; 0x1e5e <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3a>
    1e5c:	9b c0       	rjmp	.+310    	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e5e:	8f 2d       	mov	r24, r15
    1e60:	81 50       	subi	r24, 0x01	; 1
    1e62:	82 30       	cpi	r24, 0x02	; 2
    1e64:	50 f4       	brcc	.+20     	; 0x1e7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1e66:	88 81       	ld	r24, Y
    1e68:	99 81       	ldd	r25, Y+1	; 0x01
    1e6a:	00 97       	sbiw	r24, 0x00	; 0
    1e6c:	09 f4       	brne	.+2      	; 0x1e70 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x4c>
    1e6e:	92 c0       	rjmp	.+292    	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e70:	8a 81       	ldd	r24, Y+2	; 0x02
    1e72:	9b 81       	ldd	r25, Y+3	; 0x03
    1e74:	00 97       	sbiw	r24, 0x00	; 0
    1e76:	09 f4       	brne	.+2      	; 0x1e7a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x56>
    1e78:	8d c0       	rjmp	.+282    	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1e7a:	ce 01       	movw	r24, r28
    1e7c:	6c 2d       	mov	r22, r12
    1e7e:	70 2f       	mov	r23, r16
    1e80:	4f 2d       	mov	r20, r15
    1e82:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <_ZN16PololuQTRSensors4readEPjh>
    1e86:	ac 2c       	mov	r10, r12
    1e88:	b0 2e       	mov	r11, r16
    1e8a:	00 e0       	ldi	r16, 0x00	; 0
    1e8c:	10 e0       	ldi	r17, 0x00	; 0
    1e8e:	88 24       	eor	r8, r8
    1e90:	99 24       	eor	r9, r9
    1e92:	7a c0       	rjmp	.+244    	; 0x1f88 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x164>
    1e94:	8f 2d       	mov	r24, r15
    1e96:	81 30       	cpi	r24, 0x01	; 1
    1e98:	59 f4       	brne	.+22     	; 0x1eb0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x8c>
    1e9a:	ea 81       	ldd	r30, Y+2	; 0x02
    1e9c:	fb 81       	ldd	r31, Y+3	; 0x03
    1e9e:	e0 0f       	add	r30, r16
    1ea0:	f1 1f       	adc	r31, r17
    1ea2:	c0 80       	ld	r12, Z
    1ea4:	d1 80       	ldd	r13, Z+1	; 0x01
    1ea6:	e8 81       	ld	r30, Y
    1ea8:	f9 81       	ldd	r31, Y+1	; 0x01
    1eaa:	e0 0f       	add	r30, r16
    1eac:	f1 1f       	adc	r31, r17
    1eae:	0d c0       	rjmp	.+26     	; 0x1eca <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    1eb0:	8c 81       	ldd	r24, Y+4	; 0x04
    1eb2:	9d 81       	ldd	r25, Y+5	; 0x05
    1eb4:	ff 20       	and	r15, r15
    1eb6:	61 f4       	brne	.+24     	; 0x1ed0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xac>
    1eb8:	ee 81       	ldd	r30, Y+6	; 0x06
    1eba:	ff 81       	ldd	r31, Y+7	; 0x07
    1ebc:	e0 0f       	add	r30, r16
    1ebe:	f1 1f       	adc	r31, r17
    1ec0:	c0 80       	ld	r12, Z
    1ec2:	d1 80       	ldd	r13, Z+1	; 0x01
    1ec4:	80 0f       	add	r24, r16
    1ec6:	91 1f       	adc	r25, r17
    1ec8:	fc 01       	movw	r30, r24
    1eca:	40 81       	ld	r20, Z
    1ecc:	51 81       	ldd	r21, Z+1	; 0x01
    1ece:	2b c0       	rjmp	.+86     	; 0x1f26 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1ed0:	80 0f       	add	r24, r16
    1ed2:	91 1f       	adc	r25, r17
    1ed4:	fc 01       	movw	r30, r24
    1ed6:	80 81       	ld	r24, Z
    1ed8:	91 81       	ldd	r25, Z+1	; 0x01
    1eda:	e8 81       	ld	r30, Y
    1edc:	f9 81       	ldd	r31, Y+1	; 0x01
    1ede:	e0 0f       	add	r30, r16
    1ee0:	f1 1f       	adc	r31, r17
    1ee2:	40 81       	ld	r20, Z
    1ee4:	51 81       	ldd	r21, Z+1	; 0x01
    1ee6:	ce 84       	ldd	r12, Y+14	; 0x0e
    1ee8:	df 84       	ldd	r13, Y+15	; 0x0f
    1eea:	84 17       	cp	r24, r20
    1eec:	95 07       	cpc	r25, r21
    1eee:	10 f4       	brcc	.+4      	; 0x1ef4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd0>
    1ef0:	a6 01       	movw	r20, r12
    1ef2:	04 c0       	rjmp	.+8      	; 0x1efc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd8>
    1ef4:	4c 0d       	add	r20, r12
    1ef6:	5d 1d       	adc	r21, r13
    1ef8:	48 1b       	sub	r20, r24
    1efa:	59 0b       	sbc	r21, r25
    1efc:	ee 81       	ldd	r30, Y+6	; 0x06
    1efe:	ff 81       	ldd	r31, Y+7	; 0x07
    1f00:	e0 0f       	add	r30, r16
    1f02:	f1 1f       	adc	r31, r17
    1f04:	80 81       	ld	r24, Z
    1f06:	91 81       	ldd	r25, Z+1	; 0x01
    1f08:	ea 81       	ldd	r30, Y+2	; 0x02
    1f0a:	fb 81       	ldd	r31, Y+3	; 0x03
    1f0c:	e0 0f       	add	r30, r16
    1f0e:	f1 1f       	adc	r31, r17
    1f10:	20 81       	ld	r18, Z
    1f12:	31 81       	ldd	r19, Z+1	; 0x01
    1f14:	ce 84       	ldd	r12, Y+14	; 0x0e
    1f16:	df 84       	ldd	r13, Y+15	; 0x0f
    1f18:	82 17       	cp	r24, r18
    1f1a:	93 07       	cpc	r25, r19
    1f1c:	20 f0       	brcs	.+8      	; 0x1f26 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x102>
    1f1e:	c2 0e       	add	r12, r18
    1f20:	d3 1e       	adc	r13, r19
    1f22:	c8 1a       	sub	r12, r24
    1f24:	d9 0a       	sbc	r13, r25
    1f26:	c4 1a       	sub	r12, r20
    1f28:	d5 0a       	sbc	r13, r21
    1f2a:	d1 f0       	breq	.+52     	; 0x1f60 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    1f2c:	f5 01       	movw	r30, r10
    1f2e:	60 81       	ld	r22, Z
    1f30:	71 81       	ldd	r23, Z+1	; 0x01
    1f32:	80 e0       	ldi	r24, 0x00	; 0
    1f34:	90 e0       	ldi	r25, 0x00	; 0
    1f36:	9a 01       	movw	r18, r20
    1f38:	40 e0       	ldi	r20, 0x00	; 0
    1f3a:	50 e0       	ldi	r21, 0x00	; 0
    1f3c:	62 1b       	sub	r22, r18
    1f3e:	73 0b       	sbc	r23, r19
    1f40:	84 0b       	sbc	r24, r20
    1f42:	95 0b       	sbc	r25, r21
    1f44:	28 ee       	ldi	r18, 0xE8	; 232
    1f46:	33 e0       	ldi	r19, 0x03	; 3
    1f48:	40 e0       	ldi	r20, 0x00	; 0
    1f4a:	50 e0       	ldi	r21, 0x00	; 0
    1f4c:	0e 94 ba 11 	call	0x2374	; 0x2374 <__mulsi3>
    1f50:	96 01       	movw	r18, r12
    1f52:	40 e0       	ldi	r20, 0x00	; 0
    1f54:	50 e0       	ldi	r21, 0x00	; 0
    1f56:	0e 94 20 12 	call	0x2440	; 0x2440 <__divmodsi4>
    1f5a:	37 fd       	sbrc	r19, 7
    1f5c:	0a c0       	rjmp	.+20     	; 0x1f72 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x14e>
    1f5e:	02 c0       	rjmp	.+4      	; 0x1f64 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x140>
    1f60:	20 e0       	ldi	r18, 0x00	; 0
    1f62:	30 e0       	ldi	r19, 0x00	; 0
    1f64:	f3 e0       	ldi	r31, 0x03	; 3
    1f66:	29 3e       	cpi	r18, 0xE9	; 233
    1f68:	3f 07       	cpc	r19, r31
    1f6a:	2c f0       	brlt	.+10     	; 0x1f76 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1f6c:	28 ee       	ldi	r18, 0xE8	; 232
    1f6e:	33 e0       	ldi	r19, 0x03	; 3
    1f70:	02 c0       	rjmp	.+4      	; 0x1f76 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x152>
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	30 e0       	ldi	r19, 0x00	; 0
    1f76:	f5 01       	movw	r30, r10
    1f78:	21 93       	st	Z+, r18
    1f7a:	31 93       	st	Z+, r19
    1f7c:	5f 01       	movw	r10, r30
    1f7e:	08 94       	sec
    1f80:	81 1c       	adc	r8, r1
    1f82:	91 1c       	adc	r9, r1
    1f84:	0e 5f       	subi	r16, 0xFE	; 254
    1f86:	1f 4f       	sbci	r17, 0xFF	; 255
    1f88:	88 85       	ldd	r24, Y+8	; 0x08
    1f8a:	90 e0       	ldi	r25, 0x00	; 0
    1f8c:	88 16       	cp	r8, r24
    1f8e:	99 06       	cpc	r9, r25
    1f90:	0c f4       	brge	.+2      	; 0x1f94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x170>
    1f92:	80 cf       	rjmp	.-256    	; 0x1e94 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x70>
    1f94:	df 91       	pop	r29
    1f96:	cf 91       	pop	r28
    1f98:	1f 91       	pop	r17
    1f9a:	0f 91       	pop	r16
    1f9c:	ff 90       	pop	r15
    1f9e:	df 90       	pop	r13
    1fa0:	cf 90       	pop	r12
    1fa2:	bf 90       	pop	r11
    1fa4:	af 90       	pop	r10
    1fa6:	9f 90       	pop	r9
    1fa8:	8f 90       	pop	r8
    1faa:	08 95       	ret

00001fac <_ZN16PololuQTRSensors8readLineEPjhh>:
    1fac:	a5 e0       	ldi	r26, 0x05	; 5
    1fae:	b0 e0       	ldi	r27, 0x00	; 0
    1fb0:	ec ed       	ldi	r30, 0xDC	; 220
    1fb2:	ff e0       	ldi	r31, 0x0F	; 15
    1fb4:	0c 94 4a 12 	jmp	0x2494	; 0x2494 <__prologue_saves__>
    1fb8:	4c 01       	movw	r8, r24
    1fba:	c6 2e       	mov	r12, r22
    1fbc:	e7 2e       	mov	r14, r23
    1fbe:	2d 83       	std	Y+5, r18	; 0x05
    1fc0:	0e 94 12 0f 	call	0x1e24	; 0x1e24 <_ZN16PololuQTRSensors14readCalibratedEPjh>
    1fc4:	d4 01       	movw	r26, r8
    1fc6:	18 96       	adiw	r26, 0x08	; 8
    1fc8:	4c 90       	ld	r4, X
    1fca:	18 97       	sbiw	r26, 0x08	; 8
    1fcc:	de 2c       	mov	r13, r14
    1fce:	64 2d       	mov	r22, r4
    1fd0:	70 e0       	ldi	r23, 0x00	; 0
    1fd2:	80 e0       	ldi	r24, 0x00	; 0
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	28 ee       	ldi	r18, 0xE8	; 232
    1fd8:	33 e0       	ldi	r19, 0x03	; 3
    1fda:	40 e0       	ldi	r20, 0x00	; 0
    1fdc:	50 e0       	ldi	r21, 0x00	; 0
    1fde:	0e 94 ba 11 	call	0x2374	; 0x2374 <__mulsi3>
    1fe2:	69 83       	std	Y+1, r22	; 0x01
    1fe4:	7a 83       	std	Y+2, r23	; 0x02
    1fe6:	8b 83       	std	Y+3, r24	; 0x03
    1fe8:	9c 83       	std	Y+4, r25	; 0x04
    1fea:	ee 24       	eor	r14, r14
    1fec:	ff 24       	eor	r15, r15
    1fee:	87 01       	movw	r16, r14
    1ff0:	66 24       	eor	r6, r6
    1ff2:	77 24       	eor	r7, r7
    1ff4:	88 24       	eor	r8, r8
    1ff6:	99 24       	eor	r9, r9
    1ff8:	54 01       	movw	r10, r8
    1ffa:	55 24       	eor	r5, r5
    1ffc:	36 c0       	rjmp	.+108    	; 0x206a <_ZN16PololuQTRSensors8readLineEPjhh+0xbe>
    1ffe:	f6 01       	movw	r30, r12
    2000:	30 81       	ld	r19, Z
    2002:	21 81       	ldd	r18, Z+1	; 0x01
    2004:	42 e0       	ldi	r20, 0x02	; 2
    2006:	24 2e       	mov	r2, r20
    2008:	31 2c       	mov	r3, r1
    200a:	c2 0c       	add	r12, r2
    200c:	d3 1c       	adc	r13, r3
    200e:	c9 01       	movw	r24, r18
    2010:	49 2f       	mov	r20, r25
    2012:	58 2f       	mov	r21, r24
    2014:	1a 01       	movw	r2, r20
    2016:	2d 81       	ldd	r18, Y+5	; 0x05
    2018:	22 23       	and	r18, r18
    201a:	29 f0       	breq	.+10     	; 0x2026 <_ZN16PololuQTRSensors8readLineEPjhh+0x7a>
    201c:	88 ee       	ldi	r24, 0xE8	; 232
    201e:	93 e0       	ldi	r25, 0x03	; 3
    2020:	82 19       	sub	r24, r2
    2022:	93 09       	sbc	r25, r3
    2024:	1c 01       	movw	r2, r24
    2026:	99 ec       	ldi	r25, 0xC9	; 201
    2028:	29 16       	cp	r2, r25
    202a:	31 04       	cpc	r3, r1
    202c:	2c f4       	brge	.+10     	; 0x2038 <_ZN16PololuQTRSensors8readLineEPjhh+0x8c>
    202e:	a3 e3       	ldi	r26, 0x33	; 51
    2030:	2a 16       	cp	r2, r26
    2032:	31 04       	cpc	r3, r1
    2034:	94 f0       	brlt	.+36     	; 0x205a <_ZN16PololuQTRSensors8readLineEPjhh+0xae>
    2036:	02 c0       	rjmp	.+4      	; 0x203c <_ZN16PololuQTRSensors8readLineEPjhh+0x90>
    2038:	55 24       	eor	r5, r5
    203a:	53 94       	inc	r5
    203c:	b1 01       	movw	r22, r2
    203e:	88 27       	eor	r24, r24
    2040:	77 fd       	sbrc	r23, 7
    2042:	80 95       	com	r24
    2044:	98 2f       	mov	r25, r24
    2046:	a8 01       	movw	r20, r16
    2048:	97 01       	movw	r18, r14
    204a:	0e 94 ba 11 	call	0x2374	; 0x2374 <__mulsi3>
    204e:	86 0e       	add	r8, r22
    2050:	97 1e       	adc	r9, r23
    2052:	a8 1e       	adc	r10, r24
    2054:	b9 1e       	adc	r11, r25
    2056:	62 0c       	add	r6, r2
    2058:	73 1c       	adc	r7, r3
    205a:	88 ee       	ldi	r24, 0xE8	; 232
    205c:	93 e0       	ldi	r25, 0x03	; 3
    205e:	a0 e0       	ldi	r26, 0x00	; 0
    2060:	b0 e0       	ldi	r27, 0x00	; 0
    2062:	e8 0e       	add	r14, r24
    2064:	f9 1e       	adc	r15, r25
    2066:	0a 1f       	adc	r16, r26
    2068:	1b 1f       	adc	r17, r27
    206a:	89 81       	ldd	r24, Y+1	; 0x01
    206c:	9a 81       	ldd	r25, Y+2	; 0x02
    206e:	ab 81       	ldd	r26, Y+3	; 0x03
    2070:	bc 81       	ldd	r27, Y+4	; 0x04
    2072:	e8 16       	cp	r14, r24
    2074:	f9 06       	cpc	r15, r25
    2076:	0a 07       	cpc	r16, r26
    2078:	1b 07       	cpc	r17, r27
    207a:	09 f6       	brne	.-126    	; 0x1ffe <_ZN16PololuQTRSensors8readLineEPjhh+0x52>
    207c:	55 20       	and	r5, r5
    207e:	f1 f4       	brne	.+60     	; 0x20bc <_ZN16PololuQTRSensors8readLineEPjhh+0x110>
    2080:	55 24       	eor	r5, r5
    2082:	08 94       	sec
    2084:	41 08       	sbc	r4, r1
    2086:	51 08       	sbc	r5, r1
    2088:	24 ef       	ldi	r18, 0xF4	; 244
    208a:	31 e0       	ldi	r19, 0x01	; 1
    208c:	42 9e       	mul	r4, r18
    208e:	c0 01       	movw	r24, r0
    2090:	43 9e       	mul	r4, r19
    2092:	90 0d       	add	r25, r0
    2094:	52 9e       	mul	r5, r18
    2096:	90 0d       	add	r25, r0
    2098:	11 24       	eor	r1, r1
    209a:	20 91 b9 01 	lds	r18, 0x01B9
    209e:	30 91 ba 01 	lds	r19, 0x01BA
    20a2:	28 17       	cp	r18, r24
    20a4:	39 07       	cpc	r19, r25
    20a6:	b4 f0       	brlt	.+44     	; 0x20d4 <_ZN16PololuQTRSensors8readLineEPjhh+0x128>
    20a8:	88 ee       	ldi	r24, 0xE8	; 232
    20aa:	93 e0       	ldi	r25, 0x03	; 3
    20ac:	48 9e       	mul	r4, r24
    20ae:	90 01       	movw	r18, r0
    20b0:	49 9e       	mul	r4, r25
    20b2:	30 0d       	add	r19, r0
    20b4:	58 9e       	mul	r5, r24
    20b6:	30 0d       	add	r19, r0
    20b8:	11 24       	eor	r1, r1
    20ba:	0e c0       	rjmp	.+28     	; 0x20d8 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    20bc:	93 01       	movw	r18, r6
    20be:	40 e0       	ldi	r20, 0x00	; 0
    20c0:	50 e0       	ldi	r21, 0x00	; 0
    20c2:	c5 01       	movw	r24, r10
    20c4:	b4 01       	movw	r22, r8
    20c6:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
    20ca:	20 93 b9 01 	sts	0x01B9, r18
    20ce:	30 93 ba 01 	sts	0x01BA, r19
    20d2:	02 c0       	rjmp	.+4      	; 0x20d8 <_ZN16PololuQTRSensors8readLineEPjhh+0x12c>
    20d4:	20 e0       	ldi	r18, 0x00	; 0
    20d6:	30 e0       	ldi	r19, 0x00	; 0
    20d8:	c9 01       	movw	r24, r18
    20da:	25 96       	adiw	r28, 0x05	; 5
    20dc:	e2 e1       	ldi	r30, 0x12	; 18
    20de:	0c 94 66 12 	jmp	0x24cc	; 0x24cc <__epilogue_restores__>

000020e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    20e2:	a7 e6       	ldi	r26, 0x67	; 103
    20e4:	b0 e0       	ldi	r27, 0x00	; 0
    20e6:	e7 e7       	ldi	r30, 0x77	; 119
    20e8:	f0 e1       	ldi	r31, 0x10	; 16
    20ea:	0c 94 4a 12 	jmp	0x2494	; 0x2494 <__prologue_saves__>
    20ee:	8c 01       	movw	r16, r24
    20f0:	4b 01       	movw	r8, r22
    20f2:	6a 01       	movw	r12, r20
    20f4:	a6 96       	adiw	r28, 0x26	; 38
    20f6:	2f af       	std	Y+63, r18	; 0x3f
    20f8:	a6 97       	sbiw	r28, 0x26	; 38
    20fa:	da 01       	movw	r26, r20
    20fc:	8d 91       	ld	r24, X+
    20fe:	9c 91       	ld	r25, X
    2100:	11 97       	sbiw	r26, 0x01	; 1
    2102:	00 97       	sbiw	r24, 0x00	; 0
    2104:	e9 f4       	brne	.+58     	; 0x2140 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x5e>
    2106:	f8 01       	movw	r30, r16
    2108:	80 85       	ldd	r24, Z+8	; 0x08
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	88 0f       	add	r24, r24
    210e:	99 1f       	adc	r25, r25
    2110:	0e 94 96 12 	call	0x252c	; 0x252c <malloc>
    2114:	d6 01       	movw	r26, r12
    2116:	11 96       	adiw	r26, 0x01	; 1
    2118:	9c 93       	st	X, r25
    211a:	8e 93       	st	-X, r24
    211c:	00 97       	sbiw	r24, 0x00	; 0
    211e:	09 f4       	brne	.+2      	; 0x2122 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x40>
    2120:	e2 c0       	rjmp	.+452    	; 0x22e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2122:	fc 01       	movw	r30, r24
    2124:	80 e0       	ldi	r24, 0x00	; 0
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	03 c0       	rjmp	.+6      	; 0x2130 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x4e>
    212a:	11 92       	st	Z+, r1
    212c:	11 92       	st	Z+, r1
    212e:	01 96       	adiw	r24, 0x01	; 1
    2130:	d8 01       	movw	r26, r16
    2132:	18 96       	adiw	r26, 0x08	; 8
    2134:	2c 91       	ld	r18, X
    2136:	18 97       	sbiw	r26, 0x08	; 8
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	82 17       	cp	r24, r18
    213c:	93 07       	cpc	r25, r19
    213e:	ac f3       	brlt	.-22     	; 0x212a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x48>
    2140:	f4 01       	movw	r30, r8
    2142:	80 81       	ld	r24, Z
    2144:	91 81       	ldd	r25, Z+1	; 0x01
    2146:	00 97       	sbiw	r24, 0x00	; 0
    2148:	89 f0       	breq	.+34     	; 0x216c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8a>
    214a:	ee 24       	eor	r14, r14
    214c:	ff 24       	eor	r15, r15
    214e:	5e 01       	movw	r10, r28
    2150:	08 94       	sec
    2152:	a1 1c       	adc	r10, r1
    2154:	b1 1c       	adc	r11, r1
    2156:	b1 e4       	ldi	r27, 0x41	; 65
    2158:	6b 2e       	mov	r6, r27
    215a:	71 2c       	mov	r7, r1
    215c:	6c 0e       	add	r6, r28
    215e:	7d 1e       	adc	r7, r29
    2160:	a1 e2       	ldi	r26, 0x21	; 33
    2162:	4a 2e       	mov	r4, r26
    2164:	51 2c       	mov	r5, r1
    2166:	4c 0e       	add	r4, r28
    2168:	5d 1e       	adc	r5, r29
    216a:	23 c0       	rjmp	.+70     	; 0x21b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    216c:	d8 01       	movw	r26, r16
    216e:	18 96       	adiw	r26, 0x08	; 8
    2170:	8c 91       	ld	r24, X
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	88 0f       	add	r24, r24
    2176:	99 1f       	adc	r25, r25
    2178:	0e 94 96 12 	call	0x252c	; 0x252c <malloc>
    217c:	f4 01       	movw	r30, r8
    217e:	91 83       	std	Z+1, r25	; 0x01
    2180:	80 83       	st	Z, r24
    2182:	00 97       	sbiw	r24, 0x00	; 0
    2184:	09 f4       	brne	.+2      	; 0x2188 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xa6>
    2186:	af c0       	rjmp	.+350    	; 0x22e6 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x204>
    2188:	fc 01       	movw	r30, r24
    218a:	80 e0       	ldi	r24, 0x00	; 0
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	d8 01       	movw	r26, r16
    2190:	07 c0       	rjmp	.+14     	; 0x21a0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xbe>
    2192:	1e 96       	adiw	r26, 0x0e	; 14
    2194:	2d 91       	ld	r18, X+
    2196:	3c 91       	ld	r19, X
    2198:	1f 97       	sbiw	r26, 0x0f	; 15
    219a:	21 93       	st	Z+, r18
    219c:	31 93       	st	Z+, r19
    219e:	01 96       	adiw	r24, 0x01	; 1
    21a0:	18 96       	adiw	r26, 0x08	; 8
    21a2:	2c 91       	ld	r18, X
    21a4:	18 97       	sbiw	r26, 0x08	; 8
    21a6:	30 e0       	ldi	r19, 0x00	; 0
    21a8:	82 17       	cp	r24, r18
    21aa:	93 07       	cpc	r25, r19
    21ac:	94 f3       	brlt	.-28     	; 0x2192 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb0>
    21ae:	8d 01       	movw	r16, r26
    21b0:	cc cf       	rjmp	.-104    	; 0x214a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x68>
    21b2:	c8 01       	movw	r24, r16
    21b4:	b5 01       	movw	r22, r10
    21b6:	a6 96       	adiw	r28, 0x26	; 38
    21b8:	4f ad       	ldd	r20, Y+63	; 0x3f
    21ba:	a6 97       	sbiw	r28, 0x26	; 38
    21bc:	0e 94 b3 0e 	call	0x1d66	; 0x1d66 <_ZN16PololuQTRSensors4readEPjh>
    21c0:	d8 01       	movw	r26, r16
    21c2:	18 96       	adiw	r26, 0x08	; 8
    21c4:	8c 91       	ld	r24, X
    21c6:	18 97       	sbiw	r26, 0x08	; 8
    21c8:	e8 2f       	mov	r30, r24
    21ca:	f0 e0       	ldi	r31, 0x00	; 0
    21cc:	a5 96       	adiw	r28, 0x25	; 37
    21ce:	ff af       	std	Y+63, r31	; 0x3f
    21d0:	ee af       	std	Y+62, r30	; 0x3e
    21d2:	a5 97       	sbiw	r28, 0x25	; 37
    21d4:	13 01       	movw	r2, r6
    21d6:	f5 01       	movw	r30, r10
    21d8:	a3 96       	adiw	r28, 0x23	; 35
    21da:	5f ae       	std	Y+63, r5	; 0x3f
    21dc:	4e ae       	std	Y+62, r4	; 0x3e
    21de:	a3 97       	sbiw	r28, 0x23	; 35
    21e0:	93 01       	movw	r18, r6
    21e2:	40 e0       	ldi	r20, 0x00	; 0
    21e4:	50 e0       	ldi	r21, 0x00	; 0
    21e6:	a8 96       	adiw	r28, 0x28	; 40
    21e8:	5f ae       	std	Y+63, r5	; 0x3f
    21ea:	4e ae       	std	Y+62, r4	; 0x3e
    21ec:	a8 97       	sbiw	r28, 0x28	; 40
    21ee:	37 c0       	rjmp	.+110    	; 0x225e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17c>
    21f0:	e1 14       	cp	r14, r1
    21f2:	f1 04       	cpc	r15, r1
    21f4:	61 f0       	breq	.+24     	; 0x220e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x12c>
    21f6:	a8 96       	adiw	r28, 0x28	; 40
    21f8:	ae ad       	ldd	r26, Y+62	; 0x3e
    21fa:	bf ad       	ldd	r27, Y+63	; 0x3f
    21fc:	a8 97       	sbiw	r28, 0x28	; 40
    21fe:	6d 91       	ld	r22, X+
    2200:	7c 91       	ld	r23, X
    2202:	11 97       	sbiw	r26, 0x01	; 1
    2204:	80 81       	ld	r24, Z
    2206:	91 81       	ldd	r25, Z+1	; 0x01
    2208:	68 17       	cp	r22, r24
    220a:	79 07       	cpc	r23, r25
    220c:	60 f4       	brcc	.+24     	; 0x2226 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x144>
    220e:	80 81       	ld	r24, Z
    2210:	91 81       	ldd	r25, Z+1	; 0x01
    2212:	a8 96       	adiw	r28, 0x28	; 40
    2214:	ae ad       	ldd	r26, Y+62	; 0x3e
    2216:	bf ad       	ldd	r27, Y+63	; 0x3f
    2218:	a8 97       	sbiw	r28, 0x28	; 40
    221a:	11 96       	adiw	r26, 0x01	; 1
    221c:	9c 93       	st	X, r25
    221e:	8e 93       	st	-X, r24
    2220:	e1 14       	cp	r14, r1
    2222:	f1 04       	cpc	r15, r1
    2224:	49 f0       	breq	.+18     	; 0x2238 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x156>
    2226:	d9 01       	movw	r26, r18
    2228:	6d 91       	ld	r22, X+
    222a:	7c 91       	ld	r23, X
    222c:	11 97       	sbiw	r26, 0x01	; 1
    222e:	80 81       	ld	r24, Z
    2230:	91 81       	ldd	r25, Z+1	; 0x01
    2232:	86 17       	cp	r24, r22
    2234:	97 07       	cpc	r25, r23
    2236:	28 f4       	brcc	.+10     	; 0x2242 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x160>
    2238:	80 81       	ld	r24, Z
    223a:	91 81       	ldd	r25, Z+1	; 0x01
    223c:	d9 01       	movw	r26, r18
    223e:	8d 93       	st	X+, r24
    2240:	9c 93       	st	X, r25
    2242:	4f 5f       	subi	r20, 0xFF	; 255
    2244:	5f 4f       	sbci	r21, 0xFF	; 255
    2246:	2e 5f       	subi	r18, 0xFE	; 254
    2248:	3f 4f       	sbci	r19, 0xFF	; 255
    224a:	32 96       	adiw	r30, 0x02	; 2
    224c:	a8 96       	adiw	r28, 0x28	; 40
    224e:	8e ad       	ldd	r24, Y+62	; 0x3e
    2250:	9f ad       	ldd	r25, Y+63	; 0x3f
    2252:	a8 97       	sbiw	r28, 0x28	; 40
    2254:	02 96       	adiw	r24, 0x02	; 2
    2256:	a8 96       	adiw	r28, 0x28	; 40
    2258:	9f af       	std	Y+63, r25	; 0x3f
    225a:	8e af       	std	Y+62, r24	; 0x3e
    225c:	a8 97       	sbiw	r28, 0x28	; 40
    225e:	a5 96       	adiw	r28, 0x25	; 37
    2260:	ae ad       	ldd	r26, Y+62	; 0x3e
    2262:	bf ad       	ldd	r27, Y+63	; 0x3f
    2264:	a5 97       	sbiw	r28, 0x25	; 37
    2266:	4a 17       	cp	r20, r26
    2268:	5b 07       	cpc	r21, r27
    226a:	14 f2       	brlt	.-124    	; 0x21f0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x10e>
    226c:	08 94       	sec
    226e:	e1 1c       	adc	r14, r1
    2270:	f1 1c       	adc	r15, r1
    2272:	ba e0       	ldi	r27, 0x0A	; 10
    2274:	eb 16       	cp	r14, r27
    2276:	f1 04       	cpc	r15, r1
    2278:	09 f0       	breq	.+2      	; 0x227c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x19a>
    227a:	9b cf       	rjmp	.-202    	; 0x21b2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xd0>
    227c:	80 e0       	ldi	r24, 0x00	; 0
    227e:	90 e0       	ldi	r25, 0x00	; 0
    2280:	2c c0       	rjmp	.+88     	; 0x22da <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f8>
    2282:	f1 01       	movw	r30, r2
    2284:	41 91       	ld	r20, Z+
    2286:	51 91       	ld	r21, Z+
    2288:	1f 01       	movw	r2, r30
    228a:	bc 01       	movw	r22, r24
    228c:	66 0f       	add	r22, r22
    228e:	77 1f       	adc	r23, r23
    2290:	d6 01       	movw	r26, r12
    2292:	ed 91       	ld	r30, X+
    2294:	fc 91       	ld	r31, X
    2296:	11 97       	sbiw	r26, 0x01	; 1
    2298:	e6 0f       	add	r30, r22
    229a:	f7 1f       	adc	r31, r23
    229c:	20 81       	ld	r18, Z
    229e:	31 81       	ldd	r19, Z+1	; 0x01
    22a0:	24 17       	cp	r18, r20
    22a2:	35 07       	cpc	r19, r21
    22a4:	10 f4       	brcc	.+4      	; 0x22aa <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1c8>
    22a6:	51 83       	std	Z+1, r21	; 0x01
    22a8:	40 83       	st	Z, r20
    22aa:	a3 96       	adiw	r28, 0x23	; 35
    22ac:	ee ad       	ldd	r30, Y+62	; 0x3e
    22ae:	ff ad       	ldd	r31, Y+63	; 0x3f
    22b0:	a3 97       	sbiw	r28, 0x23	; 35
    22b2:	41 91       	ld	r20, Z+
    22b4:	51 91       	ld	r21, Z+
    22b6:	a3 96       	adiw	r28, 0x23	; 35
    22b8:	ff af       	std	Y+63, r31	; 0x3f
    22ba:	ee af       	std	Y+62, r30	; 0x3e
    22bc:	a3 97       	sbiw	r28, 0x23	; 35
    22be:	d4 01       	movw	r26, r8
    22c0:	ed 91       	ld	r30, X+
    22c2:	fc 91       	ld	r31, X
    22c4:	11 97       	sbiw	r26, 0x01	; 1
    22c6:	e6 0f       	add	r30, r22
    22c8:	f7 1f       	adc	r31, r23
    22ca:	20 81       	ld	r18, Z
    22cc:	31 81       	ldd	r19, Z+1	; 0x01
    22ce:	42 17       	cp	r20, r18
    22d0:	53 07       	cpc	r21, r19
    22d2:	10 f4       	brcc	.+4      	; 0x22d8 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1f6>
    22d4:	51 83       	std	Z+1, r21	; 0x01
    22d6:	40 83       	st	Z, r20
    22d8:	01 96       	adiw	r24, 0x01	; 1
    22da:	f8 01       	movw	r30, r16
    22dc:	20 85       	ldd	r18, Z+8	; 0x08
    22de:	30 e0       	ldi	r19, 0x00	; 0
    22e0:	82 17       	cp	r24, r18
    22e2:	93 07       	cpc	r25, r19
    22e4:	74 f2       	brlt	.-100    	; 0x2282 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1a0>
    22e6:	c9 59       	subi	r28, 0x99	; 153
    22e8:	df 4f       	sbci	r29, 0xFF	; 255
    22ea:	e2 e1       	ldi	r30, 0x12	; 18
    22ec:	0c 94 66 12 	jmp	0x24cc	; 0x24cc <__epilogue_restores__>

000022f0 <_ZN16PololuQTRSensors9calibrateEh>:
    22f0:	1f 93       	push	r17
    22f2:	cf 93       	push	r28
    22f4:	df 93       	push	r29
    22f6:	ec 01       	movw	r28, r24
    22f8:	16 2f       	mov	r17, r22
    22fa:	86 2f       	mov	r24, r22
    22fc:	81 50       	subi	r24, 0x01	; 1
    22fe:	82 30       	cpi	r24, 0x02	; 2
    2300:	58 f4       	brcc	.+22     	; 0x2318 <_ZN16PololuQTRSensors9calibrateEh+0x28>
    2302:	ae 01       	movw	r20, r28
    2304:	4e 5f       	subi	r20, 0xFE	; 254
    2306:	5f 4f       	sbci	r21, 0xFF	; 255
    2308:	ce 01       	movw	r24, r28
    230a:	be 01       	movw	r22, r28
    230c:	21 e0       	ldi	r18, 0x01	; 1
    230e:	0e 94 71 10 	call	0x20e2	; 0x20e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2312:	12 30       	cpi	r17, 0x02	; 2
    2314:	19 f0       	breq	.+6      	; 0x231c <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    2316:	0c c0       	rjmp	.+24     	; 0x2330 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    2318:	66 23       	and	r22, r22
    231a:	51 f4       	brne	.+20     	; 0x2330 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    231c:	be 01       	movw	r22, r28
    231e:	6c 5f       	subi	r22, 0xFC	; 252
    2320:	7f 4f       	sbci	r23, 0xFF	; 255
    2322:	ae 01       	movw	r20, r28
    2324:	4a 5f       	subi	r20, 0xFA	; 250
    2326:	5f 4f       	sbci	r21, 0xFF	; 255
    2328:	ce 01       	movw	r24, r28
    232a:	20 e0       	ldi	r18, 0x00	; 0
    232c:	0e 94 71 10 	call	0x20e2	; 0x20e2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2330:	df 91       	pop	r29
    2332:	cf 91       	pop	r28
    2334:	1f 91       	pop	r17
    2336:	08 95       	ret

00002338 <_ZN16PololuQTRSensorsD1Ev>:
    2338:	cf 93       	push	r28
    233a:	df 93       	push	r29
    233c:	ec 01       	movw	r28, r24
    233e:	8a 81       	ldd	r24, Y+2	; 0x02
    2340:	9b 81       	ldd	r25, Y+3	; 0x03
    2342:	00 97       	sbiw	r24, 0x00	; 0
    2344:	11 f0       	breq	.+4      	; 0x234a <_ZN16PololuQTRSensorsD1Ev+0x12>
    2346:	0e 94 2e 13 	call	0x265c	; 0x265c <free>
    234a:	8e 81       	ldd	r24, Y+6	; 0x06
    234c:	9f 81       	ldd	r25, Y+7	; 0x07
    234e:	00 97       	sbiw	r24, 0x00	; 0
    2350:	11 f0       	breq	.+4      	; 0x2356 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    2352:	0e 94 2e 13 	call	0x265c	; 0x265c <free>
    2356:	88 81       	ld	r24, Y
    2358:	99 81       	ldd	r25, Y+1	; 0x01
    235a:	00 97       	sbiw	r24, 0x00	; 0
    235c:	11 f0       	breq	.+4      	; 0x2362 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    235e:	0e 94 2e 13 	call	0x265c	; 0x265c <free>
    2362:	8c 81       	ldd	r24, Y+4	; 0x04
    2364:	9d 81       	ldd	r25, Y+5	; 0x05
    2366:	00 97       	sbiw	r24, 0x00	; 0
    2368:	11 f0       	breq	.+4      	; 0x236e <_ZN16PololuQTRSensorsD1Ev+0x36>
    236a:	0e 94 2e 13 	call	0x265c	; 0x265c <free>
    236e:	df 91       	pop	r29
    2370:	cf 91       	pop	r28
    2372:	08 95       	ret

00002374 <__mulsi3>:
    2374:	db 01       	movw	r26, r22
    2376:	8f 93       	push	r24
    2378:	9f 93       	push	r25
    237a:	0e 94 3f 12 	call	0x247e	; 0x247e <__muluhisi3>
    237e:	bf 91       	pop	r27
    2380:	af 91       	pop	r26
    2382:	a2 9f       	mul	r26, r18
    2384:	80 0d       	add	r24, r0
    2386:	91 1d       	adc	r25, r1
    2388:	a3 9f       	mul	r26, r19
    238a:	90 0d       	add	r25, r0
    238c:	b2 9f       	mul	r27, r18
    238e:	90 0d       	add	r25, r0
    2390:	11 24       	eor	r1, r1
    2392:	08 95       	ret

00002394 <__udivmodqi4>:
    2394:	99 1b       	sub	r25, r25
    2396:	79 e0       	ldi	r23, 0x09	; 9
    2398:	04 c0       	rjmp	.+8      	; 0x23a2 <__udivmodqi4_ep>

0000239a <__udivmodqi4_loop>:
    239a:	99 1f       	adc	r25, r25
    239c:	96 17       	cp	r25, r22
    239e:	08 f0       	brcs	.+2      	; 0x23a2 <__udivmodqi4_ep>
    23a0:	96 1b       	sub	r25, r22

000023a2 <__udivmodqi4_ep>:
    23a2:	88 1f       	adc	r24, r24
    23a4:	7a 95       	dec	r23
    23a6:	c9 f7       	brne	.-14     	; 0x239a <__udivmodqi4_loop>
    23a8:	80 95       	com	r24
    23aa:	08 95       	ret

000023ac <__udivmodhi4>:
    23ac:	aa 1b       	sub	r26, r26
    23ae:	bb 1b       	sub	r27, r27
    23b0:	51 e1       	ldi	r21, 0x11	; 17
    23b2:	07 c0       	rjmp	.+14     	; 0x23c2 <__udivmodhi4_ep>

000023b4 <__udivmodhi4_loop>:
    23b4:	aa 1f       	adc	r26, r26
    23b6:	bb 1f       	adc	r27, r27
    23b8:	a6 17       	cp	r26, r22
    23ba:	b7 07       	cpc	r27, r23
    23bc:	10 f0       	brcs	.+4      	; 0x23c2 <__udivmodhi4_ep>
    23be:	a6 1b       	sub	r26, r22
    23c0:	b7 0b       	sbc	r27, r23

000023c2 <__udivmodhi4_ep>:
    23c2:	88 1f       	adc	r24, r24
    23c4:	99 1f       	adc	r25, r25
    23c6:	5a 95       	dec	r21
    23c8:	a9 f7       	brne	.-22     	; 0x23b4 <__udivmodhi4_loop>
    23ca:	80 95       	com	r24
    23cc:	90 95       	com	r25
    23ce:	bc 01       	movw	r22, r24
    23d0:	cd 01       	movw	r24, r26
    23d2:	08 95       	ret

000023d4 <__divmodhi4>:
    23d4:	97 fb       	bst	r25, 7
    23d6:	07 2e       	mov	r0, r23
    23d8:	16 f4       	brtc	.+4      	; 0x23de <__divmodhi4+0xa>
    23da:	00 94       	com	r0
    23dc:	07 d0       	rcall	.+14     	; 0x23ec <__divmodhi4_neg1>
    23de:	77 fd       	sbrc	r23, 7
    23e0:	09 d0       	rcall	.+18     	; 0x23f4 <__divmodhi4_neg2>
    23e2:	0e 94 d6 11 	call	0x23ac	; 0x23ac <__udivmodhi4>
    23e6:	07 fc       	sbrc	r0, 7
    23e8:	05 d0       	rcall	.+10     	; 0x23f4 <__divmodhi4_neg2>
    23ea:	3e f4       	brtc	.+14     	; 0x23fa <__divmodhi4_exit>

000023ec <__divmodhi4_neg1>:
    23ec:	90 95       	com	r25
    23ee:	81 95       	neg	r24
    23f0:	9f 4f       	sbci	r25, 0xFF	; 255
    23f2:	08 95       	ret

000023f4 <__divmodhi4_neg2>:
    23f4:	70 95       	com	r23
    23f6:	61 95       	neg	r22
    23f8:	7f 4f       	sbci	r23, 0xFF	; 255

000023fa <__divmodhi4_exit>:
    23fa:	08 95       	ret

000023fc <__udivmodsi4>:
    23fc:	a1 e2       	ldi	r26, 0x21	; 33
    23fe:	1a 2e       	mov	r1, r26
    2400:	aa 1b       	sub	r26, r26
    2402:	bb 1b       	sub	r27, r27
    2404:	fd 01       	movw	r30, r26
    2406:	0d c0       	rjmp	.+26     	; 0x2422 <__udivmodsi4_ep>

00002408 <__udivmodsi4_loop>:
    2408:	aa 1f       	adc	r26, r26
    240a:	bb 1f       	adc	r27, r27
    240c:	ee 1f       	adc	r30, r30
    240e:	ff 1f       	adc	r31, r31
    2410:	a2 17       	cp	r26, r18
    2412:	b3 07       	cpc	r27, r19
    2414:	e4 07       	cpc	r30, r20
    2416:	f5 07       	cpc	r31, r21
    2418:	20 f0       	brcs	.+8      	; 0x2422 <__udivmodsi4_ep>
    241a:	a2 1b       	sub	r26, r18
    241c:	b3 0b       	sbc	r27, r19
    241e:	e4 0b       	sbc	r30, r20
    2420:	f5 0b       	sbc	r31, r21

00002422 <__udivmodsi4_ep>:
    2422:	66 1f       	adc	r22, r22
    2424:	77 1f       	adc	r23, r23
    2426:	88 1f       	adc	r24, r24
    2428:	99 1f       	adc	r25, r25
    242a:	1a 94       	dec	r1
    242c:	69 f7       	brne	.-38     	; 0x2408 <__udivmodsi4_loop>
    242e:	60 95       	com	r22
    2430:	70 95       	com	r23
    2432:	80 95       	com	r24
    2434:	90 95       	com	r25
    2436:	9b 01       	movw	r18, r22
    2438:	ac 01       	movw	r20, r24
    243a:	bd 01       	movw	r22, r26
    243c:	cf 01       	movw	r24, r30
    243e:	08 95       	ret

00002440 <__divmodsi4>:
    2440:	05 2e       	mov	r0, r21
    2442:	97 fb       	bst	r25, 7
    2444:	1e f4       	brtc	.+6      	; 0x244c <__divmodsi4+0xc>
    2446:	00 94       	com	r0
    2448:	0e 94 37 12 	call	0x246e	; 0x246e <__negsi2>
    244c:	57 fd       	sbrc	r21, 7
    244e:	07 d0       	rcall	.+14     	; 0x245e <__divmodsi4_neg2>
    2450:	0e 94 fe 11 	call	0x23fc	; 0x23fc <__udivmodsi4>
    2454:	07 fc       	sbrc	r0, 7
    2456:	03 d0       	rcall	.+6      	; 0x245e <__divmodsi4_neg2>
    2458:	4e f4       	brtc	.+18     	; 0x246c <__divmodsi4_exit>
    245a:	0c 94 37 12 	jmp	0x246e	; 0x246e <__negsi2>

0000245e <__divmodsi4_neg2>:
    245e:	50 95       	com	r21
    2460:	40 95       	com	r20
    2462:	30 95       	com	r19
    2464:	21 95       	neg	r18
    2466:	3f 4f       	sbci	r19, 0xFF	; 255
    2468:	4f 4f       	sbci	r20, 0xFF	; 255
    246a:	5f 4f       	sbci	r21, 0xFF	; 255

0000246c <__divmodsi4_exit>:
    246c:	08 95       	ret

0000246e <__negsi2>:
    246e:	90 95       	com	r25
    2470:	80 95       	com	r24
    2472:	70 95       	com	r23
    2474:	61 95       	neg	r22
    2476:	7f 4f       	sbci	r23, 0xFF	; 255
    2478:	8f 4f       	sbci	r24, 0xFF	; 255
    247a:	9f 4f       	sbci	r25, 0xFF	; 255
    247c:	08 95       	ret

0000247e <__muluhisi3>:
    247e:	0e 94 87 12 	call	0x250e	; 0x250e <__umulhisi3>
    2482:	a5 9f       	mul	r26, r21
    2484:	90 0d       	add	r25, r0
    2486:	b4 9f       	mul	r27, r20
    2488:	90 0d       	add	r25, r0
    248a:	a4 9f       	mul	r26, r20
    248c:	80 0d       	add	r24, r0
    248e:	91 1d       	adc	r25, r1
    2490:	11 24       	eor	r1, r1
    2492:	08 95       	ret

00002494 <__prologue_saves__>:
    2494:	2f 92       	push	r2
    2496:	3f 92       	push	r3
    2498:	4f 92       	push	r4
    249a:	5f 92       	push	r5
    249c:	6f 92       	push	r6
    249e:	7f 92       	push	r7
    24a0:	8f 92       	push	r8
    24a2:	9f 92       	push	r9
    24a4:	af 92       	push	r10
    24a6:	bf 92       	push	r11
    24a8:	cf 92       	push	r12
    24aa:	df 92       	push	r13
    24ac:	ef 92       	push	r14
    24ae:	ff 92       	push	r15
    24b0:	0f 93       	push	r16
    24b2:	1f 93       	push	r17
    24b4:	cf 93       	push	r28
    24b6:	df 93       	push	r29
    24b8:	cd b7       	in	r28, 0x3d	; 61
    24ba:	de b7       	in	r29, 0x3e	; 62
    24bc:	ca 1b       	sub	r28, r26
    24be:	db 0b       	sbc	r29, r27
    24c0:	0f b6       	in	r0, 0x3f	; 63
    24c2:	f8 94       	cli
    24c4:	de bf       	out	0x3e, r29	; 62
    24c6:	0f be       	out	0x3f, r0	; 63
    24c8:	cd bf       	out	0x3d, r28	; 61
    24ca:	09 94       	ijmp

000024cc <__epilogue_restores__>:
    24cc:	2a 88       	ldd	r2, Y+18	; 0x12
    24ce:	39 88       	ldd	r3, Y+17	; 0x11
    24d0:	48 88       	ldd	r4, Y+16	; 0x10
    24d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    24d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    24d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    24d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    24da:	9b 84       	ldd	r9, Y+11	; 0x0b
    24dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    24de:	b9 84       	ldd	r11, Y+9	; 0x09
    24e0:	c8 84       	ldd	r12, Y+8	; 0x08
    24e2:	df 80       	ldd	r13, Y+7	; 0x07
    24e4:	ee 80       	ldd	r14, Y+6	; 0x06
    24e6:	fd 80       	ldd	r15, Y+5	; 0x05
    24e8:	0c 81       	ldd	r16, Y+4	; 0x04
    24ea:	1b 81       	ldd	r17, Y+3	; 0x03
    24ec:	aa 81       	ldd	r26, Y+2	; 0x02
    24ee:	b9 81       	ldd	r27, Y+1	; 0x01
    24f0:	ce 0f       	add	r28, r30
    24f2:	d1 1d       	adc	r29, r1
    24f4:	0f b6       	in	r0, 0x3f	; 63
    24f6:	f8 94       	cli
    24f8:	de bf       	out	0x3e, r29	; 62
    24fa:	0f be       	out	0x3f, r0	; 63
    24fc:	cd bf       	out	0x3d, r28	; 61
    24fe:	ed 01       	movw	r28, r26
    2500:	08 95       	ret

00002502 <__tablejump2__>:
    2502:	ee 0f       	add	r30, r30
    2504:	ff 1f       	adc	r31, r31

00002506 <__tablejump__>:
    2506:	05 90       	lpm	r0, Z+
    2508:	f4 91       	lpm	r31, Z
    250a:	e0 2d       	mov	r30, r0
    250c:	09 94       	ijmp

0000250e <__umulhisi3>:
    250e:	a2 9f       	mul	r26, r18
    2510:	b0 01       	movw	r22, r0
    2512:	b3 9f       	mul	r27, r19
    2514:	c0 01       	movw	r24, r0
    2516:	a3 9f       	mul	r26, r19
    2518:	70 0d       	add	r23, r0
    251a:	81 1d       	adc	r24, r1
    251c:	11 24       	eor	r1, r1
    251e:	91 1d       	adc	r25, r1
    2520:	b2 9f       	mul	r27, r18
    2522:	70 0d       	add	r23, r0
    2524:	81 1d       	adc	r24, r1
    2526:	11 24       	eor	r1, r1
    2528:	91 1d       	adc	r25, r1
    252a:	08 95       	ret

0000252c <malloc>:
    252c:	cf 93       	push	r28
    252e:	df 93       	push	r29
    2530:	82 30       	cpi	r24, 0x02	; 2
    2532:	91 05       	cpc	r25, r1
    2534:	10 f4       	brcc	.+4      	; 0x253a <malloc+0xe>
    2536:	82 e0       	ldi	r24, 0x02	; 2
    2538:	90 e0       	ldi	r25, 0x00	; 0
    253a:	e0 91 bf 01 	lds	r30, 0x01BF
    253e:	f0 91 c0 01 	lds	r31, 0x01C0
    2542:	20 e0       	ldi	r18, 0x00	; 0
    2544:	30 e0       	ldi	r19, 0x00	; 0
    2546:	a0 e0       	ldi	r26, 0x00	; 0
    2548:	b0 e0       	ldi	r27, 0x00	; 0
    254a:	30 97       	sbiw	r30, 0x00	; 0
    254c:	39 f1       	breq	.+78     	; 0x259c <malloc+0x70>
    254e:	40 81       	ld	r20, Z
    2550:	51 81       	ldd	r21, Z+1	; 0x01
    2552:	48 17       	cp	r20, r24
    2554:	59 07       	cpc	r21, r25
    2556:	b8 f0       	brcs	.+46     	; 0x2586 <malloc+0x5a>
    2558:	48 17       	cp	r20, r24
    255a:	59 07       	cpc	r21, r25
    255c:	71 f4       	brne	.+28     	; 0x257a <malloc+0x4e>
    255e:	82 81       	ldd	r24, Z+2	; 0x02
    2560:	93 81       	ldd	r25, Z+3	; 0x03
    2562:	10 97       	sbiw	r26, 0x00	; 0
    2564:	29 f0       	breq	.+10     	; 0x2570 <malloc+0x44>
    2566:	13 96       	adiw	r26, 0x03	; 3
    2568:	9c 93       	st	X, r25
    256a:	8e 93       	st	-X, r24
    256c:	12 97       	sbiw	r26, 0x02	; 2
    256e:	2c c0       	rjmp	.+88     	; 0x25c8 <malloc+0x9c>
    2570:	90 93 c0 01 	sts	0x01C0, r25
    2574:	80 93 bf 01 	sts	0x01BF, r24
    2578:	27 c0       	rjmp	.+78     	; 0x25c8 <malloc+0x9c>
    257a:	21 15       	cp	r18, r1
    257c:	31 05       	cpc	r19, r1
    257e:	31 f0       	breq	.+12     	; 0x258c <malloc+0x60>
    2580:	42 17       	cp	r20, r18
    2582:	53 07       	cpc	r21, r19
    2584:	18 f0       	brcs	.+6      	; 0x258c <malloc+0x60>
    2586:	a9 01       	movw	r20, r18
    2588:	db 01       	movw	r26, r22
    258a:	01 c0       	rjmp	.+2      	; 0x258e <malloc+0x62>
    258c:	ef 01       	movw	r28, r30
    258e:	9a 01       	movw	r18, r20
    2590:	bd 01       	movw	r22, r26
    2592:	df 01       	movw	r26, r30
    2594:	02 80       	ldd	r0, Z+2	; 0x02
    2596:	f3 81       	ldd	r31, Z+3	; 0x03
    2598:	e0 2d       	mov	r30, r0
    259a:	d7 cf       	rjmp	.-82     	; 0x254a <malloc+0x1e>
    259c:	21 15       	cp	r18, r1
    259e:	31 05       	cpc	r19, r1
    25a0:	f9 f0       	breq	.+62     	; 0x25e0 <malloc+0xb4>
    25a2:	28 1b       	sub	r18, r24
    25a4:	39 0b       	sbc	r19, r25
    25a6:	24 30       	cpi	r18, 0x04	; 4
    25a8:	31 05       	cpc	r19, r1
    25aa:	80 f4       	brcc	.+32     	; 0x25cc <malloc+0xa0>
    25ac:	8a 81       	ldd	r24, Y+2	; 0x02
    25ae:	9b 81       	ldd	r25, Y+3	; 0x03
    25b0:	61 15       	cp	r22, r1
    25b2:	71 05       	cpc	r23, r1
    25b4:	21 f0       	breq	.+8      	; 0x25be <malloc+0x92>
    25b6:	fb 01       	movw	r30, r22
    25b8:	93 83       	std	Z+3, r25	; 0x03
    25ba:	82 83       	std	Z+2, r24	; 0x02
    25bc:	04 c0       	rjmp	.+8      	; 0x25c6 <malloc+0x9a>
    25be:	90 93 c0 01 	sts	0x01C0, r25
    25c2:	80 93 bf 01 	sts	0x01BF, r24
    25c6:	fe 01       	movw	r30, r28
    25c8:	32 96       	adiw	r30, 0x02	; 2
    25ca:	44 c0       	rjmp	.+136    	; 0x2654 <malloc+0x128>
    25cc:	fe 01       	movw	r30, r28
    25ce:	e2 0f       	add	r30, r18
    25d0:	f3 1f       	adc	r31, r19
    25d2:	81 93       	st	Z+, r24
    25d4:	91 93       	st	Z+, r25
    25d6:	22 50       	subi	r18, 0x02	; 2
    25d8:	31 09       	sbc	r19, r1
    25da:	39 83       	std	Y+1, r19	; 0x01
    25dc:	28 83       	st	Y, r18
    25de:	3a c0       	rjmp	.+116    	; 0x2654 <malloc+0x128>
    25e0:	20 91 bd 01 	lds	r18, 0x01BD
    25e4:	30 91 be 01 	lds	r19, 0x01BE
    25e8:	23 2b       	or	r18, r19
    25ea:	41 f4       	brne	.+16     	; 0x25fc <malloc+0xd0>
    25ec:	20 91 2d 01 	lds	r18, 0x012D
    25f0:	30 91 2e 01 	lds	r19, 0x012E
    25f4:	30 93 be 01 	sts	0x01BE, r19
    25f8:	20 93 bd 01 	sts	0x01BD, r18
    25fc:	20 91 2b 01 	lds	r18, 0x012B
    2600:	30 91 2c 01 	lds	r19, 0x012C
    2604:	21 15       	cp	r18, r1
    2606:	31 05       	cpc	r19, r1
    2608:	41 f4       	brne	.+16     	; 0x261a <malloc+0xee>
    260a:	2d b7       	in	r18, 0x3d	; 61
    260c:	3e b7       	in	r19, 0x3e	; 62
    260e:	40 91 2f 01 	lds	r20, 0x012F
    2612:	50 91 30 01 	lds	r21, 0x0130
    2616:	24 1b       	sub	r18, r20
    2618:	35 0b       	sbc	r19, r21
    261a:	e0 91 bd 01 	lds	r30, 0x01BD
    261e:	f0 91 be 01 	lds	r31, 0x01BE
    2622:	e2 17       	cp	r30, r18
    2624:	f3 07       	cpc	r31, r19
    2626:	a0 f4       	brcc	.+40     	; 0x2650 <malloc+0x124>
    2628:	2e 1b       	sub	r18, r30
    262a:	3f 0b       	sbc	r19, r31
    262c:	28 17       	cp	r18, r24
    262e:	39 07       	cpc	r19, r25
    2630:	78 f0       	brcs	.+30     	; 0x2650 <malloc+0x124>
    2632:	ac 01       	movw	r20, r24
    2634:	4e 5f       	subi	r20, 0xFE	; 254
    2636:	5f 4f       	sbci	r21, 0xFF	; 255
    2638:	24 17       	cp	r18, r20
    263a:	35 07       	cpc	r19, r21
    263c:	48 f0       	brcs	.+18     	; 0x2650 <malloc+0x124>
    263e:	4e 0f       	add	r20, r30
    2640:	5f 1f       	adc	r21, r31
    2642:	50 93 be 01 	sts	0x01BE, r21
    2646:	40 93 bd 01 	sts	0x01BD, r20
    264a:	81 93       	st	Z+, r24
    264c:	91 93       	st	Z+, r25
    264e:	02 c0       	rjmp	.+4      	; 0x2654 <malloc+0x128>
    2650:	e0 e0       	ldi	r30, 0x00	; 0
    2652:	f0 e0       	ldi	r31, 0x00	; 0
    2654:	cf 01       	movw	r24, r30
    2656:	df 91       	pop	r29
    2658:	cf 91       	pop	r28
    265a:	08 95       	ret

0000265c <free>:
    265c:	cf 93       	push	r28
    265e:	df 93       	push	r29
    2660:	00 97       	sbiw	r24, 0x00	; 0
    2662:	09 f4       	brne	.+2      	; 0x2666 <free+0xa>
    2664:	87 c0       	rjmp	.+270    	; 0x2774 <free+0x118>
    2666:	fc 01       	movw	r30, r24
    2668:	32 97       	sbiw	r30, 0x02	; 2
    266a:	13 82       	std	Z+3, r1	; 0x03
    266c:	12 82       	std	Z+2, r1	; 0x02
    266e:	c0 91 bf 01 	lds	r28, 0x01BF
    2672:	d0 91 c0 01 	lds	r29, 0x01C0
    2676:	20 97       	sbiw	r28, 0x00	; 0
    2678:	81 f4       	brne	.+32     	; 0x269a <free+0x3e>
    267a:	20 81       	ld	r18, Z
    267c:	31 81       	ldd	r19, Z+1	; 0x01
    267e:	28 0f       	add	r18, r24
    2680:	39 1f       	adc	r19, r25
    2682:	80 91 bd 01 	lds	r24, 0x01BD
    2686:	90 91 be 01 	lds	r25, 0x01BE
    268a:	82 17       	cp	r24, r18
    268c:	93 07       	cpc	r25, r19
    268e:	79 f5       	brne	.+94     	; 0x26ee <free+0x92>
    2690:	f0 93 be 01 	sts	0x01BE, r31
    2694:	e0 93 bd 01 	sts	0x01BD, r30
    2698:	6d c0       	rjmp	.+218    	; 0x2774 <free+0x118>
    269a:	de 01       	movw	r26, r28
    269c:	20 e0       	ldi	r18, 0x00	; 0
    269e:	30 e0       	ldi	r19, 0x00	; 0
    26a0:	ae 17       	cp	r26, r30
    26a2:	bf 07       	cpc	r27, r31
    26a4:	50 f4       	brcc	.+20     	; 0x26ba <free+0x5e>
    26a6:	12 96       	adiw	r26, 0x02	; 2
    26a8:	4d 91       	ld	r20, X+
    26aa:	5c 91       	ld	r21, X
    26ac:	13 97       	sbiw	r26, 0x03	; 3
    26ae:	9d 01       	movw	r18, r26
    26b0:	41 15       	cp	r20, r1
    26b2:	51 05       	cpc	r21, r1
    26b4:	09 f1       	breq	.+66     	; 0x26f8 <free+0x9c>
    26b6:	da 01       	movw	r26, r20
    26b8:	f3 cf       	rjmp	.-26     	; 0x26a0 <free+0x44>
    26ba:	b3 83       	std	Z+3, r27	; 0x03
    26bc:	a2 83       	std	Z+2, r26	; 0x02
    26be:	40 81       	ld	r20, Z
    26c0:	51 81       	ldd	r21, Z+1	; 0x01
    26c2:	84 0f       	add	r24, r20
    26c4:	95 1f       	adc	r25, r21
    26c6:	8a 17       	cp	r24, r26
    26c8:	9b 07       	cpc	r25, r27
    26ca:	71 f4       	brne	.+28     	; 0x26e8 <free+0x8c>
    26cc:	8d 91       	ld	r24, X+
    26ce:	9c 91       	ld	r25, X
    26d0:	11 97       	sbiw	r26, 0x01	; 1
    26d2:	84 0f       	add	r24, r20
    26d4:	95 1f       	adc	r25, r21
    26d6:	02 96       	adiw	r24, 0x02	; 2
    26d8:	91 83       	std	Z+1, r25	; 0x01
    26da:	80 83       	st	Z, r24
    26dc:	12 96       	adiw	r26, 0x02	; 2
    26de:	8d 91       	ld	r24, X+
    26e0:	9c 91       	ld	r25, X
    26e2:	13 97       	sbiw	r26, 0x03	; 3
    26e4:	93 83       	std	Z+3, r25	; 0x03
    26e6:	82 83       	std	Z+2, r24	; 0x02
    26e8:	21 15       	cp	r18, r1
    26ea:	31 05       	cpc	r19, r1
    26ec:	29 f4       	brne	.+10     	; 0x26f8 <free+0x9c>
    26ee:	f0 93 c0 01 	sts	0x01C0, r31
    26f2:	e0 93 bf 01 	sts	0x01BF, r30
    26f6:	3e c0       	rjmp	.+124    	; 0x2774 <free+0x118>
    26f8:	d9 01       	movw	r26, r18
    26fa:	13 96       	adiw	r26, 0x03	; 3
    26fc:	fc 93       	st	X, r31
    26fe:	ee 93       	st	-X, r30
    2700:	12 97       	sbiw	r26, 0x02	; 2
    2702:	4d 91       	ld	r20, X+
    2704:	5d 91       	ld	r21, X+
    2706:	a4 0f       	add	r26, r20
    2708:	b5 1f       	adc	r27, r21
    270a:	ea 17       	cp	r30, r26
    270c:	fb 07       	cpc	r31, r27
    270e:	79 f4       	brne	.+30     	; 0x272e <free+0xd2>
    2710:	80 81       	ld	r24, Z
    2712:	91 81       	ldd	r25, Z+1	; 0x01
    2714:	84 0f       	add	r24, r20
    2716:	95 1f       	adc	r25, r21
    2718:	02 96       	adiw	r24, 0x02	; 2
    271a:	d9 01       	movw	r26, r18
    271c:	11 96       	adiw	r26, 0x01	; 1
    271e:	9c 93       	st	X, r25
    2720:	8e 93       	st	-X, r24
    2722:	82 81       	ldd	r24, Z+2	; 0x02
    2724:	93 81       	ldd	r25, Z+3	; 0x03
    2726:	13 96       	adiw	r26, 0x03	; 3
    2728:	9c 93       	st	X, r25
    272a:	8e 93       	st	-X, r24
    272c:	12 97       	sbiw	r26, 0x02	; 2
    272e:	e0 e0       	ldi	r30, 0x00	; 0
    2730:	f0 e0       	ldi	r31, 0x00	; 0
    2732:	8a 81       	ldd	r24, Y+2	; 0x02
    2734:	9b 81       	ldd	r25, Y+3	; 0x03
    2736:	00 97       	sbiw	r24, 0x00	; 0
    2738:	19 f0       	breq	.+6      	; 0x2740 <free+0xe4>
    273a:	fe 01       	movw	r30, r28
    273c:	ec 01       	movw	r28, r24
    273e:	f9 cf       	rjmp	.-14     	; 0x2732 <free+0xd6>
    2740:	ce 01       	movw	r24, r28
    2742:	02 96       	adiw	r24, 0x02	; 2
    2744:	28 81       	ld	r18, Y
    2746:	39 81       	ldd	r19, Y+1	; 0x01
    2748:	82 0f       	add	r24, r18
    274a:	93 1f       	adc	r25, r19
    274c:	20 91 bd 01 	lds	r18, 0x01BD
    2750:	30 91 be 01 	lds	r19, 0x01BE
    2754:	28 17       	cp	r18, r24
    2756:	39 07       	cpc	r19, r25
    2758:	69 f4       	brne	.+26     	; 0x2774 <free+0x118>
    275a:	30 97       	sbiw	r30, 0x00	; 0
    275c:	29 f4       	brne	.+10     	; 0x2768 <free+0x10c>
    275e:	10 92 c0 01 	sts	0x01C0, r1
    2762:	10 92 bf 01 	sts	0x01BF, r1
    2766:	02 c0       	rjmp	.+4      	; 0x276c <free+0x110>
    2768:	13 82       	std	Z+3, r1	; 0x03
    276a:	12 82       	std	Z+2, r1	; 0x02
    276c:	d0 93 be 01 	sts	0x01BE, r29
    2770:	c0 93 bd 01 	sts	0x01BD, r28
    2774:	df 91       	pop	r29
    2776:	cf 91       	pop	r28
    2778:	08 95       	ret

0000277a <__do_global_dtors>:
    277a:	10 e0       	ldi	r17, 0x00	; 0
    277c:	cc ea       	ldi	r28, 0xAC	; 172
    277e:	d0 e0       	ldi	r29, 0x00	; 0
    2780:	04 c0       	rjmp	.+8      	; 0x278a <__do_global_dtors+0x10>
    2782:	fe 01       	movw	r30, r28
    2784:	0e 94 83 12 	call	0x2506	; 0x2506 <__tablejump__>
    2788:	22 96       	adiw	r28, 0x02	; 2
    278a:	ce 3a       	cpi	r28, 0xAE	; 174
    278c:	d1 07       	cpc	r29, r17
    278e:	c9 f7       	brne	.-14     	; 0x2782 <__do_global_dtors+0x8>
    2790:	f8 94       	cli

00002792 <__stop_program>:
    2792:	ff cf       	rjmp	.-2      	; 0x2792 <__stop_program>
